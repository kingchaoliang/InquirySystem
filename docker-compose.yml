version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: inquiry-crm-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-inquiry_crm}
      MYSQL_USER: ${MYSQL_USER:-crm_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-crm_password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - crm-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: inquiry-crm-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123456}
    networks:
      - crm-network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inquiry-crm-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      DATABASE_URL: mysql://${MYSQL_USER:-crm_user}:${MYSQL_PASSWORD:-crm_password}@mysql:3306/${MYSQL_DATABASE:-inquiry_crm}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123456}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8000}
      # AI API配置
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      # 邮件配置
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      # 文件上传配置
      UPLOAD_MAX_SIZE: ${UPLOAD_MAX_SIZE:-10485760}
      UPLOAD_ALLOWED_TYPES: ${UPLOAD_ALLOWED_TYPES:-image/jpeg,image/png,image/gif,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端Web服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inquiry-crm-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      API_BASE_URL: ${API_BASE_URL:-http://backend:3001/api}
    ports:
      - "${FRONTEND_PORT:-8000}:80"
    depends_on:
      - backend
    networks:
      - crm-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: inquiry-crm-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - crm-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  crm-network:
    driver: bridge
