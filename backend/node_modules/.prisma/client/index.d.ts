
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Department
 * 
 */
export type Department = $Result.DefaultSelection<Prisma.$DepartmentPayload>
/**
 * Model Inquiry
 * 
 */
export type Inquiry = $Result.DefaultSelection<Prisma.$InquiryPayload>
/**
 * Model CustomFieldDefinition
 * 
 */
export type CustomFieldDefinition = $Result.DefaultSelection<Prisma.$CustomFieldDefinitionPayload>
/**
 * Model UserCustomFieldConfig
 * 
 */
export type UserCustomFieldConfig = $Result.DefaultSelection<Prisma.$UserCustomFieldConfigPayload>
/**
 * Model FollowUpRecord
 * 
 */
export type FollowUpRecord = $Result.DefaultSelection<Prisma.$FollowUpRecordPayload>
/**
 * Model AiAnalysisRecord
 * 
 */
export type AiAnalysisRecord = $Result.DefaultSelection<Prisma.$AiAnalysisRecordPayload>
/**
 * Model SystemConfig
 * 
 */
export type SystemConfig = $Result.DefaultSelection<Prisma.$SystemConfigPayload>
/**
 * Model OperationLog
 * 
 */
export type OperationLog = $Result.DefaultSelection<Prisma.$OperationLogPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserRole: {
  admin: 'admin',
  manager: 'manager',
  sales: 'sales',
  customer_service: 'customer_service'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const UserStatus: {
  active: 'active',
  inactive: 'inactive',
  suspended: 'suspended'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const DepartmentStatus: {
  active: 'active',
  inactive: 'inactive'
};

export type DepartmentStatus = (typeof DepartmentStatus)[keyof typeof DepartmentStatus]


export const CustomerType: {
  individual: 'individual',
  enterprise: 'enterprise',
  government: 'government',
  other: 'other'
};

export type CustomerType = (typeof CustomerType)[keyof typeof CustomerType]


export const Priority: {
  low: 'low',
  medium: 'medium',
  high: 'high',
  urgent: 'urgent'
};

export type Priority = (typeof Priority)[keyof typeof Priority]


export const InquiryStatus: {
  new: 'new',
  contacted: 'contacted',
  quoted: 'quoted',
  negotiating: 'negotiating',
  won: 'won',
  lost: 'lost',
  closed: 'closed'
};

export type InquiryStatus = (typeof InquiryStatus)[keyof typeof InquiryStatus]


export const CustomFieldType: {
  text: 'text',
  number: 'number',
  date: 'date',
  datetime: 'datetime',
  select: 'select',
  multiselect: 'multiselect',
  boolean: 'boolean',
  textarea: 'textarea'
};

export type CustomFieldType = (typeof CustomFieldType)[keyof typeof CustomFieldType]


export const CustomFieldStatus: {
  active: 'active',
  inactive: 'inactive'
};

export type CustomFieldStatus = (typeof CustomFieldStatus)[keyof typeof CustomFieldStatus]


export const FollowUpType: {
  phone: 'phone',
  email: 'email',
  wechat: 'wechat',
  meeting: 'meeting',
  visit: 'visit',
  other: 'other'
};

export type FollowUpType = (typeof FollowUpType)[keyof typeof FollowUpType]


export const FollowUpResult: {
  no_answer: 'no_answer',
  interested: 'interested',
  not_interested: 'not_interested',
  need_more_info: 'need_more_info',
  quoted: 'quoted',
  negotiating: 'negotiating',
  closed: 'closed'
};

export type FollowUpResult = (typeof FollowUpResult)[keyof typeof FollowUpResult]


export const AiProvider: {
  openai: 'openai',
  deepseek: 'deepseek',
  gemini: 'gemini'
};

export type AiProvider = (typeof AiProvider)[keyof typeof AiProvider]


export const AnalysisType: {
  content_analysis: 'content_analysis',
  intent_analysis: 'intent_analysis',
  sentiment_analysis: 'sentiment_analysis',
  recommendation: 'recommendation'
};

export type AnalysisType = (typeof AnalysisType)[keyof typeof AnalysisType]


export const AnalysisStatus: {
  pending: 'pending',
  completed: 'completed',
  failed: 'failed'
};

export type AnalysisStatus = (typeof AnalysisStatus)[keyof typeof AnalysisStatus]


export const ConfigType: {
  string: 'string',
  number: 'number',
  boolean: 'boolean',
  json: 'json'
};

export type ConfigType = (typeof ConfigType)[keyof typeof ConfigType]

}

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type DepartmentStatus = $Enums.DepartmentStatus

export const DepartmentStatus: typeof $Enums.DepartmentStatus

export type CustomerType = $Enums.CustomerType

export const CustomerType: typeof $Enums.CustomerType

export type Priority = $Enums.Priority

export const Priority: typeof $Enums.Priority

export type InquiryStatus = $Enums.InquiryStatus

export const InquiryStatus: typeof $Enums.InquiryStatus

export type CustomFieldType = $Enums.CustomFieldType

export const CustomFieldType: typeof $Enums.CustomFieldType

export type CustomFieldStatus = $Enums.CustomFieldStatus

export const CustomFieldStatus: typeof $Enums.CustomFieldStatus

export type FollowUpType = $Enums.FollowUpType

export const FollowUpType: typeof $Enums.FollowUpType

export type FollowUpResult = $Enums.FollowUpResult

export const FollowUpResult: typeof $Enums.FollowUpResult

export type AiProvider = $Enums.AiProvider

export const AiProvider: typeof $Enums.AiProvider

export type AnalysisType = $Enums.AnalysisType

export const AnalysisType: typeof $Enums.AnalysisType

export type AnalysisStatus = $Enums.AnalysisStatus

export const AnalysisStatus: typeof $Enums.AnalysisStatus

export type ConfigType = $Enums.ConfigType

export const ConfigType: typeof $Enums.ConfigType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.department`: Exposes CRUD operations for the **Department** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departments
    * const departments = await prisma.department.findMany()
    * ```
    */
  get department(): Prisma.DepartmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inquiry`: Exposes CRUD operations for the **Inquiry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inquiries
    * const inquiries = await prisma.inquiry.findMany()
    * ```
    */
  get inquiry(): Prisma.InquiryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customFieldDefinition`: Exposes CRUD operations for the **CustomFieldDefinition** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomFieldDefinitions
    * const customFieldDefinitions = await prisma.customFieldDefinition.findMany()
    * ```
    */
  get customFieldDefinition(): Prisma.CustomFieldDefinitionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userCustomFieldConfig`: Exposes CRUD operations for the **UserCustomFieldConfig** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserCustomFieldConfigs
    * const userCustomFieldConfigs = await prisma.userCustomFieldConfig.findMany()
    * ```
    */
  get userCustomFieldConfig(): Prisma.UserCustomFieldConfigDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.followUpRecord`: Exposes CRUD operations for the **FollowUpRecord** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FollowUpRecords
    * const followUpRecords = await prisma.followUpRecord.findMany()
    * ```
    */
  get followUpRecord(): Prisma.FollowUpRecordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aiAnalysisRecord`: Exposes CRUD operations for the **AiAnalysisRecord** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AiAnalysisRecords
    * const aiAnalysisRecords = await prisma.aiAnalysisRecord.findMany()
    * ```
    */
  get aiAnalysisRecord(): Prisma.AiAnalysisRecordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.systemConfig`: Exposes CRUD operations for the **SystemConfig** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SystemConfigs
    * const systemConfigs = await prisma.systemConfig.findMany()
    * ```
    */
  get systemConfig(): Prisma.SystemConfigDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.operationLog`: Exposes CRUD operations for the **OperationLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OperationLogs
    * const operationLogs = await prisma.operationLog.findMany()
    * ```
    */
  get operationLog(): Prisma.OperationLogDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Department: 'Department',
    Inquiry: 'Inquiry',
    CustomFieldDefinition: 'CustomFieldDefinition',
    UserCustomFieldConfig: 'UserCustomFieldConfig',
    FollowUpRecord: 'FollowUpRecord',
    AiAnalysisRecord: 'AiAnalysisRecord',
    SystemConfig: 'SystemConfig',
    OperationLog: 'OperationLog'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "department" | "inquiry" | "customFieldDefinition" | "userCustomFieldConfig" | "followUpRecord" | "aiAnalysisRecord" | "systemConfig" | "operationLog"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Department: {
        payload: Prisma.$DepartmentPayload<ExtArgs>
        fields: Prisma.DepartmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepartmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepartmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          findFirst: {
            args: Prisma.DepartmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepartmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          findMany: {
            args: Prisma.DepartmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          create: {
            args: Prisma.DepartmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          createMany: {
            args: Prisma.DepartmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepartmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          delete: {
            args: Prisma.DepartmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          update: {
            args: Prisma.DepartmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          deleteMany: {
            args: Prisma.DepartmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepartmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DepartmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          upsert: {
            args: Prisma.DepartmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          aggregate: {
            args: Prisma.DepartmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartment>
          }
          groupBy: {
            args: Prisma.DepartmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepartmentCountArgs<ExtArgs>
            result: $Utils.Optional<DepartmentCountAggregateOutputType> | number
          }
        }
      }
      Inquiry: {
        payload: Prisma.$InquiryPayload<ExtArgs>
        fields: Prisma.InquiryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InquiryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InquiryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>
          }
          findFirst: {
            args: Prisma.InquiryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InquiryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>
          }
          findMany: {
            args: Prisma.InquiryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>[]
          }
          create: {
            args: Prisma.InquiryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>
          }
          createMany: {
            args: Prisma.InquiryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InquiryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>[]
          }
          delete: {
            args: Prisma.InquiryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>
          }
          update: {
            args: Prisma.InquiryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>
          }
          deleteMany: {
            args: Prisma.InquiryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InquiryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InquiryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>[]
          }
          upsert: {
            args: Prisma.InquiryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InquiryPayload>
          }
          aggregate: {
            args: Prisma.InquiryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInquiry>
          }
          groupBy: {
            args: Prisma.InquiryGroupByArgs<ExtArgs>
            result: $Utils.Optional<InquiryGroupByOutputType>[]
          }
          count: {
            args: Prisma.InquiryCountArgs<ExtArgs>
            result: $Utils.Optional<InquiryCountAggregateOutputType> | number
          }
        }
      }
      CustomFieldDefinition: {
        payload: Prisma.$CustomFieldDefinitionPayload<ExtArgs>
        fields: Prisma.CustomFieldDefinitionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomFieldDefinitionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomFieldDefinitionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>
          }
          findFirst: {
            args: Prisma.CustomFieldDefinitionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomFieldDefinitionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>
          }
          findMany: {
            args: Prisma.CustomFieldDefinitionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>[]
          }
          create: {
            args: Prisma.CustomFieldDefinitionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>
          }
          createMany: {
            args: Prisma.CustomFieldDefinitionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomFieldDefinitionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>[]
          }
          delete: {
            args: Prisma.CustomFieldDefinitionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>
          }
          update: {
            args: Prisma.CustomFieldDefinitionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>
          }
          deleteMany: {
            args: Prisma.CustomFieldDefinitionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomFieldDefinitionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CustomFieldDefinitionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>[]
          }
          upsert: {
            args: Prisma.CustomFieldDefinitionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomFieldDefinitionPayload>
          }
          aggregate: {
            args: Prisma.CustomFieldDefinitionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomFieldDefinition>
          }
          groupBy: {
            args: Prisma.CustomFieldDefinitionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomFieldDefinitionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomFieldDefinitionCountArgs<ExtArgs>
            result: $Utils.Optional<CustomFieldDefinitionCountAggregateOutputType> | number
          }
        }
      }
      UserCustomFieldConfig: {
        payload: Prisma.$UserCustomFieldConfigPayload<ExtArgs>
        fields: Prisma.UserCustomFieldConfigFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserCustomFieldConfigFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserCustomFieldConfigFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>
          }
          findFirst: {
            args: Prisma.UserCustomFieldConfigFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserCustomFieldConfigFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>
          }
          findMany: {
            args: Prisma.UserCustomFieldConfigFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>[]
          }
          create: {
            args: Prisma.UserCustomFieldConfigCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>
          }
          createMany: {
            args: Prisma.UserCustomFieldConfigCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCustomFieldConfigCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>[]
          }
          delete: {
            args: Prisma.UserCustomFieldConfigDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>
          }
          update: {
            args: Prisma.UserCustomFieldConfigUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>
          }
          deleteMany: {
            args: Prisma.UserCustomFieldConfigDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserCustomFieldConfigUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserCustomFieldConfigUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>[]
          }
          upsert: {
            args: Prisma.UserCustomFieldConfigUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserCustomFieldConfigPayload>
          }
          aggregate: {
            args: Prisma.UserCustomFieldConfigAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserCustomFieldConfig>
          }
          groupBy: {
            args: Prisma.UserCustomFieldConfigGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserCustomFieldConfigGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCustomFieldConfigCountArgs<ExtArgs>
            result: $Utils.Optional<UserCustomFieldConfigCountAggregateOutputType> | number
          }
        }
      }
      FollowUpRecord: {
        payload: Prisma.$FollowUpRecordPayload<ExtArgs>
        fields: Prisma.FollowUpRecordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FollowUpRecordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FollowUpRecordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>
          }
          findFirst: {
            args: Prisma.FollowUpRecordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FollowUpRecordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>
          }
          findMany: {
            args: Prisma.FollowUpRecordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>[]
          }
          create: {
            args: Prisma.FollowUpRecordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>
          }
          createMany: {
            args: Prisma.FollowUpRecordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FollowUpRecordCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>[]
          }
          delete: {
            args: Prisma.FollowUpRecordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>
          }
          update: {
            args: Prisma.FollowUpRecordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>
          }
          deleteMany: {
            args: Prisma.FollowUpRecordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FollowUpRecordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FollowUpRecordUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>[]
          }
          upsert: {
            args: Prisma.FollowUpRecordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowUpRecordPayload>
          }
          aggregate: {
            args: Prisma.FollowUpRecordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFollowUpRecord>
          }
          groupBy: {
            args: Prisma.FollowUpRecordGroupByArgs<ExtArgs>
            result: $Utils.Optional<FollowUpRecordGroupByOutputType>[]
          }
          count: {
            args: Prisma.FollowUpRecordCountArgs<ExtArgs>
            result: $Utils.Optional<FollowUpRecordCountAggregateOutputType> | number
          }
        }
      }
      AiAnalysisRecord: {
        payload: Prisma.$AiAnalysisRecordPayload<ExtArgs>
        fields: Prisma.AiAnalysisRecordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AiAnalysisRecordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AiAnalysisRecordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>
          }
          findFirst: {
            args: Prisma.AiAnalysisRecordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AiAnalysisRecordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>
          }
          findMany: {
            args: Prisma.AiAnalysisRecordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>[]
          }
          create: {
            args: Prisma.AiAnalysisRecordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>
          }
          createMany: {
            args: Prisma.AiAnalysisRecordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AiAnalysisRecordCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>[]
          }
          delete: {
            args: Prisma.AiAnalysisRecordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>
          }
          update: {
            args: Prisma.AiAnalysisRecordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>
          }
          deleteMany: {
            args: Prisma.AiAnalysisRecordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AiAnalysisRecordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AiAnalysisRecordUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>[]
          }
          upsert: {
            args: Prisma.AiAnalysisRecordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AiAnalysisRecordPayload>
          }
          aggregate: {
            args: Prisma.AiAnalysisRecordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAiAnalysisRecord>
          }
          groupBy: {
            args: Prisma.AiAnalysisRecordGroupByArgs<ExtArgs>
            result: $Utils.Optional<AiAnalysisRecordGroupByOutputType>[]
          }
          count: {
            args: Prisma.AiAnalysisRecordCountArgs<ExtArgs>
            result: $Utils.Optional<AiAnalysisRecordCountAggregateOutputType> | number
          }
        }
      }
      SystemConfig: {
        payload: Prisma.$SystemConfigPayload<ExtArgs>
        fields: Prisma.SystemConfigFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SystemConfigFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SystemConfigFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>
          }
          findFirst: {
            args: Prisma.SystemConfigFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SystemConfigFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>
          }
          findMany: {
            args: Prisma.SystemConfigFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>[]
          }
          create: {
            args: Prisma.SystemConfigCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>
          }
          createMany: {
            args: Prisma.SystemConfigCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SystemConfigCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>[]
          }
          delete: {
            args: Prisma.SystemConfigDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>
          }
          update: {
            args: Prisma.SystemConfigUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>
          }
          deleteMany: {
            args: Prisma.SystemConfigDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SystemConfigUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SystemConfigUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>[]
          }
          upsert: {
            args: Prisma.SystemConfigUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemConfigPayload>
          }
          aggregate: {
            args: Prisma.SystemConfigAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystemConfig>
          }
          groupBy: {
            args: Prisma.SystemConfigGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemConfigGroupByOutputType>[]
          }
          count: {
            args: Prisma.SystemConfigCountArgs<ExtArgs>
            result: $Utils.Optional<SystemConfigCountAggregateOutputType> | number
          }
        }
      }
      OperationLog: {
        payload: Prisma.$OperationLogPayload<ExtArgs>
        fields: Prisma.OperationLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OperationLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OperationLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>
          }
          findFirst: {
            args: Prisma.OperationLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OperationLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>
          }
          findMany: {
            args: Prisma.OperationLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>[]
          }
          create: {
            args: Prisma.OperationLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>
          }
          createMany: {
            args: Prisma.OperationLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OperationLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>[]
          }
          delete: {
            args: Prisma.OperationLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>
          }
          update: {
            args: Prisma.OperationLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>
          }
          deleteMany: {
            args: Prisma.OperationLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OperationLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OperationLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>[]
          }
          upsert: {
            args: Prisma.OperationLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OperationLogPayload>
          }
          aggregate: {
            args: Prisma.OperationLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOperationLog>
          }
          groupBy: {
            args: Prisma.OperationLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<OperationLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.OperationLogCountArgs<ExtArgs>
            result: $Utils.Optional<OperationLogCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    department?: DepartmentOmit
    inquiry?: InquiryOmit
    customFieldDefinition?: CustomFieldDefinitionOmit
    userCustomFieldConfig?: UserCustomFieldConfigOmit
    followUpRecord?: FollowUpRecordOmit
    aiAnalysisRecord?: AiAnalysisRecordOmit
    systemConfig?: SystemConfigOmit
    operationLog?: OperationLogOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    managedDepartments: number
    createdInquiries: number
    assignedInquiries: number
    followUpRecords: number
    aiAnalysisRecords: number
    customFieldConfigs: number
    operationLogs: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    managedDepartments?: boolean | UserCountOutputTypeCountManagedDepartmentsArgs
    createdInquiries?: boolean | UserCountOutputTypeCountCreatedInquiriesArgs
    assignedInquiries?: boolean | UserCountOutputTypeCountAssignedInquiriesArgs
    followUpRecords?: boolean | UserCountOutputTypeCountFollowUpRecordsArgs
    aiAnalysisRecords?: boolean | UserCountOutputTypeCountAiAnalysisRecordsArgs
    customFieldConfigs?: boolean | UserCountOutputTypeCountCustomFieldConfigsArgs
    operationLogs?: boolean | UserCountOutputTypeCountOperationLogsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountManagedDepartmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InquiryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAssignedInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InquiryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFollowUpRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FollowUpRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAiAnalysisRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AiAnalysisRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCustomFieldConfigsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserCustomFieldConfigWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOperationLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OperationLogWhereInput
  }


  /**
   * Count Type DepartmentCountOutputType
   */

  export type DepartmentCountOutputType = {
    children: number
    users: number
    inquiries: number
  }

  export type DepartmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | DepartmentCountOutputTypeCountChildrenArgs
    users?: boolean | DepartmentCountOutputTypeCountUsersArgs
    inquiries?: boolean | DepartmentCountOutputTypeCountInquiriesArgs
  }

  // Custom InputTypes
  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartmentCountOutputType
     */
    select?: DepartmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartmentWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InquiryWhereInput
  }


  /**
   * Count Type InquiryCountOutputType
   */

  export type InquiryCountOutputType = {
    followUpRecords: number
    aiAnalysisRecords: number
  }

  export type InquiryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    followUpRecords?: boolean | InquiryCountOutputTypeCountFollowUpRecordsArgs
    aiAnalysisRecords?: boolean | InquiryCountOutputTypeCountAiAnalysisRecordsArgs
  }

  // Custom InputTypes
  /**
   * InquiryCountOutputType without action
   */
  export type InquiryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InquiryCountOutputType
     */
    select?: InquiryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InquiryCountOutputType without action
   */
  export type InquiryCountOutputTypeCountFollowUpRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FollowUpRecordWhereInput
  }

  /**
   * InquiryCountOutputType without action
   */
  export type InquiryCountOutputTypeCountAiAnalysisRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AiAnalysisRecordWhereInput
  }


  /**
   * Count Type CustomFieldDefinitionCountOutputType
   */

  export type CustomFieldDefinitionCountOutputType = {
    userConfigs: number
  }

  export type CustomFieldDefinitionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userConfigs?: boolean | CustomFieldDefinitionCountOutputTypeCountUserConfigsArgs
  }

  // Custom InputTypes
  /**
   * CustomFieldDefinitionCountOutputType without action
   */
  export type CustomFieldDefinitionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinitionCountOutputType
     */
    select?: CustomFieldDefinitionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomFieldDefinitionCountOutputType without action
   */
  export type CustomFieldDefinitionCountOutputTypeCountUserConfigsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserCustomFieldConfigWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    departmentId: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    departmentId: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    passwordHash: string | null
    fullName: string | null
    role: $Enums.UserRole | null
    departmentId: number | null
    phone: string | null
    avatarUrl: string | null
    status: $Enums.UserStatus | null
    lastLoginAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    passwordHash: string | null
    fullName: string | null
    role: $Enums.UserRole | null
    departmentId: number | null
    phone: string | null
    avatarUrl: string | null
    status: $Enums.UserStatus | null
    lastLoginAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    email: number
    passwordHash: number
    fullName: number
    role: number
    departmentId: number
    phone: number
    avatarUrl: number
    status: number
    lastLoginAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    departmentId?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    departmentId?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    passwordHash?: true
    fullName?: true
    role?: true
    departmentId?: true
    phone?: true
    avatarUrl?: true
    status?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    passwordHash?: true
    fullName?: true
    role?: true
    departmentId?: true
    phone?: true
    avatarUrl?: true
    status?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    passwordHash?: true
    fullName?: true
    role?: true
    departmentId?: true
    phone?: true
    avatarUrl?: true
    status?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role: $Enums.UserRole
    departmentId: number | null
    phone: string | null
    avatarUrl: string | null
    status: $Enums.UserStatus
    lastLoginAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    role?: boolean
    departmentId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    status?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    department?: boolean | User$departmentArgs<ExtArgs>
    managedDepartments?: boolean | User$managedDepartmentsArgs<ExtArgs>
    createdInquiries?: boolean | User$createdInquiriesArgs<ExtArgs>
    assignedInquiries?: boolean | User$assignedInquiriesArgs<ExtArgs>
    followUpRecords?: boolean | User$followUpRecordsArgs<ExtArgs>
    aiAnalysisRecords?: boolean | User$aiAnalysisRecordsArgs<ExtArgs>
    customFieldConfigs?: boolean | User$customFieldConfigsArgs<ExtArgs>
    operationLogs?: boolean | User$operationLogsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    role?: boolean
    departmentId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    status?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    department?: boolean | User$departmentArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    role?: boolean
    departmentId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    status?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    department?: boolean | User$departmentArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    passwordHash?: boolean
    fullName?: boolean
    role?: boolean
    departmentId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    status?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "passwordHash" | "fullName" | "role" | "departmentId" | "phone" | "avatarUrl" | "status" | "lastLoginAt" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | User$departmentArgs<ExtArgs>
    managedDepartments?: boolean | User$managedDepartmentsArgs<ExtArgs>
    createdInquiries?: boolean | User$createdInquiriesArgs<ExtArgs>
    assignedInquiries?: boolean | User$assignedInquiriesArgs<ExtArgs>
    followUpRecords?: boolean | User$followUpRecordsArgs<ExtArgs>
    aiAnalysisRecords?: boolean | User$aiAnalysisRecordsArgs<ExtArgs>
    customFieldConfigs?: boolean | User$customFieldConfigsArgs<ExtArgs>
    operationLogs?: boolean | User$operationLogsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | User$departmentArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | User$departmentArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      department: Prisma.$DepartmentPayload<ExtArgs> | null
      managedDepartments: Prisma.$DepartmentPayload<ExtArgs>[]
      createdInquiries: Prisma.$InquiryPayload<ExtArgs>[]
      assignedInquiries: Prisma.$InquiryPayload<ExtArgs>[]
      followUpRecords: Prisma.$FollowUpRecordPayload<ExtArgs>[]
      aiAnalysisRecords: Prisma.$AiAnalysisRecordPayload<ExtArgs>[]
      customFieldConfigs: Prisma.$UserCustomFieldConfigPayload<ExtArgs>[]
      operationLogs: Prisma.$OperationLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      email: string
      passwordHash: string
      fullName: string
      role: $Enums.UserRole
      departmentId: number | null
      phone: string | null
      avatarUrl: string | null
      status: $Enums.UserStatus
      lastLoginAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    department<T extends User$departmentArgs<ExtArgs> = {}>(args?: Subset<T, User$departmentArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    managedDepartments<T extends User$managedDepartmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$managedDepartmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdInquiries<T extends User$createdInquiriesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdInquiriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    assignedInquiries<T extends User$assignedInquiriesArgs<ExtArgs> = {}>(args?: Subset<T, User$assignedInquiriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    followUpRecords<T extends User$followUpRecordsArgs<ExtArgs> = {}>(args?: Subset<T, User$followUpRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aiAnalysisRecords<T extends User$aiAnalysisRecordsArgs<ExtArgs> = {}>(args?: Subset<T, User$aiAnalysisRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customFieldConfigs<T extends User$customFieldConfigsArgs<ExtArgs> = {}>(args?: Subset<T, User$customFieldConfigsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    operationLogs<T extends User$operationLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$operationLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly fullName: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'UserRole'>
    readonly departmentId: FieldRef<"User", 'Int'>
    readonly phone: FieldRef<"User", 'String'>
    readonly avatarUrl: FieldRef<"User", 'String'>
    readonly status: FieldRef<"User", 'UserStatus'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.department
   */
  export type User$departmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * User.managedDepartments
   */
  export type User$managedDepartmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    cursor?: DepartmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * User.createdInquiries
   */
  export type User$createdInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    where?: InquiryWhereInput
    orderBy?: InquiryOrderByWithRelationInput | InquiryOrderByWithRelationInput[]
    cursor?: InquiryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InquiryScalarFieldEnum | InquiryScalarFieldEnum[]
  }

  /**
   * User.assignedInquiries
   */
  export type User$assignedInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    where?: InquiryWhereInput
    orderBy?: InquiryOrderByWithRelationInput | InquiryOrderByWithRelationInput[]
    cursor?: InquiryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InquiryScalarFieldEnum | InquiryScalarFieldEnum[]
  }

  /**
   * User.followUpRecords
   */
  export type User$followUpRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    where?: FollowUpRecordWhereInput
    orderBy?: FollowUpRecordOrderByWithRelationInput | FollowUpRecordOrderByWithRelationInput[]
    cursor?: FollowUpRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FollowUpRecordScalarFieldEnum | FollowUpRecordScalarFieldEnum[]
  }

  /**
   * User.aiAnalysisRecords
   */
  export type User$aiAnalysisRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    where?: AiAnalysisRecordWhereInput
    orderBy?: AiAnalysisRecordOrderByWithRelationInput | AiAnalysisRecordOrderByWithRelationInput[]
    cursor?: AiAnalysisRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AiAnalysisRecordScalarFieldEnum | AiAnalysisRecordScalarFieldEnum[]
  }

  /**
   * User.customFieldConfigs
   */
  export type User$customFieldConfigsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    where?: UserCustomFieldConfigWhereInput
    orderBy?: UserCustomFieldConfigOrderByWithRelationInput | UserCustomFieldConfigOrderByWithRelationInput[]
    cursor?: UserCustomFieldConfigWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserCustomFieldConfigScalarFieldEnum | UserCustomFieldConfigScalarFieldEnum[]
  }

  /**
   * User.operationLogs
   */
  export type User$operationLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    where?: OperationLogWhereInput
    orderBy?: OperationLogOrderByWithRelationInput | OperationLogOrderByWithRelationInput[]
    cursor?: OperationLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OperationLogScalarFieldEnum | OperationLogScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Department
   */

  export type AggregateDepartment = {
    _count: DepartmentCountAggregateOutputType | null
    _avg: DepartmentAvgAggregateOutputType | null
    _sum: DepartmentSumAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  export type DepartmentAvgAggregateOutputType = {
    id: number | null
    parentId: number | null
    managerId: number | null
  }

  export type DepartmentSumAggregateOutputType = {
    id: number | null
    parentId: number | null
    managerId: number | null
  }

  export type DepartmentMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    parentId: number | null
    managerId: number | null
    status: $Enums.DepartmentStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DepartmentMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    parentId: number | null
    managerId: number | null
    status: $Enums.DepartmentStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DepartmentCountAggregateOutputType = {
    id: number
    name: number
    description: number
    parentId: number
    managerId: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DepartmentAvgAggregateInputType = {
    id?: true
    parentId?: true
    managerId?: true
  }

  export type DepartmentSumAggregateInputType = {
    id?: true
    parentId?: true
    managerId?: true
  }

  export type DepartmentMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parentId?: true
    managerId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DepartmentMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parentId?: true
    managerId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DepartmentCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parentId?: true
    managerId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DepartmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Department to aggregate.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Departments
    **/
    _count?: true | DepartmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartmentMaxAggregateInputType
  }

  export type GetDepartmentAggregateType<T extends DepartmentAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartment[P]>
      : GetScalarType<T[P], AggregateDepartment[P]>
  }




  export type DepartmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartmentWhereInput
    orderBy?: DepartmentOrderByWithAggregationInput | DepartmentOrderByWithAggregationInput[]
    by: DepartmentScalarFieldEnum[] | DepartmentScalarFieldEnum
    having?: DepartmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartmentCountAggregateInputType | true
    _avg?: DepartmentAvgAggregateInputType
    _sum?: DepartmentSumAggregateInputType
    _min?: DepartmentMinAggregateInputType
    _max?: DepartmentMaxAggregateInputType
  }

  export type DepartmentGroupByOutputType = {
    id: number
    name: string
    description: string | null
    parentId: number | null
    managerId: number | null
    status: $Enums.DepartmentStatus
    createdAt: Date
    updatedAt: Date
    _count: DepartmentCountAggregateOutputType | null
    _avg: DepartmentAvgAggregateOutputType | null
    _sum: DepartmentSumAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  type GetDepartmentGroupByPayload<T extends DepartmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
            : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
        }
      >
    >


  export type DepartmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    parentId?: boolean
    managerId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | Department$parentArgs<ExtArgs>
    children?: boolean | Department$childrenArgs<ExtArgs>
    manager?: boolean | Department$managerArgs<ExtArgs>
    users?: boolean | Department$usersArgs<ExtArgs>
    inquiries?: boolean | Department$inquiriesArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    parentId?: boolean
    managerId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | Department$parentArgs<ExtArgs>
    manager?: boolean | Department$managerArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    parentId?: boolean
    managerId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | Department$parentArgs<ExtArgs>
    manager?: boolean | Department$managerArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    parentId?: boolean
    managerId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DepartmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "parentId" | "managerId" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["department"]>
  export type DepartmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Department$parentArgs<ExtArgs>
    children?: boolean | Department$childrenArgs<ExtArgs>
    manager?: boolean | Department$managerArgs<ExtArgs>
    users?: boolean | Department$usersArgs<ExtArgs>
    inquiries?: boolean | Department$inquiriesArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DepartmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Department$parentArgs<ExtArgs>
    manager?: boolean | Department$managerArgs<ExtArgs>
  }
  export type DepartmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Department$parentArgs<ExtArgs>
    manager?: boolean | Department$managerArgs<ExtArgs>
  }

  export type $DepartmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Department"
    objects: {
      parent: Prisma.$DepartmentPayload<ExtArgs> | null
      children: Prisma.$DepartmentPayload<ExtArgs>[]
      manager: Prisma.$UserPayload<ExtArgs> | null
      users: Prisma.$UserPayload<ExtArgs>[]
      inquiries: Prisma.$InquiryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      parentId: number | null
      managerId: number | null
      status: $Enums.DepartmentStatus
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["department"]>
    composites: {}
  }

  type DepartmentGetPayload<S extends boolean | null | undefined | DepartmentDefaultArgs> = $Result.GetResult<Prisma.$DepartmentPayload, S>

  type DepartmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DepartmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepartmentCountAggregateInputType | true
    }

  export interface DepartmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Department'], meta: { name: 'Department' } }
    /**
     * Find zero or one Department that matches the filter.
     * @param {DepartmentFindUniqueArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepartmentFindUniqueArgs>(args: SelectSubset<T, DepartmentFindUniqueArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Department that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DepartmentFindUniqueOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepartmentFindUniqueOrThrowArgs>(args: SelectSubset<T, DepartmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindFirstArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepartmentFindFirstArgs>(args?: SelectSubset<T, DepartmentFindFirstArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindFirstOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepartmentFindFirstOrThrowArgs>(args?: SelectSubset<T, DepartmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Departments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departments
     * const departments = await prisma.department.findMany()
     * 
     * // Get first 10 Departments
     * const departments = await prisma.department.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const departmentWithIdOnly = await prisma.department.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepartmentFindManyArgs>(args?: SelectSubset<T, DepartmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Department.
     * @param {DepartmentCreateArgs} args - Arguments to create a Department.
     * @example
     * // Create one Department
     * const Department = await prisma.department.create({
     *   data: {
     *     // ... data to create a Department
     *   }
     * })
     * 
     */
    create<T extends DepartmentCreateArgs>(args: SelectSubset<T, DepartmentCreateArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Departments.
     * @param {DepartmentCreateManyArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepartmentCreateManyArgs>(args?: SelectSubset<T, DepartmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departments and returns the data saved in the database.
     * @param {DepartmentCreateManyAndReturnArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepartmentCreateManyAndReturnArgs>(args?: SelectSubset<T, DepartmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Department.
     * @param {DepartmentDeleteArgs} args - Arguments to delete one Department.
     * @example
     * // Delete one Department
     * const Department = await prisma.department.delete({
     *   where: {
     *     // ... filter to delete one Department
     *   }
     * })
     * 
     */
    delete<T extends DepartmentDeleteArgs>(args: SelectSubset<T, DepartmentDeleteArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Department.
     * @param {DepartmentUpdateArgs} args - Arguments to update one Department.
     * @example
     * // Update one Department
     * const department = await prisma.department.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepartmentUpdateArgs>(args: SelectSubset<T, DepartmentUpdateArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Departments.
     * @param {DepartmentDeleteManyArgs} args - Arguments to filter Departments to delete.
     * @example
     * // Delete a few Departments
     * const { count } = await prisma.department.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepartmentDeleteManyArgs>(args?: SelectSubset<T, DepartmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepartmentUpdateManyArgs>(args: SelectSubset<T, DepartmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments and returns the data updated in the database.
     * @param {DepartmentUpdateManyAndReturnArgs} args - Arguments to update many Departments.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DepartmentUpdateManyAndReturnArgs>(args: SelectSubset<T, DepartmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Department.
     * @param {DepartmentUpsertArgs} args - Arguments to update or create a Department.
     * @example
     * // Update or create a Department
     * const department = await prisma.department.upsert({
     *   create: {
     *     // ... data to create a Department
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Department we want to update
     *   }
     * })
     */
    upsert<T extends DepartmentUpsertArgs>(args: SelectSubset<T, DepartmentUpsertArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentCountArgs} args - Arguments to filter Departments to count.
     * @example
     * // Count the number of Departments
     * const count = await prisma.department.count({
     *   where: {
     *     // ... the filter for the Departments we want to count
     *   }
     * })
    **/
    count<T extends DepartmentCountArgs>(
      args?: Subset<T, DepartmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartmentAggregateArgs>(args: Subset<T, DepartmentAggregateArgs>): Prisma.PrismaPromise<GetDepartmentAggregateType<T>>

    /**
     * Group by Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepartmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepartmentGroupByArgs['orderBy'] }
        : { orderBy?: DepartmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepartmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Department model
   */
  readonly fields: DepartmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Department.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepartmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends Department$parentArgs<ExtArgs> = {}>(args?: Subset<T, Department$parentArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends Department$childrenArgs<ExtArgs> = {}>(args?: Subset<T, Department$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    manager<T extends Department$managerArgs<ExtArgs> = {}>(args?: Subset<T, Department$managerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends Department$usersArgs<ExtArgs> = {}>(args?: Subset<T, Department$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inquiries<T extends Department$inquiriesArgs<ExtArgs> = {}>(args?: Subset<T, Department$inquiriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Department model
   */
  interface DepartmentFieldRefs {
    readonly id: FieldRef<"Department", 'Int'>
    readonly name: FieldRef<"Department", 'String'>
    readonly description: FieldRef<"Department", 'String'>
    readonly parentId: FieldRef<"Department", 'Int'>
    readonly managerId: FieldRef<"Department", 'Int'>
    readonly status: FieldRef<"Department", 'DepartmentStatus'>
    readonly createdAt: FieldRef<"Department", 'DateTime'>
    readonly updatedAt: FieldRef<"Department", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Department findUnique
   */
  export type DepartmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department findUniqueOrThrow
   */
  export type DepartmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department findFirst
   */
  export type DepartmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department findFirstOrThrow
   */
  export type DepartmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department findMany
   */
  export type DepartmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Departments to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department create
   */
  export type DepartmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Department.
     */
    data: XOR<DepartmentCreateInput, DepartmentUncheckedCreateInput>
  }

  /**
   * Department createMany
   */
  export type DepartmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Departments.
     */
    data: DepartmentCreateManyInput | DepartmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Department createManyAndReturn
   */
  export type DepartmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * The data used to create many Departments.
     */
    data: DepartmentCreateManyInput | DepartmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Department update
   */
  export type DepartmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Department.
     */
    data: XOR<DepartmentUpdateInput, DepartmentUncheckedUpdateInput>
    /**
     * Choose, which Department to update.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department updateMany
   */
  export type DepartmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Departments.
     */
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyInput>
    /**
     * Filter which Departments to update
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to update.
     */
    limit?: number
  }

  /**
   * Department updateManyAndReturn
   */
  export type DepartmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * The data used to update Departments.
     */
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyInput>
    /**
     * Filter which Departments to update
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Department upsert
   */
  export type DepartmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Department to update in case it exists.
     */
    where: DepartmentWhereUniqueInput
    /**
     * In case the Department found by the `where` argument doesn't exist, create a new Department with this data.
     */
    create: XOR<DepartmentCreateInput, DepartmentUncheckedCreateInput>
    /**
     * In case the Department was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepartmentUpdateInput, DepartmentUncheckedUpdateInput>
  }

  /**
   * Department delete
   */
  export type DepartmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter which Department to delete.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department deleteMany
   */
  export type DepartmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departments to delete
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to delete.
     */
    limit?: number
  }

  /**
   * Department.parent
   */
  export type Department$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * Department.children
   */
  export type Department$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    cursor?: DepartmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department.manager
   */
  export type Department$managerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Department.users
   */
  export type Department$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Department.inquiries
   */
  export type Department$inquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    where?: InquiryWhereInput
    orderBy?: InquiryOrderByWithRelationInput | InquiryOrderByWithRelationInput[]
    cursor?: InquiryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InquiryScalarFieldEnum | InquiryScalarFieldEnum[]
  }

  /**
   * Department without action
   */
  export type DepartmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
  }


  /**
   * Model Inquiry
   */

  export type AggregateInquiry = {
    _count: InquiryCountAggregateOutputType | null
    _avg: InquiryAvgAggregateOutputType | null
    _sum: InquirySumAggregateOutputType | null
    _min: InquiryMinAggregateOutputType | null
    _max: InquiryMaxAggregateOutputType | null
  }

  export type InquiryAvgAggregateOutputType = {
    id: number | null
    assignedTo: number | null
    departmentId: number | null
    estimatedValue: Decimal | null
    aiAnalysisScore: Decimal | null
    createdBy: number | null
  }

  export type InquirySumAggregateOutputType = {
    id: number | null
    assignedTo: number | null
    departmentId: number | null
    estimatedValue: Decimal | null
    aiAnalysisScore: Decimal | null
    createdBy: number | null
  }

  export type InquiryMinAggregateOutputType = {
    id: number | null
    inquiryNo: string | null
    title: string | null
    content: string | null
    sourceChannel: string | null
    customerName: string | null
    customerEmail: string | null
    customerPhone: string | null
    customerCompany: string | null
    customerAddress: string | null
    customerType: $Enums.CustomerType | null
    region: string | null
    country: string | null
    assignedTo: number | null
    departmentId: number | null
    priority: $Enums.Priority | null
    status: $Enums.InquiryStatus | null
    estimatedValue: Decimal | null
    currency: string | null
    expectedCloseDate: Date | null
    aiAnalysisScore: Decimal | null
    aiAnalysisSummary: string | null
    createdBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InquiryMaxAggregateOutputType = {
    id: number | null
    inquiryNo: string | null
    title: string | null
    content: string | null
    sourceChannel: string | null
    customerName: string | null
    customerEmail: string | null
    customerPhone: string | null
    customerCompany: string | null
    customerAddress: string | null
    customerType: $Enums.CustomerType | null
    region: string | null
    country: string | null
    assignedTo: number | null
    departmentId: number | null
    priority: $Enums.Priority | null
    status: $Enums.InquiryStatus | null
    estimatedValue: Decimal | null
    currency: string | null
    expectedCloseDate: Date | null
    aiAnalysisScore: Decimal | null
    aiAnalysisSummary: string | null
    createdBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InquiryCountAggregateOutputType = {
    id: number
    inquiryNo: number
    title: number
    content: number
    sourceChannel: number
    customerName: number
    customerEmail: number
    customerPhone: number
    customerCompany: number
    customerAddress: number
    customerType: number
    region: number
    country: number
    assignedTo: number
    departmentId: number
    priority: number
    status: number
    estimatedValue: number
    currency: number
    expectedCloseDate: number
    aiAnalysisScore: number
    aiAnalysisSummary: number
    tags: number
    customFields: number
    createdBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InquiryAvgAggregateInputType = {
    id?: true
    assignedTo?: true
    departmentId?: true
    estimatedValue?: true
    aiAnalysisScore?: true
    createdBy?: true
  }

  export type InquirySumAggregateInputType = {
    id?: true
    assignedTo?: true
    departmentId?: true
    estimatedValue?: true
    aiAnalysisScore?: true
    createdBy?: true
  }

  export type InquiryMinAggregateInputType = {
    id?: true
    inquiryNo?: true
    title?: true
    content?: true
    sourceChannel?: true
    customerName?: true
    customerEmail?: true
    customerPhone?: true
    customerCompany?: true
    customerAddress?: true
    customerType?: true
    region?: true
    country?: true
    assignedTo?: true
    departmentId?: true
    priority?: true
    status?: true
    estimatedValue?: true
    currency?: true
    expectedCloseDate?: true
    aiAnalysisScore?: true
    aiAnalysisSummary?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InquiryMaxAggregateInputType = {
    id?: true
    inquiryNo?: true
    title?: true
    content?: true
    sourceChannel?: true
    customerName?: true
    customerEmail?: true
    customerPhone?: true
    customerCompany?: true
    customerAddress?: true
    customerType?: true
    region?: true
    country?: true
    assignedTo?: true
    departmentId?: true
    priority?: true
    status?: true
    estimatedValue?: true
    currency?: true
    expectedCloseDate?: true
    aiAnalysisScore?: true
    aiAnalysisSummary?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InquiryCountAggregateInputType = {
    id?: true
    inquiryNo?: true
    title?: true
    content?: true
    sourceChannel?: true
    customerName?: true
    customerEmail?: true
    customerPhone?: true
    customerCompany?: true
    customerAddress?: true
    customerType?: true
    region?: true
    country?: true
    assignedTo?: true
    departmentId?: true
    priority?: true
    status?: true
    estimatedValue?: true
    currency?: true
    expectedCloseDate?: true
    aiAnalysisScore?: true
    aiAnalysisSummary?: true
    tags?: true
    customFields?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InquiryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inquiry to aggregate.
     */
    where?: InquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inquiries to fetch.
     */
    orderBy?: InquiryOrderByWithRelationInput | InquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Inquiries
    **/
    _count?: true | InquiryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InquiryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InquirySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InquiryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InquiryMaxAggregateInputType
  }

  export type GetInquiryAggregateType<T extends InquiryAggregateArgs> = {
        [P in keyof T & keyof AggregateInquiry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInquiry[P]>
      : GetScalarType<T[P], AggregateInquiry[P]>
  }




  export type InquiryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InquiryWhereInput
    orderBy?: InquiryOrderByWithAggregationInput | InquiryOrderByWithAggregationInput[]
    by: InquiryScalarFieldEnum[] | InquiryScalarFieldEnum
    having?: InquiryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InquiryCountAggregateInputType | true
    _avg?: InquiryAvgAggregateInputType
    _sum?: InquirySumAggregateInputType
    _min?: InquiryMinAggregateInputType
    _max?: InquiryMaxAggregateInputType
  }

  export type InquiryGroupByOutputType = {
    id: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail: string | null
    customerPhone: string | null
    customerCompany: string | null
    customerAddress: string | null
    customerType: $Enums.CustomerType
    region: string | null
    country: string | null
    assignedTo: number | null
    departmentId: number | null
    priority: $Enums.Priority
    status: $Enums.InquiryStatus
    estimatedValue: Decimal | null
    currency: string | null
    expectedCloseDate: Date | null
    aiAnalysisScore: Decimal | null
    aiAnalysisSummary: string | null
    tags: JsonValue | null
    customFields: JsonValue | null
    createdBy: number
    createdAt: Date
    updatedAt: Date
    _count: InquiryCountAggregateOutputType | null
    _avg: InquiryAvgAggregateOutputType | null
    _sum: InquirySumAggregateOutputType | null
    _min: InquiryMinAggregateOutputType | null
    _max: InquiryMaxAggregateOutputType | null
  }

  type GetInquiryGroupByPayload<T extends InquiryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InquiryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InquiryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InquiryGroupByOutputType[P]>
            : GetScalarType<T[P], InquiryGroupByOutputType[P]>
        }
      >
    >


  export type InquirySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryNo?: boolean
    title?: boolean
    content?: boolean
    sourceChannel?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    customerCompany?: boolean
    customerAddress?: boolean
    customerType?: boolean
    region?: boolean
    country?: boolean
    assignedTo?: boolean
    departmentId?: boolean
    priority?: boolean
    status?: boolean
    estimatedValue?: boolean
    currency?: boolean
    expectedCloseDate?: boolean
    aiAnalysisScore?: boolean
    aiAnalysisSummary?: boolean
    tags?: boolean
    customFields?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignee?: boolean | Inquiry$assigneeArgs<ExtArgs>
    department?: boolean | Inquiry$departmentArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    followUpRecords?: boolean | Inquiry$followUpRecordsArgs<ExtArgs>
    aiAnalysisRecords?: boolean | Inquiry$aiAnalysisRecordsArgs<ExtArgs>
    _count?: boolean | InquiryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inquiry"]>

  export type InquirySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryNo?: boolean
    title?: boolean
    content?: boolean
    sourceChannel?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    customerCompany?: boolean
    customerAddress?: boolean
    customerType?: boolean
    region?: boolean
    country?: boolean
    assignedTo?: boolean
    departmentId?: boolean
    priority?: boolean
    status?: boolean
    estimatedValue?: boolean
    currency?: boolean
    expectedCloseDate?: boolean
    aiAnalysisScore?: boolean
    aiAnalysisSummary?: boolean
    tags?: boolean
    customFields?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignee?: boolean | Inquiry$assigneeArgs<ExtArgs>
    department?: boolean | Inquiry$departmentArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inquiry"]>

  export type InquirySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryNo?: boolean
    title?: boolean
    content?: boolean
    sourceChannel?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    customerCompany?: boolean
    customerAddress?: boolean
    customerType?: boolean
    region?: boolean
    country?: boolean
    assignedTo?: boolean
    departmentId?: boolean
    priority?: boolean
    status?: boolean
    estimatedValue?: boolean
    currency?: boolean
    expectedCloseDate?: boolean
    aiAnalysisScore?: boolean
    aiAnalysisSummary?: boolean
    tags?: boolean
    customFields?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignee?: boolean | Inquiry$assigneeArgs<ExtArgs>
    department?: boolean | Inquiry$departmentArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inquiry"]>

  export type InquirySelectScalar = {
    id?: boolean
    inquiryNo?: boolean
    title?: boolean
    content?: boolean
    sourceChannel?: boolean
    customerName?: boolean
    customerEmail?: boolean
    customerPhone?: boolean
    customerCompany?: boolean
    customerAddress?: boolean
    customerType?: boolean
    region?: boolean
    country?: boolean
    assignedTo?: boolean
    departmentId?: boolean
    priority?: boolean
    status?: boolean
    estimatedValue?: boolean
    currency?: boolean
    expectedCloseDate?: boolean
    aiAnalysisScore?: boolean
    aiAnalysisSummary?: boolean
    tags?: boolean
    customFields?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InquiryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "inquiryNo" | "title" | "content" | "sourceChannel" | "customerName" | "customerEmail" | "customerPhone" | "customerCompany" | "customerAddress" | "customerType" | "region" | "country" | "assignedTo" | "departmentId" | "priority" | "status" | "estimatedValue" | "currency" | "expectedCloseDate" | "aiAnalysisScore" | "aiAnalysisSummary" | "tags" | "customFields" | "createdBy" | "createdAt" | "updatedAt", ExtArgs["result"]["inquiry"]>
  export type InquiryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Inquiry$assigneeArgs<ExtArgs>
    department?: boolean | Inquiry$departmentArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    followUpRecords?: boolean | Inquiry$followUpRecordsArgs<ExtArgs>
    aiAnalysisRecords?: boolean | Inquiry$aiAnalysisRecordsArgs<ExtArgs>
    _count?: boolean | InquiryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InquiryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Inquiry$assigneeArgs<ExtArgs>
    department?: boolean | Inquiry$departmentArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InquiryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Inquiry$assigneeArgs<ExtArgs>
    department?: boolean | Inquiry$departmentArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $InquiryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Inquiry"
    objects: {
      assignee: Prisma.$UserPayload<ExtArgs> | null
      department: Prisma.$DepartmentPayload<ExtArgs> | null
      creator: Prisma.$UserPayload<ExtArgs>
      followUpRecords: Prisma.$FollowUpRecordPayload<ExtArgs>[]
      aiAnalysisRecords: Prisma.$AiAnalysisRecordPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      inquiryNo: string
      title: string
      content: string
      sourceChannel: string
      customerName: string
      customerEmail: string | null
      customerPhone: string | null
      customerCompany: string | null
      customerAddress: string | null
      customerType: $Enums.CustomerType
      region: string | null
      country: string | null
      assignedTo: number | null
      departmentId: number | null
      priority: $Enums.Priority
      status: $Enums.InquiryStatus
      estimatedValue: Prisma.Decimal | null
      currency: string | null
      expectedCloseDate: Date | null
      aiAnalysisScore: Prisma.Decimal | null
      aiAnalysisSummary: string | null
      tags: Prisma.JsonValue | null
      customFields: Prisma.JsonValue | null
      createdBy: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inquiry"]>
    composites: {}
  }

  type InquiryGetPayload<S extends boolean | null | undefined | InquiryDefaultArgs> = $Result.GetResult<Prisma.$InquiryPayload, S>

  type InquiryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InquiryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InquiryCountAggregateInputType | true
    }

  export interface InquiryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Inquiry'], meta: { name: 'Inquiry' } }
    /**
     * Find zero or one Inquiry that matches the filter.
     * @param {InquiryFindUniqueArgs} args - Arguments to find a Inquiry
     * @example
     * // Get one Inquiry
     * const inquiry = await prisma.inquiry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InquiryFindUniqueArgs>(args: SelectSubset<T, InquiryFindUniqueArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Inquiry that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InquiryFindUniqueOrThrowArgs} args - Arguments to find a Inquiry
     * @example
     * // Get one Inquiry
     * const inquiry = await prisma.inquiry.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InquiryFindUniqueOrThrowArgs>(args: SelectSubset<T, InquiryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inquiry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiryFindFirstArgs} args - Arguments to find a Inquiry
     * @example
     * // Get one Inquiry
     * const inquiry = await prisma.inquiry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InquiryFindFirstArgs>(args?: SelectSubset<T, InquiryFindFirstArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inquiry that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiryFindFirstOrThrowArgs} args - Arguments to find a Inquiry
     * @example
     * // Get one Inquiry
     * const inquiry = await prisma.inquiry.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InquiryFindFirstOrThrowArgs>(args?: SelectSubset<T, InquiryFindFirstOrThrowArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Inquiries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inquiries
     * const inquiries = await prisma.inquiry.findMany()
     * 
     * // Get first 10 Inquiries
     * const inquiries = await prisma.inquiry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inquiryWithIdOnly = await prisma.inquiry.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InquiryFindManyArgs>(args?: SelectSubset<T, InquiryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Inquiry.
     * @param {InquiryCreateArgs} args - Arguments to create a Inquiry.
     * @example
     * // Create one Inquiry
     * const Inquiry = await prisma.inquiry.create({
     *   data: {
     *     // ... data to create a Inquiry
     *   }
     * })
     * 
     */
    create<T extends InquiryCreateArgs>(args: SelectSubset<T, InquiryCreateArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Inquiries.
     * @param {InquiryCreateManyArgs} args - Arguments to create many Inquiries.
     * @example
     * // Create many Inquiries
     * const inquiry = await prisma.inquiry.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InquiryCreateManyArgs>(args?: SelectSubset<T, InquiryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inquiries and returns the data saved in the database.
     * @param {InquiryCreateManyAndReturnArgs} args - Arguments to create many Inquiries.
     * @example
     * // Create many Inquiries
     * const inquiry = await prisma.inquiry.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inquiries and only return the `id`
     * const inquiryWithIdOnly = await prisma.inquiry.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InquiryCreateManyAndReturnArgs>(args?: SelectSubset<T, InquiryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Inquiry.
     * @param {InquiryDeleteArgs} args - Arguments to delete one Inquiry.
     * @example
     * // Delete one Inquiry
     * const Inquiry = await prisma.inquiry.delete({
     *   where: {
     *     // ... filter to delete one Inquiry
     *   }
     * })
     * 
     */
    delete<T extends InquiryDeleteArgs>(args: SelectSubset<T, InquiryDeleteArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Inquiry.
     * @param {InquiryUpdateArgs} args - Arguments to update one Inquiry.
     * @example
     * // Update one Inquiry
     * const inquiry = await prisma.inquiry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InquiryUpdateArgs>(args: SelectSubset<T, InquiryUpdateArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Inquiries.
     * @param {InquiryDeleteManyArgs} args - Arguments to filter Inquiries to delete.
     * @example
     * // Delete a few Inquiries
     * const { count } = await prisma.inquiry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InquiryDeleteManyArgs>(args?: SelectSubset<T, InquiryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inquiries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inquiries
     * const inquiry = await prisma.inquiry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InquiryUpdateManyArgs>(args: SelectSubset<T, InquiryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inquiries and returns the data updated in the database.
     * @param {InquiryUpdateManyAndReturnArgs} args - Arguments to update many Inquiries.
     * @example
     * // Update many Inquiries
     * const inquiry = await prisma.inquiry.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Inquiries and only return the `id`
     * const inquiryWithIdOnly = await prisma.inquiry.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InquiryUpdateManyAndReturnArgs>(args: SelectSubset<T, InquiryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Inquiry.
     * @param {InquiryUpsertArgs} args - Arguments to update or create a Inquiry.
     * @example
     * // Update or create a Inquiry
     * const inquiry = await prisma.inquiry.upsert({
     *   create: {
     *     // ... data to create a Inquiry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inquiry we want to update
     *   }
     * })
     */
    upsert<T extends InquiryUpsertArgs>(args: SelectSubset<T, InquiryUpsertArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Inquiries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiryCountArgs} args - Arguments to filter Inquiries to count.
     * @example
     * // Count the number of Inquiries
     * const count = await prisma.inquiry.count({
     *   where: {
     *     // ... the filter for the Inquiries we want to count
     *   }
     * })
    **/
    count<T extends InquiryCountArgs>(
      args?: Subset<T, InquiryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InquiryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inquiry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InquiryAggregateArgs>(args: Subset<T, InquiryAggregateArgs>): Prisma.PrismaPromise<GetInquiryAggregateType<T>>

    /**
     * Group by Inquiry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InquiryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InquiryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InquiryGroupByArgs['orderBy'] }
        : { orderBy?: InquiryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InquiryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInquiryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Inquiry model
   */
  readonly fields: InquiryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Inquiry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InquiryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignee<T extends Inquiry$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Inquiry$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    department<T extends Inquiry$departmentArgs<ExtArgs> = {}>(args?: Subset<T, Inquiry$departmentArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    followUpRecords<T extends Inquiry$followUpRecordsArgs<ExtArgs> = {}>(args?: Subset<T, Inquiry$followUpRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aiAnalysisRecords<T extends Inquiry$aiAnalysisRecordsArgs<ExtArgs> = {}>(args?: Subset<T, Inquiry$aiAnalysisRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Inquiry model
   */
  interface InquiryFieldRefs {
    readonly id: FieldRef<"Inquiry", 'Int'>
    readonly inquiryNo: FieldRef<"Inquiry", 'String'>
    readonly title: FieldRef<"Inquiry", 'String'>
    readonly content: FieldRef<"Inquiry", 'String'>
    readonly sourceChannel: FieldRef<"Inquiry", 'String'>
    readonly customerName: FieldRef<"Inquiry", 'String'>
    readonly customerEmail: FieldRef<"Inquiry", 'String'>
    readonly customerPhone: FieldRef<"Inquiry", 'String'>
    readonly customerCompany: FieldRef<"Inquiry", 'String'>
    readonly customerAddress: FieldRef<"Inquiry", 'String'>
    readonly customerType: FieldRef<"Inquiry", 'CustomerType'>
    readonly region: FieldRef<"Inquiry", 'String'>
    readonly country: FieldRef<"Inquiry", 'String'>
    readonly assignedTo: FieldRef<"Inquiry", 'Int'>
    readonly departmentId: FieldRef<"Inquiry", 'Int'>
    readonly priority: FieldRef<"Inquiry", 'Priority'>
    readonly status: FieldRef<"Inquiry", 'InquiryStatus'>
    readonly estimatedValue: FieldRef<"Inquiry", 'Decimal'>
    readonly currency: FieldRef<"Inquiry", 'String'>
    readonly expectedCloseDate: FieldRef<"Inquiry", 'DateTime'>
    readonly aiAnalysisScore: FieldRef<"Inquiry", 'Decimal'>
    readonly aiAnalysisSummary: FieldRef<"Inquiry", 'String'>
    readonly tags: FieldRef<"Inquiry", 'Json'>
    readonly customFields: FieldRef<"Inquiry", 'Json'>
    readonly createdBy: FieldRef<"Inquiry", 'Int'>
    readonly createdAt: FieldRef<"Inquiry", 'DateTime'>
    readonly updatedAt: FieldRef<"Inquiry", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Inquiry findUnique
   */
  export type InquiryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * Filter, which Inquiry to fetch.
     */
    where: InquiryWhereUniqueInput
  }

  /**
   * Inquiry findUniqueOrThrow
   */
  export type InquiryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * Filter, which Inquiry to fetch.
     */
    where: InquiryWhereUniqueInput
  }

  /**
   * Inquiry findFirst
   */
  export type InquiryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * Filter, which Inquiry to fetch.
     */
    where?: InquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inquiries to fetch.
     */
    orderBy?: InquiryOrderByWithRelationInput | InquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inquiries.
     */
    cursor?: InquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inquiries.
     */
    distinct?: InquiryScalarFieldEnum | InquiryScalarFieldEnum[]
  }

  /**
   * Inquiry findFirstOrThrow
   */
  export type InquiryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * Filter, which Inquiry to fetch.
     */
    where?: InquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inquiries to fetch.
     */
    orderBy?: InquiryOrderByWithRelationInput | InquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inquiries.
     */
    cursor?: InquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inquiries.
     */
    distinct?: InquiryScalarFieldEnum | InquiryScalarFieldEnum[]
  }

  /**
   * Inquiry findMany
   */
  export type InquiryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * Filter, which Inquiries to fetch.
     */
    where?: InquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inquiries to fetch.
     */
    orderBy?: InquiryOrderByWithRelationInput | InquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Inquiries.
     */
    cursor?: InquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inquiries.
     */
    skip?: number
    distinct?: InquiryScalarFieldEnum | InquiryScalarFieldEnum[]
  }

  /**
   * Inquiry create
   */
  export type InquiryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * The data needed to create a Inquiry.
     */
    data: XOR<InquiryCreateInput, InquiryUncheckedCreateInput>
  }

  /**
   * Inquiry createMany
   */
  export type InquiryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Inquiries.
     */
    data: InquiryCreateManyInput | InquiryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Inquiry createManyAndReturn
   */
  export type InquiryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * The data used to create many Inquiries.
     */
    data: InquiryCreateManyInput | InquiryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inquiry update
   */
  export type InquiryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * The data needed to update a Inquiry.
     */
    data: XOR<InquiryUpdateInput, InquiryUncheckedUpdateInput>
    /**
     * Choose, which Inquiry to update.
     */
    where: InquiryWhereUniqueInput
  }

  /**
   * Inquiry updateMany
   */
  export type InquiryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Inquiries.
     */
    data: XOR<InquiryUpdateManyMutationInput, InquiryUncheckedUpdateManyInput>
    /**
     * Filter which Inquiries to update
     */
    where?: InquiryWhereInput
    /**
     * Limit how many Inquiries to update.
     */
    limit?: number
  }

  /**
   * Inquiry updateManyAndReturn
   */
  export type InquiryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * The data used to update Inquiries.
     */
    data: XOR<InquiryUpdateManyMutationInput, InquiryUncheckedUpdateManyInput>
    /**
     * Filter which Inquiries to update
     */
    where?: InquiryWhereInput
    /**
     * Limit how many Inquiries to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inquiry upsert
   */
  export type InquiryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * The filter to search for the Inquiry to update in case it exists.
     */
    where: InquiryWhereUniqueInput
    /**
     * In case the Inquiry found by the `where` argument doesn't exist, create a new Inquiry with this data.
     */
    create: XOR<InquiryCreateInput, InquiryUncheckedCreateInput>
    /**
     * In case the Inquiry was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InquiryUpdateInput, InquiryUncheckedUpdateInput>
  }

  /**
   * Inquiry delete
   */
  export type InquiryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
    /**
     * Filter which Inquiry to delete.
     */
    where: InquiryWhereUniqueInput
  }

  /**
   * Inquiry deleteMany
   */
  export type InquiryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inquiries to delete
     */
    where?: InquiryWhereInput
    /**
     * Limit how many Inquiries to delete.
     */
    limit?: number
  }

  /**
   * Inquiry.assignee
   */
  export type Inquiry$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Inquiry.department
   */
  export type Inquiry$departmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
  }

  /**
   * Inquiry.followUpRecords
   */
  export type Inquiry$followUpRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    where?: FollowUpRecordWhereInput
    orderBy?: FollowUpRecordOrderByWithRelationInput | FollowUpRecordOrderByWithRelationInput[]
    cursor?: FollowUpRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FollowUpRecordScalarFieldEnum | FollowUpRecordScalarFieldEnum[]
  }

  /**
   * Inquiry.aiAnalysisRecords
   */
  export type Inquiry$aiAnalysisRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    where?: AiAnalysisRecordWhereInput
    orderBy?: AiAnalysisRecordOrderByWithRelationInput | AiAnalysisRecordOrderByWithRelationInput[]
    cursor?: AiAnalysisRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AiAnalysisRecordScalarFieldEnum | AiAnalysisRecordScalarFieldEnum[]
  }

  /**
   * Inquiry without action
   */
  export type InquiryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inquiry
     */
    select?: InquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inquiry
     */
    omit?: InquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InquiryInclude<ExtArgs> | null
  }


  /**
   * Model CustomFieldDefinition
   */

  export type AggregateCustomFieldDefinition = {
    _count: CustomFieldDefinitionCountAggregateOutputType | null
    _avg: CustomFieldDefinitionAvgAggregateOutputType | null
    _sum: CustomFieldDefinitionSumAggregateOutputType | null
    _min: CustomFieldDefinitionMinAggregateOutputType | null
    _max: CustomFieldDefinitionMaxAggregateOutputType | null
  }

  export type CustomFieldDefinitionAvgAggregateOutputType = {
    id: number | null
    displayOrder: number | null
    createdBy: number | null
  }

  export type CustomFieldDefinitionSumAggregateOutputType = {
    id: number | null
    displayOrder: number | null
    createdBy: number | null
  }

  export type CustomFieldDefinitionMinAggregateOutputType = {
    id: number | null
    fieldName: string | null
    fieldKey: string | null
    fieldType: $Enums.CustomFieldType | null
    defaultValue: string | null
    isRequired: boolean | null
    isSearchable: boolean | null
    displayOrder: number | null
    description: string | null
    status: $Enums.CustomFieldStatus | null
    createdBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomFieldDefinitionMaxAggregateOutputType = {
    id: number | null
    fieldName: string | null
    fieldKey: string | null
    fieldType: $Enums.CustomFieldType | null
    defaultValue: string | null
    isRequired: boolean | null
    isSearchable: boolean | null
    displayOrder: number | null
    description: string | null
    status: $Enums.CustomFieldStatus | null
    createdBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomFieldDefinitionCountAggregateOutputType = {
    id: number
    fieldName: number
    fieldKey: number
    fieldType: number
    fieldOptions: number
    defaultValue: number
    isRequired: number
    isSearchable: number
    displayOrder: number
    validationRules: number
    description: number
    status: number
    createdBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomFieldDefinitionAvgAggregateInputType = {
    id?: true
    displayOrder?: true
    createdBy?: true
  }

  export type CustomFieldDefinitionSumAggregateInputType = {
    id?: true
    displayOrder?: true
    createdBy?: true
  }

  export type CustomFieldDefinitionMinAggregateInputType = {
    id?: true
    fieldName?: true
    fieldKey?: true
    fieldType?: true
    defaultValue?: true
    isRequired?: true
    isSearchable?: true
    displayOrder?: true
    description?: true
    status?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomFieldDefinitionMaxAggregateInputType = {
    id?: true
    fieldName?: true
    fieldKey?: true
    fieldType?: true
    defaultValue?: true
    isRequired?: true
    isSearchable?: true
    displayOrder?: true
    description?: true
    status?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomFieldDefinitionCountAggregateInputType = {
    id?: true
    fieldName?: true
    fieldKey?: true
    fieldType?: true
    fieldOptions?: true
    defaultValue?: true
    isRequired?: true
    isSearchable?: true
    displayOrder?: true
    validationRules?: true
    description?: true
    status?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomFieldDefinitionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomFieldDefinition to aggregate.
     */
    where?: CustomFieldDefinitionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldDefinitions to fetch.
     */
    orderBy?: CustomFieldDefinitionOrderByWithRelationInput | CustomFieldDefinitionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomFieldDefinitionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldDefinitions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldDefinitions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomFieldDefinitions
    **/
    _count?: true | CustomFieldDefinitionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomFieldDefinitionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomFieldDefinitionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomFieldDefinitionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomFieldDefinitionMaxAggregateInputType
  }

  export type GetCustomFieldDefinitionAggregateType<T extends CustomFieldDefinitionAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomFieldDefinition]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomFieldDefinition[P]>
      : GetScalarType<T[P], AggregateCustomFieldDefinition[P]>
  }




  export type CustomFieldDefinitionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomFieldDefinitionWhereInput
    orderBy?: CustomFieldDefinitionOrderByWithAggregationInput | CustomFieldDefinitionOrderByWithAggregationInput[]
    by: CustomFieldDefinitionScalarFieldEnum[] | CustomFieldDefinitionScalarFieldEnum
    having?: CustomFieldDefinitionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomFieldDefinitionCountAggregateInputType | true
    _avg?: CustomFieldDefinitionAvgAggregateInputType
    _sum?: CustomFieldDefinitionSumAggregateInputType
    _min?: CustomFieldDefinitionMinAggregateInputType
    _max?: CustomFieldDefinitionMaxAggregateInputType
  }

  export type CustomFieldDefinitionGroupByOutputType = {
    id: number
    fieldName: string
    fieldKey: string
    fieldType: $Enums.CustomFieldType
    fieldOptions: JsonValue | null
    defaultValue: string | null
    isRequired: boolean
    isSearchable: boolean
    displayOrder: number
    validationRules: JsonValue | null
    description: string | null
    status: $Enums.CustomFieldStatus
    createdBy: number
    createdAt: Date
    updatedAt: Date
    _count: CustomFieldDefinitionCountAggregateOutputType | null
    _avg: CustomFieldDefinitionAvgAggregateOutputType | null
    _sum: CustomFieldDefinitionSumAggregateOutputType | null
    _min: CustomFieldDefinitionMinAggregateOutputType | null
    _max: CustomFieldDefinitionMaxAggregateOutputType | null
  }

  type GetCustomFieldDefinitionGroupByPayload<T extends CustomFieldDefinitionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomFieldDefinitionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomFieldDefinitionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomFieldDefinitionGroupByOutputType[P]>
            : GetScalarType<T[P], CustomFieldDefinitionGroupByOutputType[P]>
        }
      >
    >


  export type CustomFieldDefinitionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fieldName?: boolean
    fieldKey?: boolean
    fieldType?: boolean
    fieldOptions?: boolean
    defaultValue?: boolean
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: boolean
    validationRules?: boolean
    description?: boolean
    status?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userConfigs?: boolean | CustomFieldDefinition$userConfigsArgs<ExtArgs>
    _count?: boolean | CustomFieldDefinitionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customFieldDefinition"]>

  export type CustomFieldDefinitionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fieldName?: boolean
    fieldKey?: boolean
    fieldType?: boolean
    fieldOptions?: boolean
    defaultValue?: boolean
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: boolean
    validationRules?: boolean
    description?: boolean
    status?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["customFieldDefinition"]>

  export type CustomFieldDefinitionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fieldName?: boolean
    fieldKey?: boolean
    fieldType?: boolean
    fieldOptions?: boolean
    defaultValue?: boolean
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: boolean
    validationRules?: boolean
    description?: boolean
    status?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["customFieldDefinition"]>

  export type CustomFieldDefinitionSelectScalar = {
    id?: boolean
    fieldName?: boolean
    fieldKey?: boolean
    fieldType?: boolean
    fieldOptions?: boolean
    defaultValue?: boolean
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: boolean
    validationRules?: boolean
    description?: boolean
    status?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomFieldDefinitionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fieldName" | "fieldKey" | "fieldType" | "fieldOptions" | "defaultValue" | "isRequired" | "isSearchable" | "displayOrder" | "validationRules" | "description" | "status" | "createdBy" | "createdAt" | "updatedAt", ExtArgs["result"]["customFieldDefinition"]>
  export type CustomFieldDefinitionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userConfigs?: boolean | CustomFieldDefinition$userConfigsArgs<ExtArgs>
    _count?: boolean | CustomFieldDefinitionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomFieldDefinitionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CustomFieldDefinitionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CustomFieldDefinitionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomFieldDefinition"
    objects: {
      userConfigs: Prisma.$UserCustomFieldConfigPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fieldName: string
      fieldKey: string
      fieldType: $Enums.CustomFieldType
      fieldOptions: Prisma.JsonValue | null
      defaultValue: string | null
      isRequired: boolean
      isSearchable: boolean
      displayOrder: number
      validationRules: Prisma.JsonValue | null
      description: string | null
      status: $Enums.CustomFieldStatus
      createdBy: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customFieldDefinition"]>
    composites: {}
  }

  type CustomFieldDefinitionGetPayload<S extends boolean | null | undefined | CustomFieldDefinitionDefaultArgs> = $Result.GetResult<Prisma.$CustomFieldDefinitionPayload, S>

  type CustomFieldDefinitionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomFieldDefinitionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomFieldDefinitionCountAggregateInputType | true
    }

  export interface CustomFieldDefinitionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomFieldDefinition'], meta: { name: 'CustomFieldDefinition' } }
    /**
     * Find zero or one CustomFieldDefinition that matches the filter.
     * @param {CustomFieldDefinitionFindUniqueArgs} args - Arguments to find a CustomFieldDefinition
     * @example
     * // Get one CustomFieldDefinition
     * const customFieldDefinition = await prisma.customFieldDefinition.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomFieldDefinitionFindUniqueArgs>(args: SelectSubset<T, CustomFieldDefinitionFindUniqueArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CustomFieldDefinition that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomFieldDefinitionFindUniqueOrThrowArgs} args - Arguments to find a CustomFieldDefinition
     * @example
     * // Get one CustomFieldDefinition
     * const customFieldDefinition = await prisma.customFieldDefinition.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomFieldDefinitionFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomFieldDefinitionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomFieldDefinition that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldDefinitionFindFirstArgs} args - Arguments to find a CustomFieldDefinition
     * @example
     * // Get one CustomFieldDefinition
     * const customFieldDefinition = await prisma.customFieldDefinition.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomFieldDefinitionFindFirstArgs>(args?: SelectSubset<T, CustomFieldDefinitionFindFirstArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomFieldDefinition that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldDefinitionFindFirstOrThrowArgs} args - Arguments to find a CustomFieldDefinition
     * @example
     * // Get one CustomFieldDefinition
     * const customFieldDefinition = await prisma.customFieldDefinition.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomFieldDefinitionFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomFieldDefinitionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CustomFieldDefinitions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldDefinitionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomFieldDefinitions
     * const customFieldDefinitions = await prisma.customFieldDefinition.findMany()
     * 
     * // Get first 10 CustomFieldDefinitions
     * const customFieldDefinitions = await prisma.customFieldDefinition.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customFieldDefinitionWithIdOnly = await prisma.customFieldDefinition.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomFieldDefinitionFindManyArgs>(args?: SelectSubset<T, CustomFieldDefinitionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CustomFieldDefinition.
     * @param {CustomFieldDefinitionCreateArgs} args - Arguments to create a CustomFieldDefinition.
     * @example
     * // Create one CustomFieldDefinition
     * const CustomFieldDefinition = await prisma.customFieldDefinition.create({
     *   data: {
     *     // ... data to create a CustomFieldDefinition
     *   }
     * })
     * 
     */
    create<T extends CustomFieldDefinitionCreateArgs>(args: SelectSubset<T, CustomFieldDefinitionCreateArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CustomFieldDefinitions.
     * @param {CustomFieldDefinitionCreateManyArgs} args - Arguments to create many CustomFieldDefinitions.
     * @example
     * // Create many CustomFieldDefinitions
     * const customFieldDefinition = await prisma.customFieldDefinition.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomFieldDefinitionCreateManyArgs>(args?: SelectSubset<T, CustomFieldDefinitionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CustomFieldDefinitions and returns the data saved in the database.
     * @param {CustomFieldDefinitionCreateManyAndReturnArgs} args - Arguments to create many CustomFieldDefinitions.
     * @example
     * // Create many CustomFieldDefinitions
     * const customFieldDefinition = await prisma.customFieldDefinition.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CustomFieldDefinitions and only return the `id`
     * const customFieldDefinitionWithIdOnly = await prisma.customFieldDefinition.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomFieldDefinitionCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomFieldDefinitionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CustomFieldDefinition.
     * @param {CustomFieldDefinitionDeleteArgs} args - Arguments to delete one CustomFieldDefinition.
     * @example
     * // Delete one CustomFieldDefinition
     * const CustomFieldDefinition = await prisma.customFieldDefinition.delete({
     *   where: {
     *     // ... filter to delete one CustomFieldDefinition
     *   }
     * })
     * 
     */
    delete<T extends CustomFieldDefinitionDeleteArgs>(args: SelectSubset<T, CustomFieldDefinitionDeleteArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CustomFieldDefinition.
     * @param {CustomFieldDefinitionUpdateArgs} args - Arguments to update one CustomFieldDefinition.
     * @example
     * // Update one CustomFieldDefinition
     * const customFieldDefinition = await prisma.customFieldDefinition.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomFieldDefinitionUpdateArgs>(args: SelectSubset<T, CustomFieldDefinitionUpdateArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CustomFieldDefinitions.
     * @param {CustomFieldDefinitionDeleteManyArgs} args - Arguments to filter CustomFieldDefinitions to delete.
     * @example
     * // Delete a few CustomFieldDefinitions
     * const { count } = await prisma.customFieldDefinition.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomFieldDefinitionDeleteManyArgs>(args?: SelectSubset<T, CustomFieldDefinitionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomFieldDefinitions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldDefinitionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomFieldDefinitions
     * const customFieldDefinition = await prisma.customFieldDefinition.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomFieldDefinitionUpdateManyArgs>(args: SelectSubset<T, CustomFieldDefinitionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomFieldDefinitions and returns the data updated in the database.
     * @param {CustomFieldDefinitionUpdateManyAndReturnArgs} args - Arguments to update many CustomFieldDefinitions.
     * @example
     * // Update many CustomFieldDefinitions
     * const customFieldDefinition = await prisma.customFieldDefinition.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CustomFieldDefinitions and only return the `id`
     * const customFieldDefinitionWithIdOnly = await prisma.customFieldDefinition.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CustomFieldDefinitionUpdateManyAndReturnArgs>(args: SelectSubset<T, CustomFieldDefinitionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CustomFieldDefinition.
     * @param {CustomFieldDefinitionUpsertArgs} args - Arguments to update or create a CustomFieldDefinition.
     * @example
     * // Update or create a CustomFieldDefinition
     * const customFieldDefinition = await prisma.customFieldDefinition.upsert({
     *   create: {
     *     // ... data to create a CustomFieldDefinition
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomFieldDefinition we want to update
     *   }
     * })
     */
    upsert<T extends CustomFieldDefinitionUpsertArgs>(args: SelectSubset<T, CustomFieldDefinitionUpsertArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CustomFieldDefinitions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldDefinitionCountArgs} args - Arguments to filter CustomFieldDefinitions to count.
     * @example
     * // Count the number of CustomFieldDefinitions
     * const count = await prisma.customFieldDefinition.count({
     *   where: {
     *     // ... the filter for the CustomFieldDefinitions we want to count
     *   }
     * })
    **/
    count<T extends CustomFieldDefinitionCountArgs>(
      args?: Subset<T, CustomFieldDefinitionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomFieldDefinitionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomFieldDefinition.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldDefinitionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomFieldDefinitionAggregateArgs>(args: Subset<T, CustomFieldDefinitionAggregateArgs>): Prisma.PrismaPromise<GetCustomFieldDefinitionAggregateType<T>>

    /**
     * Group by CustomFieldDefinition.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomFieldDefinitionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomFieldDefinitionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomFieldDefinitionGroupByArgs['orderBy'] }
        : { orderBy?: CustomFieldDefinitionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomFieldDefinitionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomFieldDefinitionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomFieldDefinition model
   */
  readonly fields: CustomFieldDefinitionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomFieldDefinition.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomFieldDefinitionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userConfigs<T extends CustomFieldDefinition$userConfigsArgs<ExtArgs> = {}>(args?: Subset<T, CustomFieldDefinition$userConfigsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomFieldDefinition model
   */
  interface CustomFieldDefinitionFieldRefs {
    readonly id: FieldRef<"CustomFieldDefinition", 'Int'>
    readonly fieldName: FieldRef<"CustomFieldDefinition", 'String'>
    readonly fieldKey: FieldRef<"CustomFieldDefinition", 'String'>
    readonly fieldType: FieldRef<"CustomFieldDefinition", 'CustomFieldType'>
    readonly fieldOptions: FieldRef<"CustomFieldDefinition", 'Json'>
    readonly defaultValue: FieldRef<"CustomFieldDefinition", 'String'>
    readonly isRequired: FieldRef<"CustomFieldDefinition", 'Boolean'>
    readonly isSearchable: FieldRef<"CustomFieldDefinition", 'Boolean'>
    readonly displayOrder: FieldRef<"CustomFieldDefinition", 'Int'>
    readonly validationRules: FieldRef<"CustomFieldDefinition", 'Json'>
    readonly description: FieldRef<"CustomFieldDefinition", 'String'>
    readonly status: FieldRef<"CustomFieldDefinition", 'CustomFieldStatus'>
    readonly createdBy: FieldRef<"CustomFieldDefinition", 'Int'>
    readonly createdAt: FieldRef<"CustomFieldDefinition", 'DateTime'>
    readonly updatedAt: FieldRef<"CustomFieldDefinition", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CustomFieldDefinition findUnique
   */
  export type CustomFieldDefinitionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldDefinition to fetch.
     */
    where: CustomFieldDefinitionWhereUniqueInput
  }

  /**
   * CustomFieldDefinition findUniqueOrThrow
   */
  export type CustomFieldDefinitionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldDefinition to fetch.
     */
    where: CustomFieldDefinitionWhereUniqueInput
  }

  /**
   * CustomFieldDefinition findFirst
   */
  export type CustomFieldDefinitionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldDefinition to fetch.
     */
    where?: CustomFieldDefinitionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldDefinitions to fetch.
     */
    orderBy?: CustomFieldDefinitionOrderByWithRelationInput | CustomFieldDefinitionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomFieldDefinitions.
     */
    cursor?: CustomFieldDefinitionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldDefinitions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldDefinitions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomFieldDefinitions.
     */
    distinct?: CustomFieldDefinitionScalarFieldEnum | CustomFieldDefinitionScalarFieldEnum[]
  }

  /**
   * CustomFieldDefinition findFirstOrThrow
   */
  export type CustomFieldDefinitionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldDefinition to fetch.
     */
    where?: CustomFieldDefinitionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldDefinitions to fetch.
     */
    orderBy?: CustomFieldDefinitionOrderByWithRelationInput | CustomFieldDefinitionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomFieldDefinitions.
     */
    cursor?: CustomFieldDefinitionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldDefinitions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldDefinitions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomFieldDefinitions.
     */
    distinct?: CustomFieldDefinitionScalarFieldEnum | CustomFieldDefinitionScalarFieldEnum[]
  }

  /**
   * CustomFieldDefinition findMany
   */
  export type CustomFieldDefinitionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * Filter, which CustomFieldDefinitions to fetch.
     */
    where?: CustomFieldDefinitionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomFieldDefinitions to fetch.
     */
    orderBy?: CustomFieldDefinitionOrderByWithRelationInput | CustomFieldDefinitionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomFieldDefinitions.
     */
    cursor?: CustomFieldDefinitionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomFieldDefinitions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomFieldDefinitions.
     */
    skip?: number
    distinct?: CustomFieldDefinitionScalarFieldEnum | CustomFieldDefinitionScalarFieldEnum[]
  }

  /**
   * CustomFieldDefinition create
   */
  export type CustomFieldDefinitionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomFieldDefinition.
     */
    data: XOR<CustomFieldDefinitionCreateInput, CustomFieldDefinitionUncheckedCreateInput>
  }

  /**
   * CustomFieldDefinition createMany
   */
  export type CustomFieldDefinitionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomFieldDefinitions.
     */
    data: CustomFieldDefinitionCreateManyInput | CustomFieldDefinitionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomFieldDefinition createManyAndReturn
   */
  export type CustomFieldDefinitionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * The data used to create many CustomFieldDefinitions.
     */
    data: CustomFieldDefinitionCreateManyInput | CustomFieldDefinitionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomFieldDefinition update
   */
  export type CustomFieldDefinitionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomFieldDefinition.
     */
    data: XOR<CustomFieldDefinitionUpdateInput, CustomFieldDefinitionUncheckedUpdateInput>
    /**
     * Choose, which CustomFieldDefinition to update.
     */
    where: CustomFieldDefinitionWhereUniqueInput
  }

  /**
   * CustomFieldDefinition updateMany
   */
  export type CustomFieldDefinitionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomFieldDefinitions.
     */
    data: XOR<CustomFieldDefinitionUpdateManyMutationInput, CustomFieldDefinitionUncheckedUpdateManyInput>
    /**
     * Filter which CustomFieldDefinitions to update
     */
    where?: CustomFieldDefinitionWhereInput
    /**
     * Limit how many CustomFieldDefinitions to update.
     */
    limit?: number
  }

  /**
   * CustomFieldDefinition updateManyAndReturn
   */
  export type CustomFieldDefinitionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * The data used to update CustomFieldDefinitions.
     */
    data: XOR<CustomFieldDefinitionUpdateManyMutationInput, CustomFieldDefinitionUncheckedUpdateManyInput>
    /**
     * Filter which CustomFieldDefinitions to update
     */
    where?: CustomFieldDefinitionWhereInput
    /**
     * Limit how many CustomFieldDefinitions to update.
     */
    limit?: number
  }

  /**
   * CustomFieldDefinition upsert
   */
  export type CustomFieldDefinitionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomFieldDefinition to update in case it exists.
     */
    where: CustomFieldDefinitionWhereUniqueInput
    /**
     * In case the CustomFieldDefinition found by the `where` argument doesn't exist, create a new CustomFieldDefinition with this data.
     */
    create: XOR<CustomFieldDefinitionCreateInput, CustomFieldDefinitionUncheckedCreateInput>
    /**
     * In case the CustomFieldDefinition was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomFieldDefinitionUpdateInput, CustomFieldDefinitionUncheckedUpdateInput>
  }

  /**
   * CustomFieldDefinition delete
   */
  export type CustomFieldDefinitionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
    /**
     * Filter which CustomFieldDefinition to delete.
     */
    where: CustomFieldDefinitionWhereUniqueInput
  }

  /**
   * CustomFieldDefinition deleteMany
   */
  export type CustomFieldDefinitionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomFieldDefinitions to delete
     */
    where?: CustomFieldDefinitionWhereInput
    /**
     * Limit how many CustomFieldDefinitions to delete.
     */
    limit?: number
  }

  /**
   * CustomFieldDefinition.userConfigs
   */
  export type CustomFieldDefinition$userConfigsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    where?: UserCustomFieldConfigWhereInput
    orderBy?: UserCustomFieldConfigOrderByWithRelationInput | UserCustomFieldConfigOrderByWithRelationInput[]
    cursor?: UserCustomFieldConfigWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserCustomFieldConfigScalarFieldEnum | UserCustomFieldConfigScalarFieldEnum[]
  }

  /**
   * CustomFieldDefinition without action
   */
  export type CustomFieldDefinitionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomFieldDefinition
     */
    select?: CustomFieldDefinitionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomFieldDefinition
     */
    omit?: CustomFieldDefinitionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomFieldDefinitionInclude<ExtArgs> | null
  }


  /**
   * Model UserCustomFieldConfig
   */

  export type AggregateUserCustomFieldConfig = {
    _count: UserCustomFieldConfigCountAggregateOutputType | null
    _avg: UserCustomFieldConfigAvgAggregateOutputType | null
    _sum: UserCustomFieldConfigSumAggregateOutputType | null
    _min: UserCustomFieldConfigMinAggregateOutputType | null
    _max: UserCustomFieldConfigMaxAggregateOutputType | null
  }

  export type UserCustomFieldConfigAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    fieldId: number | null
    displayOrder: number | null
    columnWidth: number | null
  }

  export type UserCustomFieldConfigSumAggregateOutputType = {
    id: number | null
    userId: number | null
    fieldId: number | null
    displayOrder: number | null
    columnWidth: number | null
  }

  export type UserCustomFieldConfigMinAggregateOutputType = {
    id: number | null
    userId: number | null
    fieldId: number | null
    isVisible: boolean | null
    displayOrder: number | null
    columnWidth: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCustomFieldConfigMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    fieldId: number | null
    isVisible: boolean | null
    displayOrder: number | null
    columnWidth: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCustomFieldConfigCountAggregateOutputType = {
    id: number
    userId: number
    fieldId: number
    isVisible: number
    displayOrder: number
    columnWidth: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserCustomFieldConfigAvgAggregateInputType = {
    id?: true
    userId?: true
    fieldId?: true
    displayOrder?: true
    columnWidth?: true
  }

  export type UserCustomFieldConfigSumAggregateInputType = {
    id?: true
    userId?: true
    fieldId?: true
    displayOrder?: true
    columnWidth?: true
  }

  export type UserCustomFieldConfigMinAggregateInputType = {
    id?: true
    userId?: true
    fieldId?: true
    isVisible?: true
    displayOrder?: true
    columnWidth?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCustomFieldConfigMaxAggregateInputType = {
    id?: true
    userId?: true
    fieldId?: true
    isVisible?: true
    displayOrder?: true
    columnWidth?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCustomFieldConfigCountAggregateInputType = {
    id?: true
    userId?: true
    fieldId?: true
    isVisible?: true
    displayOrder?: true
    columnWidth?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserCustomFieldConfigAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserCustomFieldConfig to aggregate.
     */
    where?: UserCustomFieldConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCustomFieldConfigs to fetch.
     */
    orderBy?: UserCustomFieldConfigOrderByWithRelationInput | UserCustomFieldConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserCustomFieldConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCustomFieldConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCustomFieldConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserCustomFieldConfigs
    **/
    _count?: true | UserCustomFieldConfigCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserCustomFieldConfigAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserCustomFieldConfigSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserCustomFieldConfigMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserCustomFieldConfigMaxAggregateInputType
  }

  export type GetUserCustomFieldConfigAggregateType<T extends UserCustomFieldConfigAggregateArgs> = {
        [P in keyof T & keyof AggregateUserCustomFieldConfig]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserCustomFieldConfig[P]>
      : GetScalarType<T[P], AggregateUserCustomFieldConfig[P]>
  }




  export type UserCustomFieldConfigGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserCustomFieldConfigWhereInput
    orderBy?: UserCustomFieldConfigOrderByWithAggregationInput | UserCustomFieldConfigOrderByWithAggregationInput[]
    by: UserCustomFieldConfigScalarFieldEnum[] | UserCustomFieldConfigScalarFieldEnum
    having?: UserCustomFieldConfigScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCustomFieldConfigCountAggregateInputType | true
    _avg?: UserCustomFieldConfigAvgAggregateInputType
    _sum?: UserCustomFieldConfigSumAggregateInputType
    _min?: UserCustomFieldConfigMinAggregateInputType
    _max?: UserCustomFieldConfigMaxAggregateInputType
  }

  export type UserCustomFieldConfigGroupByOutputType = {
    id: number
    userId: number
    fieldId: number
    isVisible: boolean
    displayOrder: number
    columnWidth: number | null
    createdAt: Date
    updatedAt: Date
    _count: UserCustomFieldConfigCountAggregateOutputType | null
    _avg: UserCustomFieldConfigAvgAggregateOutputType | null
    _sum: UserCustomFieldConfigSumAggregateOutputType | null
    _min: UserCustomFieldConfigMinAggregateOutputType | null
    _max: UserCustomFieldConfigMaxAggregateOutputType | null
  }

  type GetUserCustomFieldConfigGroupByPayload<T extends UserCustomFieldConfigGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserCustomFieldConfigGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserCustomFieldConfigGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserCustomFieldConfigGroupByOutputType[P]>
            : GetScalarType<T[P], UserCustomFieldConfigGroupByOutputType[P]>
        }
      >
    >


  export type UserCustomFieldConfigSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fieldId?: boolean
    isVisible?: boolean
    displayOrder?: boolean
    columnWidth?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    field?: boolean | CustomFieldDefinitionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userCustomFieldConfig"]>

  export type UserCustomFieldConfigSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fieldId?: boolean
    isVisible?: boolean
    displayOrder?: boolean
    columnWidth?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    field?: boolean | CustomFieldDefinitionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userCustomFieldConfig"]>

  export type UserCustomFieldConfigSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fieldId?: boolean
    isVisible?: boolean
    displayOrder?: boolean
    columnWidth?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    field?: boolean | CustomFieldDefinitionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userCustomFieldConfig"]>

  export type UserCustomFieldConfigSelectScalar = {
    id?: boolean
    userId?: boolean
    fieldId?: boolean
    isVisible?: boolean
    displayOrder?: boolean
    columnWidth?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserCustomFieldConfigOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "fieldId" | "isVisible" | "displayOrder" | "columnWidth" | "createdAt" | "updatedAt", ExtArgs["result"]["userCustomFieldConfig"]>
  export type UserCustomFieldConfigInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    field?: boolean | CustomFieldDefinitionDefaultArgs<ExtArgs>
  }
  export type UserCustomFieldConfigIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    field?: boolean | CustomFieldDefinitionDefaultArgs<ExtArgs>
  }
  export type UserCustomFieldConfigIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    field?: boolean | CustomFieldDefinitionDefaultArgs<ExtArgs>
  }

  export type $UserCustomFieldConfigPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserCustomFieldConfig"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      field: Prisma.$CustomFieldDefinitionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      fieldId: number
      isVisible: boolean
      displayOrder: number
      columnWidth: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userCustomFieldConfig"]>
    composites: {}
  }

  type UserCustomFieldConfigGetPayload<S extends boolean | null | undefined | UserCustomFieldConfigDefaultArgs> = $Result.GetResult<Prisma.$UserCustomFieldConfigPayload, S>

  type UserCustomFieldConfigCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserCustomFieldConfigFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCustomFieldConfigCountAggregateInputType | true
    }

  export interface UserCustomFieldConfigDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserCustomFieldConfig'], meta: { name: 'UserCustomFieldConfig' } }
    /**
     * Find zero or one UserCustomFieldConfig that matches the filter.
     * @param {UserCustomFieldConfigFindUniqueArgs} args - Arguments to find a UserCustomFieldConfig
     * @example
     * // Get one UserCustomFieldConfig
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserCustomFieldConfigFindUniqueArgs>(args: SelectSubset<T, UserCustomFieldConfigFindUniqueArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserCustomFieldConfig that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserCustomFieldConfigFindUniqueOrThrowArgs} args - Arguments to find a UserCustomFieldConfig
     * @example
     * // Get one UserCustomFieldConfig
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserCustomFieldConfigFindUniqueOrThrowArgs>(args: SelectSubset<T, UserCustomFieldConfigFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserCustomFieldConfig that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCustomFieldConfigFindFirstArgs} args - Arguments to find a UserCustomFieldConfig
     * @example
     * // Get one UserCustomFieldConfig
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserCustomFieldConfigFindFirstArgs>(args?: SelectSubset<T, UserCustomFieldConfigFindFirstArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserCustomFieldConfig that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCustomFieldConfigFindFirstOrThrowArgs} args - Arguments to find a UserCustomFieldConfig
     * @example
     * // Get one UserCustomFieldConfig
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserCustomFieldConfigFindFirstOrThrowArgs>(args?: SelectSubset<T, UserCustomFieldConfigFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserCustomFieldConfigs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCustomFieldConfigFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserCustomFieldConfigs
     * const userCustomFieldConfigs = await prisma.userCustomFieldConfig.findMany()
     * 
     * // Get first 10 UserCustomFieldConfigs
     * const userCustomFieldConfigs = await prisma.userCustomFieldConfig.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userCustomFieldConfigWithIdOnly = await prisma.userCustomFieldConfig.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserCustomFieldConfigFindManyArgs>(args?: SelectSubset<T, UserCustomFieldConfigFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserCustomFieldConfig.
     * @param {UserCustomFieldConfigCreateArgs} args - Arguments to create a UserCustomFieldConfig.
     * @example
     * // Create one UserCustomFieldConfig
     * const UserCustomFieldConfig = await prisma.userCustomFieldConfig.create({
     *   data: {
     *     // ... data to create a UserCustomFieldConfig
     *   }
     * })
     * 
     */
    create<T extends UserCustomFieldConfigCreateArgs>(args: SelectSubset<T, UserCustomFieldConfigCreateArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserCustomFieldConfigs.
     * @param {UserCustomFieldConfigCreateManyArgs} args - Arguments to create many UserCustomFieldConfigs.
     * @example
     * // Create many UserCustomFieldConfigs
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCustomFieldConfigCreateManyArgs>(args?: SelectSubset<T, UserCustomFieldConfigCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserCustomFieldConfigs and returns the data saved in the database.
     * @param {UserCustomFieldConfigCreateManyAndReturnArgs} args - Arguments to create many UserCustomFieldConfigs.
     * @example
     * // Create many UserCustomFieldConfigs
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserCustomFieldConfigs and only return the `id`
     * const userCustomFieldConfigWithIdOnly = await prisma.userCustomFieldConfig.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCustomFieldConfigCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCustomFieldConfigCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserCustomFieldConfig.
     * @param {UserCustomFieldConfigDeleteArgs} args - Arguments to delete one UserCustomFieldConfig.
     * @example
     * // Delete one UserCustomFieldConfig
     * const UserCustomFieldConfig = await prisma.userCustomFieldConfig.delete({
     *   where: {
     *     // ... filter to delete one UserCustomFieldConfig
     *   }
     * })
     * 
     */
    delete<T extends UserCustomFieldConfigDeleteArgs>(args: SelectSubset<T, UserCustomFieldConfigDeleteArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserCustomFieldConfig.
     * @param {UserCustomFieldConfigUpdateArgs} args - Arguments to update one UserCustomFieldConfig.
     * @example
     * // Update one UserCustomFieldConfig
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserCustomFieldConfigUpdateArgs>(args: SelectSubset<T, UserCustomFieldConfigUpdateArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserCustomFieldConfigs.
     * @param {UserCustomFieldConfigDeleteManyArgs} args - Arguments to filter UserCustomFieldConfigs to delete.
     * @example
     * // Delete a few UserCustomFieldConfigs
     * const { count } = await prisma.userCustomFieldConfig.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserCustomFieldConfigDeleteManyArgs>(args?: SelectSubset<T, UserCustomFieldConfigDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserCustomFieldConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCustomFieldConfigUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserCustomFieldConfigs
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserCustomFieldConfigUpdateManyArgs>(args: SelectSubset<T, UserCustomFieldConfigUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserCustomFieldConfigs and returns the data updated in the database.
     * @param {UserCustomFieldConfigUpdateManyAndReturnArgs} args - Arguments to update many UserCustomFieldConfigs.
     * @example
     * // Update many UserCustomFieldConfigs
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserCustomFieldConfigs and only return the `id`
     * const userCustomFieldConfigWithIdOnly = await prisma.userCustomFieldConfig.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserCustomFieldConfigUpdateManyAndReturnArgs>(args: SelectSubset<T, UserCustomFieldConfigUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserCustomFieldConfig.
     * @param {UserCustomFieldConfigUpsertArgs} args - Arguments to update or create a UserCustomFieldConfig.
     * @example
     * // Update or create a UserCustomFieldConfig
     * const userCustomFieldConfig = await prisma.userCustomFieldConfig.upsert({
     *   create: {
     *     // ... data to create a UserCustomFieldConfig
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserCustomFieldConfig we want to update
     *   }
     * })
     */
    upsert<T extends UserCustomFieldConfigUpsertArgs>(args: SelectSubset<T, UserCustomFieldConfigUpsertArgs<ExtArgs>>): Prisma__UserCustomFieldConfigClient<$Result.GetResult<Prisma.$UserCustomFieldConfigPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserCustomFieldConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCustomFieldConfigCountArgs} args - Arguments to filter UserCustomFieldConfigs to count.
     * @example
     * // Count the number of UserCustomFieldConfigs
     * const count = await prisma.userCustomFieldConfig.count({
     *   where: {
     *     // ... the filter for the UserCustomFieldConfigs we want to count
     *   }
     * })
    **/
    count<T extends UserCustomFieldConfigCountArgs>(
      args?: Subset<T, UserCustomFieldConfigCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCustomFieldConfigCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserCustomFieldConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCustomFieldConfigAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserCustomFieldConfigAggregateArgs>(args: Subset<T, UserCustomFieldConfigAggregateArgs>): Prisma.PrismaPromise<GetUserCustomFieldConfigAggregateType<T>>

    /**
     * Group by UserCustomFieldConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCustomFieldConfigGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserCustomFieldConfigGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserCustomFieldConfigGroupByArgs['orderBy'] }
        : { orderBy?: UserCustomFieldConfigGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserCustomFieldConfigGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserCustomFieldConfigGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserCustomFieldConfig model
   */
  readonly fields: UserCustomFieldConfigFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserCustomFieldConfig.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserCustomFieldConfigClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    field<T extends CustomFieldDefinitionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomFieldDefinitionDefaultArgs<ExtArgs>>): Prisma__CustomFieldDefinitionClient<$Result.GetResult<Prisma.$CustomFieldDefinitionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserCustomFieldConfig model
   */
  interface UserCustomFieldConfigFieldRefs {
    readonly id: FieldRef<"UserCustomFieldConfig", 'Int'>
    readonly userId: FieldRef<"UserCustomFieldConfig", 'Int'>
    readonly fieldId: FieldRef<"UserCustomFieldConfig", 'Int'>
    readonly isVisible: FieldRef<"UserCustomFieldConfig", 'Boolean'>
    readonly displayOrder: FieldRef<"UserCustomFieldConfig", 'Int'>
    readonly columnWidth: FieldRef<"UserCustomFieldConfig", 'Int'>
    readonly createdAt: FieldRef<"UserCustomFieldConfig", 'DateTime'>
    readonly updatedAt: FieldRef<"UserCustomFieldConfig", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserCustomFieldConfig findUnique
   */
  export type UserCustomFieldConfigFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * Filter, which UserCustomFieldConfig to fetch.
     */
    where: UserCustomFieldConfigWhereUniqueInput
  }

  /**
   * UserCustomFieldConfig findUniqueOrThrow
   */
  export type UserCustomFieldConfigFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * Filter, which UserCustomFieldConfig to fetch.
     */
    where: UserCustomFieldConfigWhereUniqueInput
  }

  /**
   * UserCustomFieldConfig findFirst
   */
  export type UserCustomFieldConfigFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * Filter, which UserCustomFieldConfig to fetch.
     */
    where?: UserCustomFieldConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCustomFieldConfigs to fetch.
     */
    orderBy?: UserCustomFieldConfigOrderByWithRelationInput | UserCustomFieldConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserCustomFieldConfigs.
     */
    cursor?: UserCustomFieldConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCustomFieldConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCustomFieldConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserCustomFieldConfigs.
     */
    distinct?: UserCustomFieldConfigScalarFieldEnum | UserCustomFieldConfigScalarFieldEnum[]
  }

  /**
   * UserCustomFieldConfig findFirstOrThrow
   */
  export type UserCustomFieldConfigFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * Filter, which UserCustomFieldConfig to fetch.
     */
    where?: UserCustomFieldConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCustomFieldConfigs to fetch.
     */
    orderBy?: UserCustomFieldConfigOrderByWithRelationInput | UserCustomFieldConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserCustomFieldConfigs.
     */
    cursor?: UserCustomFieldConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCustomFieldConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCustomFieldConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserCustomFieldConfigs.
     */
    distinct?: UserCustomFieldConfigScalarFieldEnum | UserCustomFieldConfigScalarFieldEnum[]
  }

  /**
   * UserCustomFieldConfig findMany
   */
  export type UserCustomFieldConfigFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * Filter, which UserCustomFieldConfigs to fetch.
     */
    where?: UserCustomFieldConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserCustomFieldConfigs to fetch.
     */
    orderBy?: UserCustomFieldConfigOrderByWithRelationInput | UserCustomFieldConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserCustomFieldConfigs.
     */
    cursor?: UserCustomFieldConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserCustomFieldConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserCustomFieldConfigs.
     */
    skip?: number
    distinct?: UserCustomFieldConfigScalarFieldEnum | UserCustomFieldConfigScalarFieldEnum[]
  }

  /**
   * UserCustomFieldConfig create
   */
  export type UserCustomFieldConfigCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * The data needed to create a UserCustomFieldConfig.
     */
    data: XOR<UserCustomFieldConfigCreateInput, UserCustomFieldConfigUncheckedCreateInput>
  }

  /**
   * UserCustomFieldConfig createMany
   */
  export type UserCustomFieldConfigCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserCustomFieldConfigs.
     */
    data: UserCustomFieldConfigCreateManyInput | UserCustomFieldConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserCustomFieldConfig createManyAndReturn
   */
  export type UserCustomFieldConfigCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * The data used to create many UserCustomFieldConfigs.
     */
    data: UserCustomFieldConfigCreateManyInput | UserCustomFieldConfigCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserCustomFieldConfig update
   */
  export type UserCustomFieldConfigUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * The data needed to update a UserCustomFieldConfig.
     */
    data: XOR<UserCustomFieldConfigUpdateInput, UserCustomFieldConfigUncheckedUpdateInput>
    /**
     * Choose, which UserCustomFieldConfig to update.
     */
    where: UserCustomFieldConfigWhereUniqueInput
  }

  /**
   * UserCustomFieldConfig updateMany
   */
  export type UserCustomFieldConfigUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserCustomFieldConfigs.
     */
    data: XOR<UserCustomFieldConfigUpdateManyMutationInput, UserCustomFieldConfigUncheckedUpdateManyInput>
    /**
     * Filter which UserCustomFieldConfigs to update
     */
    where?: UserCustomFieldConfigWhereInput
    /**
     * Limit how many UserCustomFieldConfigs to update.
     */
    limit?: number
  }

  /**
   * UserCustomFieldConfig updateManyAndReturn
   */
  export type UserCustomFieldConfigUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * The data used to update UserCustomFieldConfigs.
     */
    data: XOR<UserCustomFieldConfigUpdateManyMutationInput, UserCustomFieldConfigUncheckedUpdateManyInput>
    /**
     * Filter which UserCustomFieldConfigs to update
     */
    where?: UserCustomFieldConfigWhereInput
    /**
     * Limit how many UserCustomFieldConfigs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserCustomFieldConfig upsert
   */
  export type UserCustomFieldConfigUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * The filter to search for the UserCustomFieldConfig to update in case it exists.
     */
    where: UserCustomFieldConfigWhereUniqueInput
    /**
     * In case the UserCustomFieldConfig found by the `where` argument doesn't exist, create a new UserCustomFieldConfig with this data.
     */
    create: XOR<UserCustomFieldConfigCreateInput, UserCustomFieldConfigUncheckedCreateInput>
    /**
     * In case the UserCustomFieldConfig was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserCustomFieldConfigUpdateInput, UserCustomFieldConfigUncheckedUpdateInput>
  }

  /**
   * UserCustomFieldConfig delete
   */
  export type UserCustomFieldConfigDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
    /**
     * Filter which UserCustomFieldConfig to delete.
     */
    where: UserCustomFieldConfigWhereUniqueInput
  }

  /**
   * UserCustomFieldConfig deleteMany
   */
  export type UserCustomFieldConfigDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserCustomFieldConfigs to delete
     */
    where?: UserCustomFieldConfigWhereInput
    /**
     * Limit how many UserCustomFieldConfigs to delete.
     */
    limit?: number
  }

  /**
   * UserCustomFieldConfig without action
   */
  export type UserCustomFieldConfigDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCustomFieldConfig
     */
    select?: UserCustomFieldConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserCustomFieldConfig
     */
    omit?: UserCustomFieldConfigOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserCustomFieldConfigInclude<ExtArgs> | null
  }


  /**
   * Model FollowUpRecord
   */

  export type AggregateFollowUpRecord = {
    _count: FollowUpRecordCountAggregateOutputType | null
    _avg: FollowUpRecordAvgAggregateOutputType | null
    _sum: FollowUpRecordSumAggregateOutputType | null
    _min: FollowUpRecordMinAggregateOutputType | null
    _max: FollowUpRecordMaxAggregateOutputType | null
  }

  export type FollowUpRecordAvgAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    createdBy: number | null
  }

  export type FollowUpRecordSumAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    createdBy: number | null
  }

  export type FollowUpRecordMinAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    followUpType: $Enums.FollowUpType | null
    content: string | null
    result: $Enums.FollowUpResult | null
    nextFollowUpDate: Date | null
    createdBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FollowUpRecordMaxAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    followUpType: $Enums.FollowUpType | null
    content: string | null
    result: $Enums.FollowUpResult | null
    nextFollowUpDate: Date | null
    createdBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FollowUpRecordCountAggregateOutputType = {
    id: number
    inquiryId: number
    followUpType: number
    content: number
    result: number
    nextFollowUpDate: number
    attachments: number
    createdBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FollowUpRecordAvgAggregateInputType = {
    id?: true
    inquiryId?: true
    createdBy?: true
  }

  export type FollowUpRecordSumAggregateInputType = {
    id?: true
    inquiryId?: true
    createdBy?: true
  }

  export type FollowUpRecordMinAggregateInputType = {
    id?: true
    inquiryId?: true
    followUpType?: true
    content?: true
    result?: true
    nextFollowUpDate?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FollowUpRecordMaxAggregateInputType = {
    id?: true
    inquiryId?: true
    followUpType?: true
    content?: true
    result?: true
    nextFollowUpDate?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FollowUpRecordCountAggregateInputType = {
    id?: true
    inquiryId?: true
    followUpType?: true
    content?: true
    result?: true
    nextFollowUpDate?: true
    attachments?: true
    createdBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FollowUpRecordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FollowUpRecord to aggregate.
     */
    where?: FollowUpRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FollowUpRecords to fetch.
     */
    orderBy?: FollowUpRecordOrderByWithRelationInput | FollowUpRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FollowUpRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FollowUpRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FollowUpRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FollowUpRecords
    **/
    _count?: true | FollowUpRecordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FollowUpRecordAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FollowUpRecordSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FollowUpRecordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FollowUpRecordMaxAggregateInputType
  }

  export type GetFollowUpRecordAggregateType<T extends FollowUpRecordAggregateArgs> = {
        [P in keyof T & keyof AggregateFollowUpRecord]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFollowUpRecord[P]>
      : GetScalarType<T[P], AggregateFollowUpRecord[P]>
  }




  export type FollowUpRecordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FollowUpRecordWhereInput
    orderBy?: FollowUpRecordOrderByWithAggregationInput | FollowUpRecordOrderByWithAggregationInput[]
    by: FollowUpRecordScalarFieldEnum[] | FollowUpRecordScalarFieldEnum
    having?: FollowUpRecordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FollowUpRecordCountAggregateInputType | true
    _avg?: FollowUpRecordAvgAggregateInputType
    _sum?: FollowUpRecordSumAggregateInputType
    _min?: FollowUpRecordMinAggregateInputType
    _max?: FollowUpRecordMaxAggregateInputType
  }

  export type FollowUpRecordGroupByOutputType = {
    id: number
    inquiryId: number
    followUpType: $Enums.FollowUpType
    content: string
    result: $Enums.FollowUpResult | null
    nextFollowUpDate: Date | null
    attachments: JsonValue | null
    createdBy: number
    createdAt: Date
    updatedAt: Date
    _count: FollowUpRecordCountAggregateOutputType | null
    _avg: FollowUpRecordAvgAggregateOutputType | null
    _sum: FollowUpRecordSumAggregateOutputType | null
    _min: FollowUpRecordMinAggregateOutputType | null
    _max: FollowUpRecordMaxAggregateOutputType | null
  }

  type GetFollowUpRecordGroupByPayload<T extends FollowUpRecordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FollowUpRecordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FollowUpRecordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FollowUpRecordGroupByOutputType[P]>
            : GetScalarType<T[P], FollowUpRecordGroupByOutputType[P]>
        }
      >
    >


  export type FollowUpRecordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryId?: boolean
    followUpType?: boolean
    content?: boolean
    result?: boolean
    nextFollowUpDate?: boolean
    attachments?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["followUpRecord"]>

  export type FollowUpRecordSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryId?: boolean
    followUpType?: boolean
    content?: boolean
    result?: boolean
    nextFollowUpDate?: boolean
    attachments?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["followUpRecord"]>

  export type FollowUpRecordSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryId?: boolean
    followUpType?: boolean
    content?: boolean
    result?: boolean
    nextFollowUpDate?: boolean
    attachments?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["followUpRecord"]>

  export type FollowUpRecordSelectScalar = {
    id?: boolean
    inquiryId?: boolean
    followUpType?: boolean
    content?: boolean
    result?: boolean
    nextFollowUpDate?: boolean
    attachments?: boolean
    createdBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FollowUpRecordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "inquiryId" | "followUpType" | "content" | "result" | "nextFollowUpDate" | "attachments" | "createdBy" | "createdAt" | "updatedAt", ExtArgs["result"]["followUpRecord"]>
  export type FollowUpRecordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FollowUpRecordIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FollowUpRecordIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FollowUpRecordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FollowUpRecord"
    objects: {
      inquiry: Prisma.$InquiryPayload<ExtArgs>
      creator: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      inquiryId: number
      followUpType: $Enums.FollowUpType
      content: string
      result: $Enums.FollowUpResult | null
      nextFollowUpDate: Date | null
      attachments: Prisma.JsonValue | null
      createdBy: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["followUpRecord"]>
    composites: {}
  }

  type FollowUpRecordGetPayload<S extends boolean | null | undefined | FollowUpRecordDefaultArgs> = $Result.GetResult<Prisma.$FollowUpRecordPayload, S>

  type FollowUpRecordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FollowUpRecordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FollowUpRecordCountAggregateInputType | true
    }

  export interface FollowUpRecordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FollowUpRecord'], meta: { name: 'FollowUpRecord' } }
    /**
     * Find zero or one FollowUpRecord that matches the filter.
     * @param {FollowUpRecordFindUniqueArgs} args - Arguments to find a FollowUpRecord
     * @example
     * // Get one FollowUpRecord
     * const followUpRecord = await prisma.followUpRecord.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FollowUpRecordFindUniqueArgs>(args: SelectSubset<T, FollowUpRecordFindUniqueArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FollowUpRecord that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FollowUpRecordFindUniqueOrThrowArgs} args - Arguments to find a FollowUpRecord
     * @example
     * // Get one FollowUpRecord
     * const followUpRecord = await prisma.followUpRecord.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FollowUpRecordFindUniqueOrThrowArgs>(args: SelectSubset<T, FollowUpRecordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FollowUpRecord that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpRecordFindFirstArgs} args - Arguments to find a FollowUpRecord
     * @example
     * // Get one FollowUpRecord
     * const followUpRecord = await prisma.followUpRecord.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FollowUpRecordFindFirstArgs>(args?: SelectSubset<T, FollowUpRecordFindFirstArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FollowUpRecord that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpRecordFindFirstOrThrowArgs} args - Arguments to find a FollowUpRecord
     * @example
     * // Get one FollowUpRecord
     * const followUpRecord = await prisma.followUpRecord.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FollowUpRecordFindFirstOrThrowArgs>(args?: SelectSubset<T, FollowUpRecordFindFirstOrThrowArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FollowUpRecords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpRecordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FollowUpRecords
     * const followUpRecords = await prisma.followUpRecord.findMany()
     * 
     * // Get first 10 FollowUpRecords
     * const followUpRecords = await prisma.followUpRecord.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const followUpRecordWithIdOnly = await prisma.followUpRecord.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FollowUpRecordFindManyArgs>(args?: SelectSubset<T, FollowUpRecordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FollowUpRecord.
     * @param {FollowUpRecordCreateArgs} args - Arguments to create a FollowUpRecord.
     * @example
     * // Create one FollowUpRecord
     * const FollowUpRecord = await prisma.followUpRecord.create({
     *   data: {
     *     // ... data to create a FollowUpRecord
     *   }
     * })
     * 
     */
    create<T extends FollowUpRecordCreateArgs>(args: SelectSubset<T, FollowUpRecordCreateArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FollowUpRecords.
     * @param {FollowUpRecordCreateManyArgs} args - Arguments to create many FollowUpRecords.
     * @example
     * // Create many FollowUpRecords
     * const followUpRecord = await prisma.followUpRecord.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FollowUpRecordCreateManyArgs>(args?: SelectSubset<T, FollowUpRecordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FollowUpRecords and returns the data saved in the database.
     * @param {FollowUpRecordCreateManyAndReturnArgs} args - Arguments to create many FollowUpRecords.
     * @example
     * // Create many FollowUpRecords
     * const followUpRecord = await prisma.followUpRecord.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FollowUpRecords and only return the `id`
     * const followUpRecordWithIdOnly = await prisma.followUpRecord.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FollowUpRecordCreateManyAndReturnArgs>(args?: SelectSubset<T, FollowUpRecordCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FollowUpRecord.
     * @param {FollowUpRecordDeleteArgs} args - Arguments to delete one FollowUpRecord.
     * @example
     * // Delete one FollowUpRecord
     * const FollowUpRecord = await prisma.followUpRecord.delete({
     *   where: {
     *     // ... filter to delete one FollowUpRecord
     *   }
     * })
     * 
     */
    delete<T extends FollowUpRecordDeleteArgs>(args: SelectSubset<T, FollowUpRecordDeleteArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FollowUpRecord.
     * @param {FollowUpRecordUpdateArgs} args - Arguments to update one FollowUpRecord.
     * @example
     * // Update one FollowUpRecord
     * const followUpRecord = await prisma.followUpRecord.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FollowUpRecordUpdateArgs>(args: SelectSubset<T, FollowUpRecordUpdateArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FollowUpRecords.
     * @param {FollowUpRecordDeleteManyArgs} args - Arguments to filter FollowUpRecords to delete.
     * @example
     * // Delete a few FollowUpRecords
     * const { count } = await prisma.followUpRecord.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FollowUpRecordDeleteManyArgs>(args?: SelectSubset<T, FollowUpRecordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FollowUpRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpRecordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FollowUpRecords
     * const followUpRecord = await prisma.followUpRecord.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FollowUpRecordUpdateManyArgs>(args: SelectSubset<T, FollowUpRecordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FollowUpRecords and returns the data updated in the database.
     * @param {FollowUpRecordUpdateManyAndReturnArgs} args - Arguments to update many FollowUpRecords.
     * @example
     * // Update many FollowUpRecords
     * const followUpRecord = await prisma.followUpRecord.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FollowUpRecords and only return the `id`
     * const followUpRecordWithIdOnly = await prisma.followUpRecord.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FollowUpRecordUpdateManyAndReturnArgs>(args: SelectSubset<T, FollowUpRecordUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FollowUpRecord.
     * @param {FollowUpRecordUpsertArgs} args - Arguments to update or create a FollowUpRecord.
     * @example
     * // Update or create a FollowUpRecord
     * const followUpRecord = await prisma.followUpRecord.upsert({
     *   create: {
     *     // ... data to create a FollowUpRecord
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FollowUpRecord we want to update
     *   }
     * })
     */
    upsert<T extends FollowUpRecordUpsertArgs>(args: SelectSubset<T, FollowUpRecordUpsertArgs<ExtArgs>>): Prisma__FollowUpRecordClient<$Result.GetResult<Prisma.$FollowUpRecordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FollowUpRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpRecordCountArgs} args - Arguments to filter FollowUpRecords to count.
     * @example
     * // Count the number of FollowUpRecords
     * const count = await prisma.followUpRecord.count({
     *   where: {
     *     // ... the filter for the FollowUpRecords we want to count
     *   }
     * })
    **/
    count<T extends FollowUpRecordCountArgs>(
      args?: Subset<T, FollowUpRecordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FollowUpRecordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FollowUpRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpRecordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FollowUpRecordAggregateArgs>(args: Subset<T, FollowUpRecordAggregateArgs>): Prisma.PrismaPromise<GetFollowUpRecordAggregateType<T>>

    /**
     * Group by FollowUpRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpRecordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FollowUpRecordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FollowUpRecordGroupByArgs['orderBy'] }
        : { orderBy?: FollowUpRecordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FollowUpRecordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFollowUpRecordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FollowUpRecord model
   */
  readonly fields: FollowUpRecordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FollowUpRecord.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FollowUpRecordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inquiry<T extends InquiryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InquiryDefaultArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FollowUpRecord model
   */
  interface FollowUpRecordFieldRefs {
    readonly id: FieldRef<"FollowUpRecord", 'Int'>
    readonly inquiryId: FieldRef<"FollowUpRecord", 'Int'>
    readonly followUpType: FieldRef<"FollowUpRecord", 'FollowUpType'>
    readonly content: FieldRef<"FollowUpRecord", 'String'>
    readonly result: FieldRef<"FollowUpRecord", 'FollowUpResult'>
    readonly nextFollowUpDate: FieldRef<"FollowUpRecord", 'DateTime'>
    readonly attachments: FieldRef<"FollowUpRecord", 'Json'>
    readonly createdBy: FieldRef<"FollowUpRecord", 'Int'>
    readonly createdAt: FieldRef<"FollowUpRecord", 'DateTime'>
    readonly updatedAt: FieldRef<"FollowUpRecord", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FollowUpRecord findUnique
   */
  export type FollowUpRecordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * Filter, which FollowUpRecord to fetch.
     */
    where: FollowUpRecordWhereUniqueInput
  }

  /**
   * FollowUpRecord findUniqueOrThrow
   */
  export type FollowUpRecordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * Filter, which FollowUpRecord to fetch.
     */
    where: FollowUpRecordWhereUniqueInput
  }

  /**
   * FollowUpRecord findFirst
   */
  export type FollowUpRecordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * Filter, which FollowUpRecord to fetch.
     */
    where?: FollowUpRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FollowUpRecords to fetch.
     */
    orderBy?: FollowUpRecordOrderByWithRelationInput | FollowUpRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FollowUpRecords.
     */
    cursor?: FollowUpRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FollowUpRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FollowUpRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FollowUpRecords.
     */
    distinct?: FollowUpRecordScalarFieldEnum | FollowUpRecordScalarFieldEnum[]
  }

  /**
   * FollowUpRecord findFirstOrThrow
   */
  export type FollowUpRecordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * Filter, which FollowUpRecord to fetch.
     */
    where?: FollowUpRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FollowUpRecords to fetch.
     */
    orderBy?: FollowUpRecordOrderByWithRelationInput | FollowUpRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FollowUpRecords.
     */
    cursor?: FollowUpRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FollowUpRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FollowUpRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FollowUpRecords.
     */
    distinct?: FollowUpRecordScalarFieldEnum | FollowUpRecordScalarFieldEnum[]
  }

  /**
   * FollowUpRecord findMany
   */
  export type FollowUpRecordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * Filter, which FollowUpRecords to fetch.
     */
    where?: FollowUpRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FollowUpRecords to fetch.
     */
    orderBy?: FollowUpRecordOrderByWithRelationInput | FollowUpRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FollowUpRecords.
     */
    cursor?: FollowUpRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FollowUpRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FollowUpRecords.
     */
    skip?: number
    distinct?: FollowUpRecordScalarFieldEnum | FollowUpRecordScalarFieldEnum[]
  }

  /**
   * FollowUpRecord create
   */
  export type FollowUpRecordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * The data needed to create a FollowUpRecord.
     */
    data: XOR<FollowUpRecordCreateInput, FollowUpRecordUncheckedCreateInput>
  }

  /**
   * FollowUpRecord createMany
   */
  export type FollowUpRecordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FollowUpRecords.
     */
    data: FollowUpRecordCreateManyInput | FollowUpRecordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FollowUpRecord createManyAndReturn
   */
  export type FollowUpRecordCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * The data used to create many FollowUpRecords.
     */
    data: FollowUpRecordCreateManyInput | FollowUpRecordCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FollowUpRecord update
   */
  export type FollowUpRecordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * The data needed to update a FollowUpRecord.
     */
    data: XOR<FollowUpRecordUpdateInput, FollowUpRecordUncheckedUpdateInput>
    /**
     * Choose, which FollowUpRecord to update.
     */
    where: FollowUpRecordWhereUniqueInput
  }

  /**
   * FollowUpRecord updateMany
   */
  export type FollowUpRecordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FollowUpRecords.
     */
    data: XOR<FollowUpRecordUpdateManyMutationInput, FollowUpRecordUncheckedUpdateManyInput>
    /**
     * Filter which FollowUpRecords to update
     */
    where?: FollowUpRecordWhereInput
    /**
     * Limit how many FollowUpRecords to update.
     */
    limit?: number
  }

  /**
   * FollowUpRecord updateManyAndReturn
   */
  export type FollowUpRecordUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * The data used to update FollowUpRecords.
     */
    data: XOR<FollowUpRecordUpdateManyMutationInput, FollowUpRecordUncheckedUpdateManyInput>
    /**
     * Filter which FollowUpRecords to update
     */
    where?: FollowUpRecordWhereInput
    /**
     * Limit how many FollowUpRecords to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FollowUpRecord upsert
   */
  export type FollowUpRecordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * The filter to search for the FollowUpRecord to update in case it exists.
     */
    where: FollowUpRecordWhereUniqueInput
    /**
     * In case the FollowUpRecord found by the `where` argument doesn't exist, create a new FollowUpRecord with this data.
     */
    create: XOR<FollowUpRecordCreateInput, FollowUpRecordUncheckedCreateInput>
    /**
     * In case the FollowUpRecord was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FollowUpRecordUpdateInput, FollowUpRecordUncheckedUpdateInput>
  }

  /**
   * FollowUpRecord delete
   */
  export type FollowUpRecordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
    /**
     * Filter which FollowUpRecord to delete.
     */
    where: FollowUpRecordWhereUniqueInput
  }

  /**
   * FollowUpRecord deleteMany
   */
  export type FollowUpRecordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FollowUpRecords to delete
     */
    where?: FollowUpRecordWhereInput
    /**
     * Limit how many FollowUpRecords to delete.
     */
    limit?: number
  }

  /**
   * FollowUpRecord without action
   */
  export type FollowUpRecordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FollowUpRecord
     */
    select?: FollowUpRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FollowUpRecord
     */
    omit?: FollowUpRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowUpRecordInclude<ExtArgs> | null
  }


  /**
   * Model AiAnalysisRecord
   */

  export type AggregateAiAnalysisRecord = {
    _count: AiAnalysisRecordCountAggregateOutputType | null
    _avg: AiAnalysisRecordAvgAggregateOutputType | null
    _sum: AiAnalysisRecordSumAggregateOutputType | null
    _min: AiAnalysisRecordMinAggregateOutputType | null
    _max: AiAnalysisRecordMaxAggregateOutputType | null
  }

  export type AiAnalysisRecordAvgAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    confidenceScore: Decimal | null
    processingTimeMs: number | null
    costAmount: Decimal | null
    createdBy: number | null
  }

  export type AiAnalysisRecordSumAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    confidenceScore: Decimal | null
    processingTimeMs: number | null
    costAmount: Decimal | null
    createdBy: number | null
  }

  export type AiAnalysisRecordMinAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    aiProvider: $Enums.AiProvider | null
    modelName: string | null
    analysisType: $Enums.AnalysisType | null
    confidenceScore: Decimal | null
    processingTimeMs: number | null
    costAmount: Decimal | null
    status: $Enums.AnalysisStatus | null
    errorMessage: string | null
    createdBy: number | null
    createdAt: Date | null
  }

  export type AiAnalysisRecordMaxAggregateOutputType = {
    id: number | null
    inquiryId: number | null
    aiProvider: $Enums.AiProvider | null
    modelName: string | null
    analysisType: $Enums.AnalysisType | null
    confidenceScore: Decimal | null
    processingTimeMs: number | null
    costAmount: Decimal | null
    status: $Enums.AnalysisStatus | null
    errorMessage: string | null
    createdBy: number | null
    createdAt: Date | null
  }

  export type AiAnalysisRecordCountAggregateOutputType = {
    id: number
    inquiryId: number
    aiProvider: number
    modelName: number
    analysisType: number
    inputData: number
    outputData: number
    confidenceScore: number
    processingTimeMs: number
    costAmount: number
    status: number
    errorMessage: number
    createdBy: number
    createdAt: number
    _all: number
  }


  export type AiAnalysisRecordAvgAggregateInputType = {
    id?: true
    inquiryId?: true
    confidenceScore?: true
    processingTimeMs?: true
    costAmount?: true
    createdBy?: true
  }

  export type AiAnalysisRecordSumAggregateInputType = {
    id?: true
    inquiryId?: true
    confidenceScore?: true
    processingTimeMs?: true
    costAmount?: true
    createdBy?: true
  }

  export type AiAnalysisRecordMinAggregateInputType = {
    id?: true
    inquiryId?: true
    aiProvider?: true
    modelName?: true
    analysisType?: true
    confidenceScore?: true
    processingTimeMs?: true
    costAmount?: true
    status?: true
    errorMessage?: true
    createdBy?: true
    createdAt?: true
  }

  export type AiAnalysisRecordMaxAggregateInputType = {
    id?: true
    inquiryId?: true
    aiProvider?: true
    modelName?: true
    analysisType?: true
    confidenceScore?: true
    processingTimeMs?: true
    costAmount?: true
    status?: true
    errorMessage?: true
    createdBy?: true
    createdAt?: true
  }

  export type AiAnalysisRecordCountAggregateInputType = {
    id?: true
    inquiryId?: true
    aiProvider?: true
    modelName?: true
    analysisType?: true
    inputData?: true
    outputData?: true
    confidenceScore?: true
    processingTimeMs?: true
    costAmount?: true
    status?: true
    errorMessage?: true
    createdBy?: true
    createdAt?: true
    _all?: true
  }

  export type AiAnalysisRecordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AiAnalysisRecord to aggregate.
     */
    where?: AiAnalysisRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AiAnalysisRecords to fetch.
     */
    orderBy?: AiAnalysisRecordOrderByWithRelationInput | AiAnalysisRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AiAnalysisRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AiAnalysisRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AiAnalysisRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AiAnalysisRecords
    **/
    _count?: true | AiAnalysisRecordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AiAnalysisRecordAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AiAnalysisRecordSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AiAnalysisRecordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AiAnalysisRecordMaxAggregateInputType
  }

  export type GetAiAnalysisRecordAggregateType<T extends AiAnalysisRecordAggregateArgs> = {
        [P in keyof T & keyof AggregateAiAnalysisRecord]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAiAnalysisRecord[P]>
      : GetScalarType<T[P], AggregateAiAnalysisRecord[P]>
  }




  export type AiAnalysisRecordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AiAnalysisRecordWhereInput
    orderBy?: AiAnalysisRecordOrderByWithAggregationInput | AiAnalysisRecordOrderByWithAggregationInput[]
    by: AiAnalysisRecordScalarFieldEnum[] | AiAnalysisRecordScalarFieldEnum
    having?: AiAnalysisRecordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AiAnalysisRecordCountAggregateInputType | true
    _avg?: AiAnalysisRecordAvgAggregateInputType
    _sum?: AiAnalysisRecordSumAggregateInputType
    _min?: AiAnalysisRecordMinAggregateInputType
    _max?: AiAnalysisRecordMaxAggregateInputType
  }

  export type AiAnalysisRecordGroupByOutputType = {
    id: number
    inquiryId: number
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonValue
    outputData: JsonValue
    confidenceScore: Decimal | null
    processingTimeMs: number | null
    costAmount: Decimal | null
    status: $Enums.AnalysisStatus
    errorMessage: string | null
    createdBy: number
    createdAt: Date
    _count: AiAnalysisRecordCountAggregateOutputType | null
    _avg: AiAnalysisRecordAvgAggregateOutputType | null
    _sum: AiAnalysisRecordSumAggregateOutputType | null
    _min: AiAnalysisRecordMinAggregateOutputType | null
    _max: AiAnalysisRecordMaxAggregateOutputType | null
  }

  type GetAiAnalysisRecordGroupByPayload<T extends AiAnalysisRecordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AiAnalysisRecordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AiAnalysisRecordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AiAnalysisRecordGroupByOutputType[P]>
            : GetScalarType<T[P], AiAnalysisRecordGroupByOutputType[P]>
        }
      >
    >


  export type AiAnalysisRecordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryId?: boolean
    aiProvider?: boolean
    modelName?: boolean
    analysisType?: boolean
    inputData?: boolean
    outputData?: boolean
    confidenceScore?: boolean
    processingTimeMs?: boolean
    costAmount?: boolean
    status?: boolean
    errorMessage?: boolean
    createdBy?: boolean
    createdAt?: boolean
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aiAnalysisRecord"]>

  export type AiAnalysisRecordSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryId?: boolean
    aiProvider?: boolean
    modelName?: boolean
    analysisType?: boolean
    inputData?: boolean
    outputData?: boolean
    confidenceScore?: boolean
    processingTimeMs?: boolean
    costAmount?: boolean
    status?: boolean
    errorMessage?: boolean
    createdBy?: boolean
    createdAt?: boolean
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aiAnalysisRecord"]>

  export type AiAnalysisRecordSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inquiryId?: boolean
    aiProvider?: boolean
    modelName?: boolean
    analysisType?: boolean
    inputData?: boolean
    outputData?: boolean
    confidenceScore?: boolean
    processingTimeMs?: boolean
    costAmount?: boolean
    status?: boolean
    errorMessage?: boolean
    createdBy?: boolean
    createdAt?: boolean
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aiAnalysisRecord"]>

  export type AiAnalysisRecordSelectScalar = {
    id?: boolean
    inquiryId?: boolean
    aiProvider?: boolean
    modelName?: boolean
    analysisType?: boolean
    inputData?: boolean
    outputData?: boolean
    confidenceScore?: boolean
    processingTimeMs?: boolean
    costAmount?: boolean
    status?: boolean
    errorMessage?: boolean
    createdBy?: boolean
    createdAt?: boolean
  }

  export type AiAnalysisRecordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "inquiryId" | "aiProvider" | "modelName" | "analysisType" | "inputData" | "outputData" | "confidenceScore" | "processingTimeMs" | "costAmount" | "status" | "errorMessage" | "createdBy" | "createdAt", ExtArgs["result"]["aiAnalysisRecord"]>
  export type AiAnalysisRecordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AiAnalysisRecordIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AiAnalysisRecordIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inquiry?: boolean | InquiryDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AiAnalysisRecordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AiAnalysisRecord"
    objects: {
      inquiry: Prisma.$InquiryPayload<ExtArgs>
      creator: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      inquiryId: number
      aiProvider: $Enums.AiProvider
      modelName: string
      analysisType: $Enums.AnalysisType
      inputData: Prisma.JsonValue
      outputData: Prisma.JsonValue
      confidenceScore: Prisma.Decimal | null
      processingTimeMs: number | null
      costAmount: Prisma.Decimal | null
      status: $Enums.AnalysisStatus
      errorMessage: string | null
      createdBy: number
      createdAt: Date
    }, ExtArgs["result"]["aiAnalysisRecord"]>
    composites: {}
  }

  type AiAnalysisRecordGetPayload<S extends boolean | null | undefined | AiAnalysisRecordDefaultArgs> = $Result.GetResult<Prisma.$AiAnalysisRecordPayload, S>

  type AiAnalysisRecordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AiAnalysisRecordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AiAnalysisRecordCountAggregateInputType | true
    }

  export interface AiAnalysisRecordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AiAnalysisRecord'], meta: { name: 'AiAnalysisRecord' } }
    /**
     * Find zero or one AiAnalysisRecord that matches the filter.
     * @param {AiAnalysisRecordFindUniqueArgs} args - Arguments to find a AiAnalysisRecord
     * @example
     * // Get one AiAnalysisRecord
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AiAnalysisRecordFindUniqueArgs>(args: SelectSubset<T, AiAnalysisRecordFindUniqueArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AiAnalysisRecord that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AiAnalysisRecordFindUniqueOrThrowArgs} args - Arguments to find a AiAnalysisRecord
     * @example
     * // Get one AiAnalysisRecord
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AiAnalysisRecordFindUniqueOrThrowArgs>(args: SelectSubset<T, AiAnalysisRecordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AiAnalysisRecord that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiAnalysisRecordFindFirstArgs} args - Arguments to find a AiAnalysisRecord
     * @example
     * // Get one AiAnalysisRecord
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AiAnalysisRecordFindFirstArgs>(args?: SelectSubset<T, AiAnalysisRecordFindFirstArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AiAnalysisRecord that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiAnalysisRecordFindFirstOrThrowArgs} args - Arguments to find a AiAnalysisRecord
     * @example
     * // Get one AiAnalysisRecord
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AiAnalysisRecordFindFirstOrThrowArgs>(args?: SelectSubset<T, AiAnalysisRecordFindFirstOrThrowArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AiAnalysisRecords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiAnalysisRecordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AiAnalysisRecords
     * const aiAnalysisRecords = await prisma.aiAnalysisRecord.findMany()
     * 
     * // Get first 10 AiAnalysisRecords
     * const aiAnalysisRecords = await prisma.aiAnalysisRecord.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aiAnalysisRecordWithIdOnly = await prisma.aiAnalysisRecord.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AiAnalysisRecordFindManyArgs>(args?: SelectSubset<T, AiAnalysisRecordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AiAnalysisRecord.
     * @param {AiAnalysisRecordCreateArgs} args - Arguments to create a AiAnalysisRecord.
     * @example
     * // Create one AiAnalysisRecord
     * const AiAnalysisRecord = await prisma.aiAnalysisRecord.create({
     *   data: {
     *     // ... data to create a AiAnalysisRecord
     *   }
     * })
     * 
     */
    create<T extends AiAnalysisRecordCreateArgs>(args: SelectSubset<T, AiAnalysisRecordCreateArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AiAnalysisRecords.
     * @param {AiAnalysisRecordCreateManyArgs} args - Arguments to create many AiAnalysisRecords.
     * @example
     * // Create many AiAnalysisRecords
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AiAnalysisRecordCreateManyArgs>(args?: SelectSubset<T, AiAnalysisRecordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AiAnalysisRecords and returns the data saved in the database.
     * @param {AiAnalysisRecordCreateManyAndReturnArgs} args - Arguments to create many AiAnalysisRecords.
     * @example
     * // Create many AiAnalysisRecords
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AiAnalysisRecords and only return the `id`
     * const aiAnalysisRecordWithIdOnly = await prisma.aiAnalysisRecord.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AiAnalysisRecordCreateManyAndReturnArgs>(args?: SelectSubset<T, AiAnalysisRecordCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AiAnalysisRecord.
     * @param {AiAnalysisRecordDeleteArgs} args - Arguments to delete one AiAnalysisRecord.
     * @example
     * // Delete one AiAnalysisRecord
     * const AiAnalysisRecord = await prisma.aiAnalysisRecord.delete({
     *   where: {
     *     // ... filter to delete one AiAnalysisRecord
     *   }
     * })
     * 
     */
    delete<T extends AiAnalysisRecordDeleteArgs>(args: SelectSubset<T, AiAnalysisRecordDeleteArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AiAnalysisRecord.
     * @param {AiAnalysisRecordUpdateArgs} args - Arguments to update one AiAnalysisRecord.
     * @example
     * // Update one AiAnalysisRecord
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AiAnalysisRecordUpdateArgs>(args: SelectSubset<T, AiAnalysisRecordUpdateArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AiAnalysisRecords.
     * @param {AiAnalysisRecordDeleteManyArgs} args - Arguments to filter AiAnalysisRecords to delete.
     * @example
     * // Delete a few AiAnalysisRecords
     * const { count } = await prisma.aiAnalysisRecord.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AiAnalysisRecordDeleteManyArgs>(args?: SelectSubset<T, AiAnalysisRecordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AiAnalysisRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiAnalysisRecordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AiAnalysisRecords
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AiAnalysisRecordUpdateManyArgs>(args: SelectSubset<T, AiAnalysisRecordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AiAnalysisRecords and returns the data updated in the database.
     * @param {AiAnalysisRecordUpdateManyAndReturnArgs} args - Arguments to update many AiAnalysisRecords.
     * @example
     * // Update many AiAnalysisRecords
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AiAnalysisRecords and only return the `id`
     * const aiAnalysisRecordWithIdOnly = await prisma.aiAnalysisRecord.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AiAnalysisRecordUpdateManyAndReturnArgs>(args: SelectSubset<T, AiAnalysisRecordUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AiAnalysisRecord.
     * @param {AiAnalysisRecordUpsertArgs} args - Arguments to update or create a AiAnalysisRecord.
     * @example
     * // Update or create a AiAnalysisRecord
     * const aiAnalysisRecord = await prisma.aiAnalysisRecord.upsert({
     *   create: {
     *     // ... data to create a AiAnalysisRecord
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AiAnalysisRecord we want to update
     *   }
     * })
     */
    upsert<T extends AiAnalysisRecordUpsertArgs>(args: SelectSubset<T, AiAnalysisRecordUpsertArgs<ExtArgs>>): Prisma__AiAnalysisRecordClient<$Result.GetResult<Prisma.$AiAnalysisRecordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AiAnalysisRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiAnalysisRecordCountArgs} args - Arguments to filter AiAnalysisRecords to count.
     * @example
     * // Count the number of AiAnalysisRecords
     * const count = await prisma.aiAnalysisRecord.count({
     *   where: {
     *     // ... the filter for the AiAnalysisRecords we want to count
     *   }
     * })
    **/
    count<T extends AiAnalysisRecordCountArgs>(
      args?: Subset<T, AiAnalysisRecordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AiAnalysisRecordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AiAnalysisRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiAnalysisRecordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AiAnalysisRecordAggregateArgs>(args: Subset<T, AiAnalysisRecordAggregateArgs>): Prisma.PrismaPromise<GetAiAnalysisRecordAggregateType<T>>

    /**
     * Group by AiAnalysisRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AiAnalysisRecordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AiAnalysisRecordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AiAnalysisRecordGroupByArgs['orderBy'] }
        : { orderBy?: AiAnalysisRecordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AiAnalysisRecordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAiAnalysisRecordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AiAnalysisRecord model
   */
  readonly fields: AiAnalysisRecordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AiAnalysisRecord.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AiAnalysisRecordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inquiry<T extends InquiryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InquiryDefaultArgs<ExtArgs>>): Prisma__InquiryClient<$Result.GetResult<Prisma.$InquiryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AiAnalysisRecord model
   */
  interface AiAnalysisRecordFieldRefs {
    readonly id: FieldRef<"AiAnalysisRecord", 'Int'>
    readonly inquiryId: FieldRef<"AiAnalysisRecord", 'Int'>
    readonly aiProvider: FieldRef<"AiAnalysisRecord", 'AiProvider'>
    readonly modelName: FieldRef<"AiAnalysisRecord", 'String'>
    readonly analysisType: FieldRef<"AiAnalysisRecord", 'AnalysisType'>
    readonly inputData: FieldRef<"AiAnalysisRecord", 'Json'>
    readonly outputData: FieldRef<"AiAnalysisRecord", 'Json'>
    readonly confidenceScore: FieldRef<"AiAnalysisRecord", 'Decimal'>
    readonly processingTimeMs: FieldRef<"AiAnalysisRecord", 'Int'>
    readonly costAmount: FieldRef<"AiAnalysisRecord", 'Decimal'>
    readonly status: FieldRef<"AiAnalysisRecord", 'AnalysisStatus'>
    readonly errorMessage: FieldRef<"AiAnalysisRecord", 'String'>
    readonly createdBy: FieldRef<"AiAnalysisRecord", 'Int'>
    readonly createdAt: FieldRef<"AiAnalysisRecord", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AiAnalysisRecord findUnique
   */
  export type AiAnalysisRecordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * Filter, which AiAnalysisRecord to fetch.
     */
    where: AiAnalysisRecordWhereUniqueInput
  }

  /**
   * AiAnalysisRecord findUniqueOrThrow
   */
  export type AiAnalysisRecordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * Filter, which AiAnalysisRecord to fetch.
     */
    where: AiAnalysisRecordWhereUniqueInput
  }

  /**
   * AiAnalysisRecord findFirst
   */
  export type AiAnalysisRecordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * Filter, which AiAnalysisRecord to fetch.
     */
    where?: AiAnalysisRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AiAnalysisRecords to fetch.
     */
    orderBy?: AiAnalysisRecordOrderByWithRelationInput | AiAnalysisRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AiAnalysisRecords.
     */
    cursor?: AiAnalysisRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AiAnalysisRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AiAnalysisRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AiAnalysisRecords.
     */
    distinct?: AiAnalysisRecordScalarFieldEnum | AiAnalysisRecordScalarFieldEnum[]
  }

  /**
   * AiAnalysisRecord findFirstOrThrow
   */
  export type AiAnalysisRecordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * Filter, which AiAnalysisRecord to fetch.
     */
    where?: AiAnalysisRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AiAnalysisRecords to fetch.
     */
    orderBy?: AiAnalysisRecordOrderByWithRelationInput | AiAnalysisRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AiAnalysisRecords.
     */
    cursor?: AiAnalysisRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AiAnalysisRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AiAnalysisRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AiAnalysisRecords.
     */
    distinct?: AiAnalysisRecordScalarFieldEnum | AiAnalysisRecordScalarFieldEnum[]
  }

  /**
   * AiAnalysisRecord findMany
   */
  export type AiAnalysisRecordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * Filter, which AiAnalysisRecords to fetch.
     */
    where?: AiAnalysisRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AiAnalysisRecords to fetch.
     */
    orderBy?: AiAnalysisRecordOrderByWithRelationInput | AiAnalysisRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AiAnalysisRecords.
     */
    cursor?: AiAnalysisRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AiAnalysisRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AiAnalysisRecords.
     */
    skip?: number
    distinct?: AiAnalysisRecordScalarFieldEnum | AiAnalysisRecordScalarFieldEnum[]
  }

  /**
   * AiAnalysisRecord create
   */
  export type AiAnalysisRecordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * The data needed to create a AiAnalysisRecord.
     */
    data: XOR<AiAnalysisRecordCreateInput, AiAnalysisRecordUncheckedCreateInput>
  }

  /**
   * AiAnalysisRecord createMany
   */
  export type AiAnalysisRecordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AiAnalysisRecords.
     */
    data: AiAnalysisRecordCreateManyInput | AiAnalysisRecordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AiAnalysisRecord createManyAndReturn
   */
  export type AiAnalysisRecordCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * The data used to create many AiAnalysisRecords.
     */
    data: AiAnalysisRecordCreateManyInput | AiAnalysisRecordCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AiAnalysisRecord update
   */
  export type AiAnalysisRecordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * The data needed to update a AiAnalysisRecord.
     */
    data: XOR<AiAnalysisRecordUpdateInput, AiAnalysisRecordUncheckedUpdateInput>
    /**
     * Choose, which AiAnalysisRecord to update.
     */
    where: AiAnalysisRecordWhereUniqueInput
  }

  /**
   * AiAnalysisRecord updateMany
   */
  export type AiAnalysisRecordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AiAnalysisRecords.
     */
    data: XOR<AiAnalysisRecordUpdateManyMutationInput, AiAnalysisRecordUncheckedUpdateManyInput>
    /**
     * Filter which AiAnalysisRecords to update
     */
    where?: AiAnalysisRecordWhereInput
    /**
     * Limit how many AiAnalysisRecords to update.
     */
    limit?: number
  }

  /**
   * AiAnalysisRecord updateManyAndReturn
   */
  export type AiAnalysisRecordUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * The data used to update AiAnalysisRecords.
     */
    data: XOR<AiAnalysisRecordUpdateManyMutationInput, AiAnalysisRecordUncheckedUpdateManyInput>
    /**
     * Filter which AiAnalysisRecords to update
     */
    where?: AiAnalysisRecordWhereInput
    /**
     * Limit how many AiAnalysisRecords to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AiAnalysisRecord upsert
   */
  export type AiAnalysisRecordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * The filter to search for the AiAnalysisRecord to update in case it exists.
     */
    where: AiAnalysisRecordWhereUniqueInput
    /**
     * In case the AiAnalysisRecord found by the `where` argument doesn't exist, create a new AiAnalysisRecord with this data.
     */
    create: XOR<AiAnalysisRecordCreateInput, AiAnalysisRecordUncheckedCreateInput>
    /**
     * In case the AiAnalysisRecord was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AiAnalysisRecordUpdateInput, AiAnalysisRecordUncheckedUpdateInput>
  }

  /**
   * AiAnalysisRecord delete
   */
  export type AiAnalysisRecordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
    /**
     * Filter which AiAnalysisRecord to delete.
     */
    where: AiAnalysisRecordWhereUniqueInput
  }

  /**
   * AiAnalysisRecord deleteMany
   */
  export type AiAnalysisRecordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AiAnalysisRecords to delete
     */
    where?: AiAnalysisRecordWhereInput
    /**
     * Limit how many AiAnalysisRecords to delete.
     */
    limit?: number
  }

  /**
   * AiAnalysisRecord without action
   */
  export type AiAnalysisRecordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AiAnalysisRecord
     */
    select?: AiAnalysisRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AiAnalysisRecord
     */
    omit?: AiAnalysisRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AiAnalysisRecordInclude<ExtArgs> | null
  }


  /**
   * Model SystemConfig
   */

  export type AggregateSystemConfig = {
    _count: SystemConfigCountAggregateOutputType | null
    _avg: SystemConfigAvgAggregateOutputType | null
    _sum: SystemConfigSumAggregateOutputType | null
    _min: SystemConfigMinAggregateOutputType | null
    _max: SystemConfigMaxAggregateOutputType | null
  }

  export type SystemConfigAvgAggregateOutputType = {
    id: number | null
  }

  export type SystemConfigSumAggregateOutputType = {
    id: number | null
  }

  export type SystemConfigMinAggregateOutputType = {
    id: number | null
    configKey: string | null
    configValue: string | null
    configType: $Enums.ConfigType | null
    description: string | null
    isEncrypted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SystemConfigMaxAggregateOutputType = {
    id: number | null
    configKey: string | null
    configValue: string | null
    configType: $Enums.ConfigType | null
    description: string | null
    isEncrypted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SystemConfigCountAggregateOutputType = {
    id: number
    configKey: number
    configValue: number
    configType: number
    description: number
    isEncrypted: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SystemConfigAvgAggregateInputType = {
    id?: true
  }

  export type SystemConfigSumAggregateInputType = {
    id?: true
  }

  export type SystemConfigMinAggregateInputType = {
    id?: true
    configKey?: true
    configValue?: true
    configType?: true
    description?: true
    isEncrypted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SystemConfigMaxAggregateInputType = {
    id?: true
    configKey?: true
    configValue?: true
    configType?: true
    description?: true
    isEncrypted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SystemConfigCountAggregateInputType = {
    id?: true
    configKey?: true
    configValue?: true
    configType?: true
    description?: true
    isEncrypted?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SystemConfigAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemConfig to aggregate.
     */
    where?: SystemConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigs to fetch.
     */
    orderBy?: SystemConfigOrderByWithRelationInput | SystemConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SystemConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SystemConfigs
    **/
    _count?: true | SystemConfigCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SystemConfigAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SystemConfigSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemConfigMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemConfigMaxAggregateInputType
  }

  export type GetSystemConfigAggregateType<T extends SystemConfigAggregateArgs> = {
        [P in keyof T & keyof AggregateSystemConfig]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystemConfig[P]>
      : GetScalarType<T[P], AggregateSystemConfig[P]>
  }




  export type SystemConfigGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemConfigWhereInput
    orderBy?: SystemConfigOrderByWithAggregationInput | SystemConfigOrderByWithAggregationInput[]
    by: SystemConfigScalarFieldEnum[] | SystemConfigScalarFieldEnum
    having?: SystemConfigScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemConfigCountAggregateInputType | true
    _avg?: SystemConfigAvgAggregateInputType
    _sum?: SystemConfigSumAggregateInputType
    _min?: SystemConfigMinAggregateInputType
    _max?: SystemConfigMaxAggregateInputType
  }

  export type SystemConfigGroupByOutputType = {
    id: number
    configKey: string
    configValue: string | null
    configType: $Enums.ConfigType
    description: string | null
    isEncrypted: boolean
    createdAt: Date
    updatedAt: Date
    _count: SystemConfigCountAggregateOutputType | null
    _avg: SystemConfigAvgAggregateOutputType | null
    _sum: SystemConfigSumAggregateOutputType | null
    _min: SystemConfigMinAggregateOutputType | null
    _max: SystemConfigMaxAggregateOutputType | null
  }

  type GetSystemConfigGroupByPayload<T extends SystemConfigGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemConfigGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemConfigGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemConfigGroupByOutputType[P]>
            : GetScalarType<T[P], SystemConfigGroupByOutputType[P]>
        }
      >
    >


  export type SystemConfigSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    configKey?: boolean
    configValue?: boolean
    configType?: boolean
    description?: boolean
    isEncrypted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["systemConfig"]>

  export type SystemConfigSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    configKey?: boolean
    configValue?: boolean
    configType?: boolean
    description?: boolean
    isEncrypted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["systemConfig"]>

  export type SystemConfigSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    configKey?: boolean
    configValue?: boolean
    configType?: boolean
    description?: boolean
    isEncrypted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["systemConfig"]>

  export type SystemConfigSelectScalar = {
    id?: boolean
    configKey?: boolean
    configValue?: boolean
    configType?: boolean
    description?: boolean
    isEncrypted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SystemConfigOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "configKey" | "configValue" | "configType" | "description" | "isEncrypted" | "createdAt" | "updatedAt", ExtArgs["result"]["systemConfig"]>

  export type $SystemConfigPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SystemConfig"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      configKey: string
      configValue: string | null
      configType: $Enums.ConfigType
      description: string | null
      isEncrypted: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["systemConfig"]>
    composites: {}
  }

  type SystemConfigGetPayload<S extends boolean | null | undefined | SystemConfigDefaultArgs> = $Result.GetResult<Prisma.$SystemConfigPayload, S>

  type SystemConfigCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SystemConfigFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SystemConfigCountAggregateInputType | true
    }

  export interface SystemConfigDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SystemConfig'], meta: { name: 'SystemConfig' } }
    /**
     * Find zero or one SystemConfig that matches the filter.
     * @param {SystemConfigFindUniqueArgs} args - Arguments to find a SystemConfig
     * @example
     * // Get one SystemConfig
     * const systemConfig = await prisma.systemConfig.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SystemConfigFindUniqueArgs>(args: SelectSubset<T, SystemConfigFindUniqueArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SystemConfig that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SystemConfigFindUniqueOrThrowArgs} args - Arguments to find a SystemConfig
     * @example
     * // Get one SystemConfig
     * const systemConfig = await prisma.systemConfig.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SystemConfigFindUniqueOrThrowArgs>(args: SelectSubset<T, SystemConfigFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SystemConfig that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigFindFirstArgs} args - Arguments to find a SystemConfig
     * @example
     * // Get one SystemConfig
     * const systemConfig = await prisma.systemConfig.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SystemConfigFindFirstArgs>(args?: SelectSubset<T, SystemConfigFindFirstArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SystemConfig that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigFindFirstOrThrowArgs} args - Arguments to find a SystemConfig
     * @example
     * // Get one SystemConfig
     * const systemConfig = await prisma.systemConfig.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SystemConfigFindFirstOrThrowArgs>(args?: SelectSubset<T, SystemConfigFindFirstOrThrowArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SystemConfigs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SystemConfigs
     * const systemConfigs = await prisma.systemConfig.findMany()
     * 
     * // Get first 10 SystemConfigs
     * const systemConfigs = await prisma.systemConfig.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemConfigWithIdOnly = await prisma.systemConfig.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SystemConfigFindManyArgs>(args?: SelectSubset<T, SystemConfigFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SystemConfig.
     * @param {SystemConfigCreateArgs} args - Arguments to create a SystemConfig.
     * @example
     * // Create one SystemConfig
     * const SystemConfig = await prisma.systemConfig.create({
     *   data: {
     *     // ... data to create a SystemConfig
     *   }
     * })
     * 
     */
    create<T extends SystemConfigCreateArgs>(args: SelectSubset<T, SystemConfigCreateArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SystemConfigs.
     * @param {SystemConfigCreateManyArgs} args - Arguments to create many SystemConfigs.
     * @example
     * // Create many SystemConfigs
     * const systemConfig = await prisma.systemConfig.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SystemConfigCreateManyArgs>(args?: SelectSubset<T, SystemConfigCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SystemConfigs and returns the data saved in the database.
     * @param {SystemConfigCreateManyAndReturnArgs} args - Arguments to create many SystemConfigs.
     * @example
     * // Create many SystemConfigs
     * const systemConfig = await prisma.systemConfig.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SystemConfigs and only return the `id`
     * const systemConfigWithIdOnly = await prisma.systemConfig.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SystemConfigCreateManyAndReturnArgs>(args?: SelectSubset<T, SystemConfigCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SystemConfig.
     * @param {SystemConfigDeleteArgs} args - Arguments to delete one SystemConfig.
     * @example
     * // Delete one SystemConfig
     * const SystemConfig = await prisma.systemConfig.delete({
     *   where: {
     *     // ... filter to delete one SystemConfig
     *   }
     * })
     * 
     */
    delete<T extends SystemConfigDeleteArgs>(args: SelectSubset<T, SystemConfigDeleteArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SystemConfig.
     * @param {SystemConfigUpdateArgs} args - Arguments to update one SystemConfig.
     * @example
     * // Update one SystemConfig
     * const systemConfig = await prisma.systemConfig.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SystemConfigUpdateArgs>(args: SelectSubset<T, SystemConfigUpdateArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SystemConfigs.
     * @param {SystemConfigDeleteManyArgs} args - Arguments to filter SystemConfigs to delete.
     * @example
     * // Delete a few SystemConfigs
     * const { count } = await prisma.systemConfig.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SystemConfigDeleteManyArgs>(args?: SelectSubset<T, SystemConfigDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SystemConfigs
     * const systemConfig = await prisma.systemConfig.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SystemConfigUpdateManyArgs>(args: SelectSubset<T, SystemConfigUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemConfigs and returns the data updated in the database.
     * @param {SystemConfigUpdateManyAndReturnArgs} args - Arguments to update many SystemConfigs.
     * @example
     * // Update many SystemConfigs
     * const systemConfig = await prisma.systemConfig.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SystemConfigs and only return the `id`
     * const systemConfigWithIdOnly = await prisma.systemConfig.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SystemConfigUpdateManyAndReturnArgs>(args: SelectSubset<T, SystemConfigUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SystemConfig.
     * @param {SystemConfigUpsertArgs} args - Arguments to update or create a SystemConfig.
     * @example
     * // Update or create a SystemConfig
     * const systemConfig = await prisma.systemConfig.upsert({
     *   create: {
     *     // ... data to create a SystemConfig
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SystemConfig we want to update
     *   }
     * })
     */
    upsert<T extends SystemConfigUpsertArgs>(args: SelectSubset<T, SystemConfigUpsertArgs<ExtArgs>>): Prisma__SystemConfigClient<$Result.GetResult<Prisma.$SystemConfigPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SystemConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigCountArgs} args - Arguments to filter SystemConfigs to count.
     * @example
     * // Count the number of SystemConfigs
     * const count = await prisma.systemConfig.count({
     *   where: {
     *     // ... the filter for the SystemConfigs we want to count
     *   }
     * })
    **/
    count<T extends SystemConfigCountArgs>(
      args?: Subset<T, SystemConfigCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemConfigCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SystemConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemConfigAggregateArgs>(args: Subset<T, SystemConfigAggregateArgs>): Prisma.PrismaPromise<GetSystemConfigAggregateType<T>>

    /**
     * Group by SystemConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemConfigGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SystemConfigGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SystemConfigGroupByArgs['orderBy'] }
        : { orderBy?: SystemConfigGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SystemConfigGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemConfigGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SystemConfig model
   */
  readonly fields: SystemConfigFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SystemConfig.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SystemConfigClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SystemConfig model
   */
  interface SystemConfigFieldRefs {
    readonly id: FieldRef<"SystemConfig", 'Int'>
    readonly configKey: FieldRef<"SystemConfig", 'String'>
    readonly configValue: FieldRef<"SystemConfig", 'String'>
    readonly configType: FieldRef<"SystemConfig", 'ConfigType'>
    readonly description: FieldRef<"SystemConfig", 'String'>
    readonly isEncrypted: FieldRef<"SystemConfig", 'Boolean'>
    readonly createdAt: FieldRef<"SystemConfig", 'DateTime'>
    readonly updatedAt: FieldRef<"SystemConfig", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SystemConfig findUnique
   */
  export type SystemConfigFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfig to fetch.
     */
    where: SystemConfigWhereUniqueInput
  }

  /**
   * SystemConfig findUniqueOrThrow
   */
  export type SystemConfigFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfig to fetch.
     */
    where: SystemConfigWhereUniqueInput
  }

  /**
   * SystemConfig findFirst
   */
  export type SystemConfigFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfig to fetch.
     */
    where?: SystemConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigs to fetch.
     */
    orderBy?: SystemConfigOrderByWithRelationInput | SystemConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemConfigs.
     */
    cursor?: SystemConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemConfigs.
     */
    distinct?: SystemConfigScalarFieldEnum | SystemConfigScalarFieldEnum[]
  }

  /**
   * SystemConfig findFirstOrThrow
   */
  export type SystemConfigFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfig to fetch.
     */
    where?: SystemConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigs to fetch.
     */
    orderBy?: SystemConfigOrderByWithRelationInput | SystemConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemConfigs.
     */
    cursor?: SystemConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemConfigs.
     */
    distinct?: SystemConfigScalarFieldEnum | SystemConfigScalarFieldEnum[]
  }

  /**
   * SystemConfig findMany
   */
  export type SystemConfigFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * Filter, which SystemConfigs to fetch.
     */
    where?: SystemConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemConfigs to fetch.
     */
    orderBy?: SystemConfigOrderByWithRelationInput | SystemConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SystemConfigs.
     */
    cursor?: SystemConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemConfigs.
     */
    skip?: number
    distinct?: SystemConfigScalarFieldEnum | SystemConfigScalarFieldEnum[]
  }

  /**
   * SystemConfig create
   */
  export type SystemConfigCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * The data needed to create a SystemConfig.
     */
    data: XOR<SystemConfigCreateInput, SystemConfigUncheckedCreateInput>
  }

  /**
   * SystemConfig createMany
   */
  export type SystemConfigCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SystemConfigs.
     */
    data: SystemConfigCreateManyInput | SystemConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SystemConfig createManyAndReturn
   */
  export type SystemConfigCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * The data used to create many SystemConfigs.
     */
    data: SystemConfigCreateManyInput | SystemConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SystemConfig update
   */
  export type SystemConfigUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * The data needed to update a SystemConfig.
     */
    data: XOR<SystemConfigUpdateInput, SystemConfigUncheckedUpdateInput>
    /**
     * Choose, which SystemConfig to update.
     */
    where: SystemConfigWhereUniqueInput
  }

  /**
   * SystemConfig updateMany
   */
  export type SystemConfigUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SystemConfigs.
     */
    data: XOR<SystemConfigUpdateManyMutationInput, SystemConfigUncheckedUpdateManyInput>
    /**
     * Filter which SystemConfigs to update
     */
    where?: SystemConfigWhereInput
    /**
     * Limit how many SystemConfigs to update.
     */
    limit?: number
  }

  /**
   * SystemConfig updateManyAndReturn
   */
  export type SystemConfigUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * The data used to update SystemConfigs.
     */
    data: XOR<SystemConfigUpdateManyMutationInput, SystemConfigUncheckedUpdateManyInput>
    /**
     * Filter which SystemConfigs to update
     */
    where?: SystemConfigWhereInput
    /**
     * Limit how many SystemConfigs to update.
     */
    limit?: number
  }

  /**
   * SystemConfig upsert
   */
  export type SystemConfigUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * The filter to search for the SystemConfig to update in case it exists.
     */
    where: SystemConfigWhereUniqueInput
    /**
     * In case the SystemConfig found by the `where` argument doesn't exist, create a new SystemConfig with this data.
     */
    create: XOR<SystemConfigCreateInput, SystemConfigUncheckedCreateInput>
    /**
     * In case the SystemConfig was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SystemConfigUpdateInput, SystemConfigUncheckedUpdateInput>
  }

  /**
   * SystemConfig delete
   */
  export type SystemConfigDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
    /**
     * Filter which SystemConfig to delete.
     */
    where: SystemConfigWhereUniqueInput
  }

  /**
   * SystemConfig deleteMany
   */
  export type SystemConfigDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemConfigs to delete
     */
    where?: SystemConfigWhereInput
    /**
     * Limit how many SystemConfigs to delete.
     */
    limit?: number
  }

  /**
   * SystemConfig without action
   */
  export type SystemConfigDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemConfig
     */
    select?: SystemConfigSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemConfig
     */
    omit?: SystemConfigOmit<ExtArgs> | null
  }


  /**
   * Model OperationLog
   */

  export type AggregateOperationLog = {
    _count: OperationLogCountAggregateOutputType | null
    _avg: OperationLogAvgAggregateOutputType | null
    _sum: OperationLogSumAggregateOutputType | null
    _min: OperationLogMinAggregateOutputType | null
    _max: OperationLogMaxAggregateOutputType | null
  }

  export type OperationLogAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    resourceId: number | null
  }

  export type OperationLogSumAggregateOutputType = {
    id: number | null
    userId: number | null
    resourceId: number | null
  }

  export type OperationLogMinAggregateOutputType = {
    id: number | null
    userId: number | null
    operationType: string | null
    resourceType: string | null
    resourceId: number | null
    operationDescription: string | null
    ipAddress: string | null
    userAgent: string | null
    createdAt: Date | null
  }

  export type OperationLogMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    operationType: string | null
    resourceType: string | null
    resourceId: number | null
    operationDescription: string | null
    ipAddress: string | null
    userAgent: string | null
    createdAt: Date | null
  }

  export type OperationLogCountAggregateOutputType = {
    id: number
    userId: number
    operationType: number
    resourceType: number
    resourceId: number
    operationDescription: number
    ipAddress: number
    userAgent: number
    requestData: number
    responseData: number
    createdAt: number
    _all: number
  }


  export type OperationLogAvgAggregateInputType = {
    id?: true
    userId?: true
    resourceId?: true
  }

  export type OperationLogSumAggregateInputType = {
    id?: true
    userId?: true
    resourceId?: true
  }

  export type OperationLogMinAggregateInputType = {
    id?: true
    userId?: true
    operationType?: true
    resourceType?: true
    resourceId?: true
    operationDescription?: true
    ipAddress?: true
    userAgent?: true
    createdAt?: true
  }

  export type OperationLogMaxAggregateInputType = {
    id?: true
    userId?: true
    operationType?: true
    resourceType?: true
    resourceId?: true
    operationDescription?: true
    ipAddress?: true
    userAgent?: true
    createdAt?: true
  }

  export type OperationLogCountAggregateInputType = {
    id?: true
    userId?: true
    operationType?: true
    resourceType?: true
    resourceId?: true
    operationDescription?: true
    ipAddress?: true
    userAgent?: true
    requestData?: true
    responseData?: true
    createdAt?: true
    _all?: true
  }

  export type OperationLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OperationLog to aggregate.
     */
    where?: OperationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperationLogs to fetch.
     */
    orderBy?: OperationLogOrderByWithRelationInput | OperationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OperationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OperationLogs
    **/
    _count?: true | OperationLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OperationLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OperationLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OperationLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OperationLogMaxAggregateInputType
  }

  export type GetOperationLogAggregateType<T extends OperationLogAggregateArgs> = {
        [P in keyof T & keyof AggregateOperationLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOperationLog[P]>
      : GetScalarType<T[P], AggregateOperationLog[P]>
  }




  export type OperationLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OperationLogWhereInput
    orderBy?: OperationLogOrderByWithAggregationInput | OperationLogOrderByWithAggregationInput[]
    by: OperationLogScalarFieldEnum[] | OperationLogScalarFieldEnum
    having?: OperationLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OperationLogCountAggregateInputType | true
    _avg?: OperationLogAvgAggregateInputType
    _sum?: OperationLogSumAggregateInputType
    _min?: OperationLogMinAggregateInputType
    _max?: OperationLogMaxAggregateInputType
  }

  export type OperationLogGroupByOutputType = {
    id: number
    userId: number | null
    operationType: string
    resourceType: string
    resourceId: number | null
    operationDescription: string | null
    ipAddress: string | null
    userAgent: string | null
    requestData: JsonValue | null
    responseData: JsonValue | null
    createdAt: Date
    _count: OperationLogCountAggregateOutputType | null
    _avg: OperationLogAvgAggregateOutputType | null
    _sum: OperationLogSumAggregateOutputType | null
    _min: OperationLogMinAggregateOutputType | null
    _max: OperationLogMaxAggregateOutputType | null
  }

  type GetOperationLogGroupByPayload<T extends OperationLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OperationLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OperationLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OperationLogGroupByOutputType[P]>
            : GetScalarType<T[P], OperationLogGroupByOutputType[P]>
        }
      >
    >


  export type OperationLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    operationType?: boolean
    resourceType?: boolean
    resourceId?: boolean
    operationDescription?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    requestData?: boolean
    responseData?: boolean
    createdAt?: boolean
    user?: boolean | OperationLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["operationLog"]>

  export type OperationLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    operationType?: boolean
    resourceType?: boolean
    resourceId?: boolean
    operationDescription?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    requestData?: boolean
    responseData?: boolean
    createdAt?: boolean
    user?: boolean | OperationLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["operationLog"]>

  export type OperationLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    operationType?: boolean
    resourceType?: boolean
    resourceId?: boolean
    operationDescription?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    requestData?: boolean
    responseData?: boolean
    createdAt?: boolean
    user?: boolean | OperationLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["operationLog"]>

  export type OperationLogSelectScalar = {
    id?: boolean
    userId?: boolean
    operationType?: boolean
    resourceType?: boolean
    resourceId?: boolean
    operationDescription?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    requestData?: boolean
    responseData?: boolean
    createdAt?: boolean
  }

  export type OperationLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "operationType" | "resourceType" | "resourceId" | "operationDescription" | "ipAddress" | "userAgent" | "requestData" | "responseData" | "createdAt", ExtArgs["result"]["operationLog"]>
  export type OperationLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | OperationLog$userArgs<ExtArgs>
  }
  export type OperationLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | OperationLog$userArgs<ExtArgs>
  }
  export type OperationLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | OperationLog$userArgs<ExtArgs>
  }

  export type $OperationLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OperationLog"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number | null
      operationType: string
      resourceType: string
      resourceId: number | null
      operationDescription: string | null
      ipAddress: string | null
      userAgent: string | null
      requestData: Prisma.JsonValue | null
      responseData: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["operationLog"]>
    composites: {}
  }

  type OperationLogGetPayload<S extends boolean | null | undefined | OperationLogDefaultArgs> = $Result.GetResult<Prisma.$OperationLogPayload, S>

  type OperationLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OperationLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OperationLogCountAggregateInputType | true
    }

  export interface OperationLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OperationLog'], meta: { name: 'OperationLog' } }
    /**
     * Find zero or one OperationLog that matches the filter.
     * @param {OperationLogFindUniqueArgs} args - Arguments to find a OperationLog
     * @example
     * // Get one OperationLog
     * const operationLog = await prisma.operationLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OperationLogFindUniqueArgs>(args: SelectSubset<T, OperationLogFindUniqueArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OperationLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OperationLogFindUniqueOrThrowArgs} args - Arguments to find a OperationLog
     * @example
     * // Get one OperationLog
     * const operationLog = await prisma.operationLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OperationLogFindUniqueOrThrowArgs>(args: SelectSubset<T, OperationLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OperationLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperationLogFindFirstArgs} args - Arguments to find a OperationLog
     * @example
     * // Get one OperationLog
     * const operationLog = await prisma.operationLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OperationLogFindFirstArgs>(args?: SelectSubset<T, OperationLogFindFirstArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OperationLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperationLogFindFirstOrThrowArgs} args - Arguments to find a OperationLog
     * @example
     * // Get one OperationLog
     * const operationLog = await prisma.operationLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OperationLogFindFirstOrThrowArgs>(args?: SelectSubset<T, OperationLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OperationLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperationLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OperationLogs
     * const operationLogs = await prisma.operationLog.findMany()
     * 
     * // Get first 10 OperationLogs
     * const operationLogs = await prisma.operationLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const operationLogWithIdOnly = await prisma.operationLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OperationLogFindManyArgs>(args?: SelectSubset<T, OperationLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OperationLog.
     * @param {OperationLogCreateArgs} args - Arguments to create a OperationLog.
     * @example
     * // Create one OperationLog
     * const OperationLog = await prisma.operationLog.create({
     *   data: {
     *     // ... data to create a OperationLog
     *   }
     * })
     * 
     */
    create<T extends OperationLogCreateArgs>(args: SelectSubset<T, OperationLogCreateArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OperationLogs.
     * @param {OperationLogCreateManyArgs} args - Arguments to create many OperationLogs.
     * @example
     * // Create many OperationLogs
     * const operationLog = await prisma.operationLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OperationLogCreateManyArgs>(args?: SelectSubset<T, OperationLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OperationLogs and returns the data saved in the database.
     * @param {OperationLogCreateManyAndReturnArgs} args - Arguments to create many OperationLogs.
     * @example
     * // Create many OperationLogs
     * const operationLog = await prisma.operationLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OperationLogs and only return the `id`
     * const operationLogWithIdOnly = await prisma.operationLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OperationLogCreateManyAndReturnArgs>(args?: SelectSubset<T, OperationLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OperationLog.
     * @param {OperationLogDeleteArgs} args - Arguments to delete one OperationLog.
     * @example
     * // Delete one OperationLog
     * const OperationLog = await prisma.operationLog.delete({
     *   where: {
     *     // ... filter to delete one OperationLog
     *   }
     * })
     * 
     */
    delete<T extends OperationLogDeleteArgs>(args: SelectSubset<T, OperationLogDeleteArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OperationLog.
     * @param {OperationLogUpdateArgs} args - Arguments to update one OperationLog.
     * @example
     * // Update one OperationLog
     * const operationLog = await prisma.operationLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OperationLogUpdateArgs>(args: SelectSubset<T, OperationLogUpdateArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OperationLogs.
     * @param {OperationLogDeleteManyArgs} args - Arguments to filter OperationLogs to delete.
     * @example
     * // Delete a few OperationLogs
     * const { count } = await prisma.operationLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OperationLogDeleteManyArgs>(args?: SelectSubset<T, OperationLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OperationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperationLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OperationLogs
     * const operationLog = await prisma.operationLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OperationLogUpdateManyArgs>(args: SelectSubset<T, OperationLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OperationLogs and returns the data updated in the database.
     * @param {OperationLogUpdateManyAndReturnArgs} args - Arguments to update many OperationLogs.
     * @example
     * // Update many OperationLogs
     * const operationLog = await prisma.operationLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OperationLogs and only return the `id`
     * const operationLogWithIdOnly = await prisma.operationLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OperationLogUpdateManyAndReturnArgs>(args: SelectSubset<T, OperationLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OperationLog.
     * @param {OperationLogUpsertArgs} args - Arguments to update or create a OperationLog.
     * @example
     * // Update or create a OperationLog
     * const operationLog = await prisma.operationLog.upsert({
     *   create: {
     *     // ... data to create a OperationLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OperationLog we want to update
     *   }
     * })
     */
    upsert<T extends OperationLogUpsertArgs>(args: SelectSubset<T, OperationLogUpsertArgs<ExtArgs>>): Prisma__OperationLogClient<$Result.GetResult<Prisma.$OperationLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OperationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperationLogCountArgs} args - Arguments to filter OperationLogs to count.
     * @example
     * // Count the number of OperationLogs
     * const count = await prisma.operationLog.count({
     *   where: {
     *     // ... the filter for the OperationLogs we want to count
     *   }
     * })
    **/
    count<T extends OperationLogCountArgs>(
      args?: Subset<T, OperationLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OperationLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OperationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperationLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OperationLogAggregateArgs>(args: Subset<T, OperationLogAggregateArgs>): Prisma.PrismaPromise<GetOperationLogAggregateType<T>>

    /**
     * Group by OperationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OperationLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OperationLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OperationLogGroupByArgs['orderBy'] }
        : { orderBy?: OperationLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OperationLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperationLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OperationLog model
   */
  readonly fields: OperationLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OperationLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OperationLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends OperationLog$userArgs<ExtArgs> = {}>(args?: Subset<T, OperationLog$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OperationLog model
   */
  interface OperationLogFieldRefs {
    readonly id: FieldRef<"OperationLog", 'Int'>
    readonly userId: FieldRef<"OperationLog", 'Int'>
    readonly operationType: FieldRef<"OperationLog", 'String'>
    readonly resourceType: FieldRef<"OperationLog", 'String'>
    readonly resourceId: FieldRef<"OperationLog", 'Int'>
    readonly operationDescription: FieldRef<"OperationLog", 'String'>
    readonly ipAddress: FieldRef<"OperationLog", 'String'>
    readonly userAgent: FieldRef<"OperationLog", 'String'>
    readonly requestData: FieldRef<"OperationLog", 'Json'>
    readonly responseData: FieldRef<"OperationLog", 'Json'>
    readonly createdAt: FieldRef<"OperationLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OperationLog findUnique
   */
  export type OperationLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * Filter, which OperationLog to fetch.
     */
    where: OperationLogWhereUniqueInput
  }

  /**
   * OperationLog findUniqueOrThrow
   */
  export type OperationLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * Filter, which OperationLog to fetch.
     */
    where: OperationLogWhereUniqueInput
  }

  /**
   * OperationLog findFirst
   */
  export type OperationLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * Filter, which OperationLog to fetch.
     */
    where?: OperationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperationLogs to fetch.
     */
    orderBy?: OperationLogOrderByWithRelationInput | OperationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OperationLogs.
     */
    cursor?: OperationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OperationLogs.
     */
    distinct?: OperationLogScalarFieldEnum | OperationLogScalarFieldEnum[]
  }

  /**
   * OperationLog findFirstOrThrow
   */
  export type OperationLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * Filter, which OperationLog to fetch.
     */
    where?: OperationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperationLogs to fetch.
     */
    orderBy?: OperationLogOrderByWithRelationInput | OperationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OperationLogs.
     */
    cursor?: OperationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OperationLogs.
     */
    distinct?: OperationLogScalarFieldEnum | OperationLogScalarFieldEnum[]
  }

  /**
   * OperationLog findMany
   */
  export type OperationLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * Filter, which OperationLogs to fetch.
     */
    where?: OperationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OperationLogs to fetch.
     */
    orderBy?: OperationLogOrderByWithRelationInput | OperationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OperationLogs.
     */
    cursor?: OperationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OperationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OperationLogs.
     */
    skip?: number
    distinct?: OperationLogScalarFieldEnum | OperationLogScalarFieldEnum[]
  }

  /**
   * OperationLog create
   */
  export type OperationLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * The data needed to create a OperationLog.
     */
    data: XOR<OperationLogCreateInput, OperationLogUncheckedCreateInput>
  }

  /**
   * OperationLog createMany
   */
  export type OperationLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OperationLogs.
     */
    data: OperationLogCreateManyInput | OperationLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OperationLog createManyAndReturn
   */
  export type OperationLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * The data used to create many OperationLogs.
     */
    data: OperationLogCreateManyInput | OperationLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OperationLog update
   */
  export type OperationLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * The data needed to update a OperationLog.
     */
    data: XOR<OperationLogUpdateInput, OperationLogUncheckedUpdateInput>
    /**
     * Choose, which OperationLog to update.
     */
    where: OperationLogWhereUniqueInput
  }

  /**
   * OperationLog updateMany
   */
  export type OperationLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OperationLogs.
     */
    data: XOR<OperationLogUpdateManyMutationInput, OperationLogUncheckedUpdateManyInput>
    /**
     * Filter which OperationLogs to update
     */
    where?: OperationLogWhereInput
    /**
     * Limit how many OperationLogs to update.
     */
    limit?: number
  }

  /**
   * OperationLog updateManyAndReturn
   */
  export type OperationLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * The data used to update OperationLogs.
     */
    data: XOR<OperationLogUpdateManyMutationInput, OperationLogUncheckedUpdateManyInput>
    /**
     * Filter which OperationLogs to update
     */
    where?: OperationLogWhereInput
    /**
     * Limit how many OperationLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OperationLog upsert
   */
  export type OperationLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * The filter to search for the OperationLog to update in case it exists.
     */
    where: OperationLogWhereUniqueInput
    /**
     * In case the OperationLog found by the `where` argument doesn't exist, create a new OperationLog with this data.
     */
    create: XOR<OperationLogCreateInput, OperationLogUncheckedCreateInput>
    /**
     * In case the OperationLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OperationLogUpdateInput, OperationLogUncheckedUpdateInput>
  }

  /**
   * OperationLog delete
   */
  export type OperationLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
    /**
     * Filter which OperationLog to delete.
     */
    where: OperationLogWhereUniqueInput
  }

  /**
   * OperationLog deleteMany
   */
  export type OperationLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OperationLogs to delete
     */
    where?: OperationLogWhereInput
    /**
     * Limit how many OperationLogs to delete.
     */
    limit?: number
  }

  /**
   * OperationLog.user
   */
  export type OperationLog$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * OperationLog without action
   */
  export type OperationLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OperationLog
     */
    select?: OperationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OperationLog
     */
    omit?: OperationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OperationLogInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    passwordHash: 'passwordHash',
    fullName: 'fullName',
    role: 'role',
    departmentId: 'departmentId',
    phone: 'phone',
    avatarUrl: 'avatarUrl',
    status: 'status',
    lastLoginAt: 'lastLoginAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const DepartmentScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    parentId: 'parentId',
    managerId: 'managerId',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DepartmentScalarFieldEnum = (typeof DepartmentScalarFieldEnum)[keyof typeof DepartmentScalarFieldEnum]


  export const InquiryScalarFieldEnum: {
    id: 'id',
    inquiryNo: 'inquiryNo',
    title: 'title',
    content: 'content',
    sourceChannel: 'sourceChannel',
    customerName: 'customerName',
    customerEmail: 'customerEmail',
    customerPhone: 'customerPhone',
    customerCompany: 'customerCompany',
    customerAddress: 'customerAddress',
    customerType: 'customerType',
    region: 'region',
    country: 'country',
    assignedTo: 'assignedTo',
    departmentId: 'departmentId',
    priority: 'priority',
    status: 'status',
    estimatedValue: 'estimatedValue',
    currency: 'currency',
    expectedCloseDate: 'expectedCloseDate',
    aiAnalysisScore: 'aiAnalysisScore',
    aiAnalysisSummary: 'aiAnalysisSummary',
    tags: 'tags',
    customFields: 'customFields',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InquiryScalarFieldEnum = (typeof InquiryScalarFieldEnum)[keyof typeof InquiryScalarFieldEnum]


  export const CustomFieldDefinitionScalarFieldEnum: {
    id: 'id',
    fieldName: 'fieldName',
    fieldKey: 'fieldKey',
    fieldType: 'fieldType',
    fieldOptions: 'fieldOptions',
    defaultValue: 'defaultValue',
    isRequired: 'isRequired',
    isSearchable: 'isSearchable',
    displayOrder: 'displayOrder',
    validationRules: 'validationRules',
    description: 'description',
    status: 'status',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomFieldDefinitionScalarFieldEnum = (typeof CustomFieldDefinitionScalarFieldEnum)[keyof typeof CustomFieldDefinitionScalarFieldEnum]


  export const UserCustomFieldConfigScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    fieldId: 'fieldId',
    isVisible: 'isVisible',
    displayOrder: 'displayOrder',
    columnWidth: 'columnWidth',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserCustomFieldConfigScalarFieldEnum = (typeof UserCustomFieldConfigScalarFieldEnum)[keyof typeof UserCustomFieldConfigScalarFieldEnum]


  export const FollowUpRecordScalarFieldEnum: {
    id: 'id',
    inquiryId: 'inquiryId',
    followUpType: 'followUpType',
    content: 'content',
    result: 'result',
    nextFollowUpDate: 'nextFollowUpDate',
    attachments: 'attachments',
    createdBy: 'createdBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FollowUpRecordScalarFieldEnum = (typeof FollowUpRecordScalarFieldEnum)[keyof typeof FollowUpRecordScalarFieldEnum]


  export const AiAnalysisRecordScalarFieldEnum: {
    id: 'id',
    inquiryId: 'inquiryId',
    aiProvider: 'aiProvider',
    modelName: 'modelName',
    analysisType: 'analysisType',
    inputData: 'inputData',
    outputData: 'outputData',
    confidenceScore: 'confidenceScore',
    processingTimeMs: 'processingTimeMs',
    costAmount: 'costAmount',
    status: 'status',
    errorMessage: 'errorMessage',
    createdBy: 'createdBy',
    createdAt: 'createdAt'
  };

  export type AiAnalysisRecordScalarFieldEnum = (typeof AiAnalysisRecordScalarFieldEnum)[keyof typeof AiAnalysisRecordScalarFieldEnum]


  export const SystemConfigScalarFieldEnum: {
    id: 'id',
    configKey: 'configKey',
    configValue: 'configValue',
    configType: 'configType',
    description: 'description',
    isEncrypted: 'isEncrypted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SystemConfigScalarFieldEnum = (typeof SystemConfigScalarFieldEnum)[keyof typeof SystemConfigScalarFieldEnum]


  export const OperationLogScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    operationType: 'operationType',
    resourceType: 'resourceType',
    resourceId: 'resourceId',
    operationDescription: 'operationDescription',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    requestData: 'requestData',
    responseData: 'responseData',
    createdAt: 'createdAt'
  };

  export type OperationLogScalarFieldEnum = (typeof OperationLogScalarFieldEnum)[keyof typeof OperationLogScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'DepartmentStatus'
   */
  export type EnumDepartmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DepartmentStatus'>
    


  /**
   * Reference to a field of type 'DepartmentStatus[]'
   */
  export type ListEnumDepartmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DepartmentStatus[]'>
    


  /**
   * Reference to a field of type 'CustomerType'
   */
  export type EnumCustomerTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomerType'>
    


  /**
   * Reference to a field of type 'CustomerType[]'
   */
  export type ListEnumCustomerTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomerType[]'>
    


  /**
   * Reference to a field of type 'Priority'
   */
  export type EnumPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Priority'>
    


  /**
   * Reference to a field of type 'Priority[]'
   */
  export type ListEnumPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Priority[]'>
    


  /**
   * Reference to a field of type 'InquiryStatus'
   */
  export type EnumInquiryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InquiryStatus'>
    


  /**
   * Reference to a field of type 'InquiryStatus[]'
   */
  export type ListEnumInquiryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InquiryStatus[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'CustomFieldType'
   */
  export type EnumCustomFieldTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomFieldType'>
    


  /**
   * Reference to a field of type 'CustomFieldType[]'
   */
  export type ListEnumCustomFieldTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomFieldType[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'CustomFieldStatus'
   */
  export type EnumCustomFieldStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomFieldStatus'>
    


  /**
   * Reference to a field of type 'CustomFieldStatus[]'
   */
  export type ListEnumCustomFieldStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CustomFieldStatus[]'>
    


  /**
   * Reference to a field of type 'FollowUpType'
   */
  export type EnumFollowUpTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FollowUpType'>
    


  /**
   * Reference to a field of type 'FollowUpType[]'
   */
  export type ListEnumFollowUpTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FollowUpType[]'>
    


  /**
   * Reference to a field of type 'FollowUpResult'
   */
  export type EnumFollowUpResultFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FollowUpResult'>
    


  /**
   * Reference to a field of type 'FollowUpResult[]'
   */
  export type ListEnumFollowUpResultFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FollowUpResult[]'>
    


  /**
   * Reference to a field of type 'AiProvider'
   */
  export type EnumAiProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AiProvider'>
    


  /**
   * Reference to a field of type 'AiProvider[]'
   */
  export type ListEnumAiProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AiProvider[]'>
    


  /**
   * Reference to a field of type 'AnalysisType'
   */
  export type EnumAnalysisTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AnalysisType'>
    


  /**
   * Reference to a field of type 'AnalysisType[]'
   */
  export type ListEnumAnalysisTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AnalysisType[]'>
    


  /**
   * Reference to a field of type 'AnalysisStatus'
   */
  export type EnumAnalysisStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AnalysisStatus'>
    


  /**
   * Reference to a field of type 'AnalysisStatus[]'
   */
  export type ListEnumAnalysisStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AnalysisStatus[]'>
    


  /**
   * Reference to a field of type 'ConfigType'
   */
  export type EnumConfigTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConfigType'>
    


  /**
   * Reference to a field of type 'ConfigType[]'
   */
  export type ListEnumConfigTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConfigType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    departmentId?: IntNullableFilter<"User"> | number | null
    phone?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    managedDepartments?: DepartmentListRelationFilter
    createdInquiries?: InquiryListRelationFilter
    assignedInquiries?: InquiryListRelationFilter
    followUpRecords?: FollowUpRecordListRelationFilter
    aiAnalysisRecords?: AiAnalysisRecordListRelationFilter
    customFieldConfigs?: UserCustomFieldConfigListRelationFilter
    operationLogs?: OperationLogListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    department?: DepartmentOrderByWithRelationInput
    managedDepartments?: DepartmentOrderByRelationAggregateInput
    createdInquiries?: InquiryOrderByRelationAggregateInput
    assignedInquiries?: InquiryOrderByRelationAggregateInput
    followUpRecords?: FollowUpRecordOrderByRelationAggregateInput
    aiAnalysisRecords?: AiAnalysisRecordOrderByRelationAggregateInput
    customFieldConfigs?: UserCustomFieldConfigOrderByRelationAggregateInput
    operationLogs?: OperationLogOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    passwordHash?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    departmentId?: IntNullableFilter<"User"> | number | null
    phone?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    managedDepartments?: DepartmentListRelationFilter
    createdInquiries?: InquiryListRelationFilter
    assignedInquiries?: InquiryListRelationFilter
    followUpRecords?: FollowUpRecordListRelationFilter
    aiAnalysisRecords?: AiAnalysisRecordListRelationFilter
    customFieldConfigs?: UserCustomFieldConfigListRelationFilter
    operationLogs?: OperationLogListRelationFilter
  }, "id" | "username" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    departmentId?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    fullName?: StringWithAggregatesFilter<"User"> | string
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
    departmentId?: IntNullableWithAggregatesFilter<"User"> | number | null
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    avatarUrl?: StringNullableWithAggregatesFilter<"User"> | string | null
    status?: EnumUserStatusWithAggregatesFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type DepartmentWhereInput = {
    AND?: DepartmentWhereInput | DepartmentWhereInput[]
    OR?: DepartmentWhereInput[]
    NOT?: DepartmentWhereInput | DepartmentWhereInput[]
    id?: IntFilter<"Department"> | number
    name?: StringFilter<"Department"> | string
    description?: StringNullableFilter<"Department"> | string | null
    parentId?: IntNullableFilter<"Department"> | number | null
    managerId?: IntNullableFilter<"Department"> | number | null
    status?: EnumDepartmentStatusFilter<"Department"> | $Enums.DepartmentStatus
    createdAt?: DateTimeFilter<"Department"> | Date | string
    updatedAt?: DateTimeFilter<"Department"> | Date | string
    parent?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    children?: DepartmentListRelationFilter
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    users?: UserListRelationFilter
    inquiries?: InquiryListRelationFilter
  }

  export type DepartmentOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parentId?: SortOrderInput | SortOrder
    managerId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parent?: DepartmentOrderByWithRelationInput
    children?: DepartmentOrderByRelationAggregateInput
    manager?: UserOrderByWithRelationInput
    users?: UserOrderByRelationAggregateInput
    inquiries?: InquiryOrderByRelationAggregateInput
  }

  export type DepartmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DepartmentWhereInput | DepartmentWhereInput[]
    OR?: DepartmentWhereInput[]
    NOT?: DepartmentWhereInput | DepartmentWhereInput[]
    name?: StringFilter<"Department"> | string
    description?: StringNullableFilter<"Department"> | string | null
    parentId?: IntNullableFilter<"Department"> | number | null
    managerId?: IntNullableFilter<"Department"> | number | null
    status?: EnumDepartmentStatusFilter<"Department"> | $Enums.DepartmentStatus
    createdAt?: DateTimeFilter<"Department"> | Date | string
    updatedAt?: DateTimeFilter<"Department"> | Date | string
    parent?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    children?: DepartmentListRelationFilter
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    users?: UserListRelationFilter
    inquiries?: InquiryListRelationFilter
  }, "id">

  export type DepartmentOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parentId?: SortOrderInput | SortOrder
    managerId?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DepartmentCountOrderByAggregateInput
    _avg?: DepartmentAvgOrderByAggregateInput
    _max?: DepartmentMaxOrderByAggregateInput
    _min?: DepartmentMinOrderByAggregateInput
    _sum?: DepartmentSumOrderByAggregateInput
  }

  export type DepartmentScalarWhereWithAggregatesInput = {
    AND?: DepartmentScalarWhereWithAggregatesInput | DepartmentScalarWhereWithAggregatesInput[]
    OR?: DepartmentScalarWhereWithAggregatesInput[]
    NOT?: DepartmentScalarWhereWithAggregatesInput | DepartmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Department"> | number
    name?: StringWithAggregatesFilter<"Department"> | string
    description?: StringNullableWithAggregatesFilter<"Department"> | string | null
    parentId?: IntNullableWithAggregatesFilter<"Department"> | number | null
    managerId?: IntNullableWithAggregatesFilter<"Department"> | number | null
    status?: EnumDepartmentStatusWithAggregatesFilter<"Department"> | $Enums.DepartmentStatus
    createdAt?: DateTimeWithAggregatesFilter<"Department"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Department"> | Date | string
  }

  export type InquiryWhereInput = {
    AND?: InquiryWhereInput | InquiryWhereInput[]
    OR?: InquiryWhereInput[]
    NOT?: InquiryWhereInput | InquiryWhereInput[]
    id?: IntFilter<"Inquiry"> | number
    inquiryNo?: StringFilter<"Inquiry"> | string
    title?: StringFilter<"Inquiry"> | string
    content?: StringFilter<"Inquiry"> | string
    sourceChannel?: StringFilter<"Inquiry"> | string
    customerName?: StringFilter<"Inquiry"> | string
    customerEmail?: StringNullableFilter<"Inquiry"> | string | null
    customerPhone?: StringNullableFilter<"Inquiry"> | string | null
    customerCompany?: StringNullableFilter<"Inquiry"> | string | null
    customerAddress?: StringNullableFilter<"Inquiry"> | string | null
    customerType?: EnumCustomerTypeFilter<"Inquiry"> | $Enums.CustomerType
    region?: StringNullableFilter<"Inquiry"> | string | null
    country?: StringNullableFilter<"Inquiry"> | string | null
    assignedTo?: IntNullableFilter<"Inquiry"> | number | null
    departmentId?: IntNullableFilter<"Inquiry"> | number | null
    priority?: EnumPriorityFilter<"Inquiry"> | $Enums.Priority
    status?: EnumInquiryStatusFilter<"Inquiry"> | $Enums.InquiryStatus
    estimatedValue?: DecimalNullableFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"Inquiry"> | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Inquiry"> | Date | string | null
    aiAnalysisScore?: DecimalNullableFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: StringNullableFilter<"Inquiry"> | string | null
    tags?: JsonNullableFilter<"Inquiry">
    customFields?: JsonNullableFilter<"Inquiry">
    createdBy?: IntFilter<"Inquiry"> | number
    createdAt?: DateTimeFilter<"Inquiry"> | Date | string
    updatedAt?: DateTimeFilter<"Inquiry"> | Date | string
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
    followUpRecords?: FollowUpRecordListRelationFilter
    aiAnalysisRecords?: AiAnalysisRecordListRelationFilter
  }

  export type InquiryOrderByWithRelationInput = {
    id?: SortOrder
    inquiryNo?: SortOrder
    title?: SortOrder
    content?: SortOrder
    sourceChannel?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrderInput | SortOrder
    customerPhone?: SortOrderInput | SortOrder
    customerCompany?: SortOrderInput | SortOrder
    customerAddress?: SortOrderInput | SortOrder
    customerType?: SortOrder
    region?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    assignedTo?: SortOrderInput | SortOrder
    departmentId?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    aiAnalysisScore?: SortOrderInput | SortOrder
    aiAnalysisSummary?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    customFields?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assignee?: UserOrderByWithRelationInput
    department?: DepartmentOrderByWithRelationInput
    creator?: UserOrderByWithRelationInput
    followUpRecords?: FollowUpRecordOrderByRelationAggregateInput
    aiAnalysisRecords?: AiAnalysisRecordOrderByRelationAggregateInput
  }

  export type InquiryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    inquiryNo?: string
    AND?: InquiryWhereInput | InquiryWhereInput[]
    OR?: InquiryWhereInput[]
    NOT?: InquiryWhereInput | InquiryWhereInput[]
    title?: StringFilter<"Inquiry"> | string
    content?: StringFilter<"Inquiry"> | string
    sourceChannel?: StringFilter<"Inquiry"> | string
    customerName?: StringFilter<"Inquiry"> | string
    customerEmail?: StringNullableFilter<"Inquiry"> | string | null
    customerPhone?: StringNullableFilter<"Inquiry"> | string | null
    customerCompany?: StringNullableFilter<"Inquiry"> | string | null
    customerAddress?: StringNullableFilter<"Inquiry"> | string | null
    customerType?: EnumCustomerTypeFilter<"Inquiry"> | $Enums.CustomerType
    region?: StringNullableFilter<"Inquiry"> | string | null
    country?: StringNullableFilter<"Inquiry"> | string | null
    assignedTo?: IntNullableFilter<"Inquiry"> | number | null
    departmentId?: IntNullableFilter<"Inquiry"> | number | null
    priority?: EnumPriorityFilter<"Inquiry"> | $Enums.Priority
    status?: EnumInquiryStatusFilter<"Inquiry"> | $Enums.InquiryStatus
    estimatedValue?: DecimalNullableFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"Inquiry"> | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Inquiry"> | Date | string | null
    aiAnalysisScore?: DecimalNullableFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: StringNullableFilter<"Inquiry"> | string | null
    tags?: JsonNullableFilter<"Inquiry">
    customFields?: JsonNullableFilter<"Inquiry">
    createdBy?: IntFilter<"Inquiry"> | number
    createdAt?: DateTimeFilter<"Inquiry"> | Date | string
    updatedAt?: DateTimeFilter<"Inquiry"> | Date | string
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    department?: XOR<DepartmentNullableScalarRelationFilter, DepartmentWhereInput> | null
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
    followUpRecords?: FollowUpRecordListRelationFilter
    aiAnalysisRecords?: AiAnalysisRecordListRelationFilter
  }, "id" | "inquiryNo">

  export type InquiryOrderByWithAggregationInput = {
    id?: SortOrder
    inquiryNo?: SortOrder
    title?: SortOrder
    content?: SortOrder
    sourceChannel?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrderInput | SortOrder
    customerPhone?: SortOrderInput | SortOrder
    customerCompany?: SortOrderInput | SortOrder
    customerAddress?: SortOrderInput | SortOrder
    customerType?: SortOrder
    region?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    assignedTo?: SortOrderInput | SortOrder
    departmentId?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    estimatedValue?: SortOrderInput | SortOrder
    currency?: SortOrderInput | SortOrder
    expectedCloseDate?: SortOrderInput | SortOrder
    aiAnalysisScore?: SortOrderInput | SortOrder
    aiAnalysisSummary?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    customFields?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InquiryCountOrderByAggregateInput
    _avg?: InquiryAvgOrderByAggregateInput
    _max?: InquiryMaxOrderByAggregateInput
    _min?: InquiryMinOrderByAggregateInput
    _sum?: InquirySumOrderByAggregateInput
  }

  export type InquiryScalarWhereWithAggregatesInput = {
    AND?: InquiryScalarWhereWithAggregatesInput | InquiryScalarWhereWithAggregatesInput[]
    OR?: InquiryScalarWhereWithAggregatesInput[]
    NOT?: InquiryScalarWhereWithAggregatesInput | InquiryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Inquiry"> | number
    inquiryNo?: StringWithAggregatesFilter<"Inquiry"> | string
    title?: StringWithAggregatesFilter<"Inquiry"> | string
    content?: StringWithAggregatesFilter<"Inquiry"> | string
    sourceChannel?: StringWithAggregatesFilter<"Inquiry"> | string
    customerName?: StringWithAggregatesFilter<"Inquiry"> | string
    customerEmail?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    customerPhone?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    customerCompany?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    customerAddress?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    customerType?: EnumCustomerTypeWithAggregatesFilter<"Inquiry"> | $Enums.CustomerType
    region?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    country?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    assignedTo?: IntNullableWithAggregatesFilter<"Inquiry"> | number | null
    departmentId?: IntNullableWithAggregatesFilter<"Inquiry"> | number | null
    priority?: EnumPriorityWithAggregatesFilter<"Inquiry"> | $Enums.Priority
    status?: EnumInquiryStatusWithAggregatesFilter<"Inquiry"> | $Enums.InquiryStatus
    estimatedValue?: DecimalNullableWithAggregatesFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    expectedCloseDate?: DateTimeNullableWithAggregatesFilter<"Inquiry"> | Date | string | null
    aiAnalysisScore?: DecimalNullableWithAggregatesFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: StringNullableWithAggregatesFilter<"Inquiry"> | string | null
    tags?: JsonNullableWithAggregatesFilter<"Inquiry">
    customFields?: JsonNullableWithAggregatesFilter<"Inquiry">
    createdBy?: IntWithAggregatesFilter<"Inquiry"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Inquiry"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Inquiry"> | Date | string
  }

  export type CustomFieldDefinitionWhereInput = {
    AND?: CustomFieldDefinitionWhereInput | CustomFieldDefinitionWhereInput[]
    OR?: CustomFieldDefinitionWhereInput[]
    NOT?: CustomFieldDefinitionWhereInput | CustomFieldDefinitionWhereInput[]
    id?: IntFilter<"CustomFieldDefinition"> | number
    fieldName?: StringFilter<"CustomFieldDefinition"> | string
    fieldKey?: StringFilter<"CustomFieldDefinition"> | string
    fieldType?: EnumCustomFieldTypeFilter<"CustomFieldDefinition"> | $Enums.CustomFieldType
    fieldOptions?: JsonNullableFilter<"CustomFieldDefinition">
    defaultValue?: StringNullableFilter<"CustomFieldDefinition"> | string | null
    isRequired?: BoolFilter<"CustomFieldDefinition"> | boolean
    isSearchable?: BoolFilter<"CustomFieldDefinition"> | boolean
    displayOrder?: IntFilter<"CustomFieldDefinition"> | number
    validationRules?: JsonNullableFilter<"CustomFieldDefinition">
    description?: StringNullableFilter<"CustomFieldDefinition"> | string | null
    status?: EnumCustomFieldStatusFilter<"CustomFieldDefinition"> | $Enums.CustomFieldStatus
    createdBy?: IntFilter<"CustomFieldDefinition"> | number
    createdAt?: DateTimeFilter<"CustomFieldDefinition"> | Date | string
    updatedAt?: DateTimeFilter<"CustomFieldDefinition"> | Date | string
    userConfigs?: UserCustomFieldConfigListRelationFilter
  }

  export type CustomFieldDefinitionOrderByWithRelationInput = {
    id?: SortOrder
    fieldName?: SortOrder
    fieldKey?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrderInput | SortOrder
    defaultValue?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    isSearchable?: SortOrder
    displayOrder?: SortOrder
    validationRules?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userConfigs?: UserCustomFieldConfigOrderByRelationAggregateInput
  }

  export type CustomFieldDefinitionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    fieldKey?: string
    AND?: CustomFieldDefinitionWhereInput | CustomFieldDefinitionWhereInput[]
    OR?: CustomFieldDefinitionWhereInput[]
    NOT?: CustomFieldDefinitionWhereInput | CustomFieldDefinitionWhereInput[]
    fieldName?: StringFilter<"CustomFieldDefinition"> | string
    fieldType?: EnumCustomFieldTypeFilter<"CustomFieldDefinition"> | $Enums.CustomFieldType
    fieldOptions?: JsonNullableFilter<"CustomFieldDefinition">
    defaultValue?: StringNullableFilter<"CustomFieldDefinition"> | string | null
    isRequired?: BoolFilter<"CustomFieldDefinition"> | boolean
    isSearchable?: BoolFilter<"CustomFieldDefinition"> | boolean
    displayOrder?: IntFilter<"CustomFieldDefinition"> | number
    validationRules?: JsonNullableFilter<"CustomFieldDefinition">
    description?: StringNullableFilter<"CustomFieldDefinition"> | string | null
    status?: EnumCustomFieldStatusFilter<"CustomFieldDefinition"> | $Enums.CustomFieldStatus
    createdBy?: IntFilter<"CustomFieldDefinition"> | number
    createdAt?: DateTimeFilter<"CustomFieldDefinition"> | Date | string
    updatedAt?: DateTimeFilter<"CustomFieldDefinition"> | Date | string
    userConfigs?: UserCustomFieldConfigListRelationFilter
  }, "id" | "fieldKey">

  export type CustomFieldDefinitionOrderByWithAggregationInput = {
    id?: SortOrder
    fieldName?: SortOrder
    fieldKey?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrderInput | SortOrder
    defaultValue?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    isSearchable?: SortOrder
    displayOrder?: SortOrder
    validationRules?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomFieldDefinitionCountOrderByAggregateInput
    _avg?: CustomFieldDefinitionAvgOrderByAggregateInput
    _max?: CustomFieldDefinitionMaxOrderByAggregateInput
    _min?: CustomFieldDefinitionMinOrderByAggregateInput
    _sum?: CustomFieldDefinitionSumOrderByAggregateInput
  }

  export type CustomFieldDefinitionScalarWhereWithAggregatesInput = {
    AND?: CustomFieldDefinitionScalarWhereWithAggregatesInput | CustomFieldDefinitionScalarWhereWithAggregatesInput[]
    OR?: CustomFieldDefinitionScalarWhereWithAggregatesInput[]
    NOT?: CustomFieldDefinitionScalarWhereWithAggregatesInput | CustomFieldDefinitionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CustomFieldDefinition"> | number
    fieldName?: StringWithAggregatesFilter<"CustomFieldDefinition"> | string
    fieldKey?: StringWithAggregatesFilter<"CustomFieldDefinition"> | string
    fieldType?: EnumCustomFieldTypeWithAggregatesFilter<"CustomFieldDefinition"> | $Enums.CustomFieldType
    fieldOptions?: JsonNullableWithAggregatesFilter<"CustomFieldDefinition">
    defaultValue?: StringNullableWithAggregatesFilter<"CustomFieldDefinition"> | string | null
    isRequired?: BoolWithAggregatesFilter<"CustomFieldDefinition"> | boolean
    isSearchable?: BoolWithAggregatesFilter<"CustomFieldDefinition"> | boolean
    displayOrder?: IntWithAggregatesFilter<"CustomFieldDefinition"> | number
    validationRules?: JsonNullableWithAggregatesFilter<"CustomFieldDefinition">
    description?: StringNullableWithAggregatesFilter<"CustomFieldDefinition"> | string | null
    status?: EnumCustomFieldStatusWithAggregatesFilter<"CustomFieldDefinition"> | $Enums.CustomFieldStatus
    createdBy?: IntWithAggregatesFilter<"CustomFieldDefinition"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CustomFieldDefinition"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CustomFieldDefinition"> | Date | string
  }

  export type UserCustomFieldConfigWhereInput = {
    AND?: UserCustomFieldConfigWhereInput | UserCustomFieldConfigWhereInput[]
    OR?: UserCustomFieldConfigWhereInput[]
    NOT?: UserCustomFieldConfigWhereInput | UserCustomFieldConfigWhereInput[]
    id?: IntFilter<"UserCustomFieldConfig"> | number
    userId?: IntFilter<"UserCustomFieldConfig"> | number
    fieldId?: IntFilter<"UserCustomFieldConfig"> | number
    isVisible?: BoolFilter<"UserCustomFieldConfig"> | boolean
    displayOrder?: IntFilter<"UserCustomFieldConfig"> | number
    columnWidth?: IntNullableFilter<"UserCustomFieldConfig"> | number | null
    createdAt?: DateTimeFilter<"UserCustomFieldConfig"> | Date | string
    updatedAt?: DateTimeFilter<"UserCustomFieldConfig"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    field?: XOR<CustomFieldDefinitionScalarRelationFilter, CustomFieldDefinitionWhereInput>
  }

  export type UserCustomFieldConfigOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    fieldId?: SortOrder
    isVisible?: SortOrder
    displayOrder?: SortOrder
    columnWidth?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    field?: CustomFieldDefinitionOrderByWithRelationInput
  }

  export type UserCustomFieldConfigWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId_fieldId?: UserCustomFieldConfigUserIdFieldIdCompoundUniqueInput
    AND?: UserCustomFieldConfigWhereInput | UserCustomFieldConfigWhereInput[]
    OR?: UserCustomFieldConfigWhereInput[]
    NOT?: UserCustomFieldConfigWhereInput | UserCustomFieldConfigWhereInput[]
    userId?: IntFilter<"UserCustomFieldConfig"> | number
    fieldId?: IntFilter<"UserCustomFieldConfig"> | number
    isVisible?: BoolFilter<"UserCustomFieldConfig"> | boolean
    displayOrder?: IntFilter<"UserCustomFieldConfig"> | number
    columnWidth?: IntNullableFilter<"UserCustomFieldConfig"> | number | null
    createdAt?: DateTimeFilter<"UserCustomFieldConfig"> | Date | string
    updatedAt?: DateTimeFilter<"UserCustomFieldConfig"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    field?: XOR<CustomFieldDefinitionScalarRelationFilter, CustomFieldDefinitionWhereInput>
  }, "id" | "userId_fieldId">

  export type UserCustomFieldConfigOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    fieldId?: SortOrder
    isVisible?: SortOrder
    displayOrder?: SortOrder
    columnWidth?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCustomFieldConfigCountOrderByAggregateInput
    _avg?: UserCustomFieldConfigAvgOrderByAggregateInput
    _max?: UserCustomFieldConfigMaxOrderByAggregateInput
    _min?: UserCustomFieldConfigMinOrderByAggregateInput
    _sum?: UserCustomFieldConfigSumOrderByAggregateInput
  }

  export type UserCustomFieldConfigScalarWhereWithAggregatesInput = {
    AND?: UserCustomFieldConfigScalarWhereWithAggregatesInput | UserCustomFieldConfigScalarWhereWithAggregatesInput[]
    OR?: UserCustomFieldConfigScalarWhereWithAggregatesInput[]
    NOT?: UserCustomFieldConfigScalarWhereWithAggregatesInput | UserCustomFieldConfigScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserCustomFieldConfig"> | number
    userId?: IntWithAggregatesFilter<"UserCustomFieldConfig"> | number
    fieldId?: IntWithAggregatesFilter<"UserCustomFieldConfig"> | number
    isVisible?: BoolWithAggregatesFilter<"UserCustomFieldConfig"> | boolean
    displayOrder?: IntWithAggregatesFilter<"UserCustomFieldConfig"> | number
    columnWidth?: IntNullableWithAggregatesFilter<"UserCustomFieldConfig"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"UserCustomFieldConfig"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserCustomFieldConfig"> | Date | string
  }

  export type FollowUpRecordWhereInput = {
    AND?: FollowUpRecordWhereInput | FollowUpRecordWhereInput[]
    OR?: FollowUpRecordWhereInput[]
    NOT?: FollowUpRecordWhereInput | FollowUpRecordWhereInput[]
    id?: IntFilter<"FollowUpRecord"> | number
    inquiryId?: IntFilter<"FollowUpRecord"> | number
    followUpType?: EnumFollowUpTypeFilter<"FollowUpRecord"> | $Enums.FollowUpType
    content?: StringFilter<"FollowUpRecord"> | string
    result?: EnumFollowUpResultNullableFilter<"FollowUpRecord"> | $Enums.FollowUpResult | null
    nextFollowUpDate?: DateTimeNullableFilter<"FollowUpRecord"> | Date | string | null
    attachments?: JsonNullableFilter<"FollowUpRecord">
    createdBy?: IntFilter<"FollowUpRecord"> | number
    createdAt?: DateTimeFilter<"FollowUpRecord"> | Date | string
    updatedAt?: DateTimeFilter<"FollowUpRecord"> | Date | string
    inquiry?: XOR<InquiryScalarRelationFilter, InquiryWhereInput>
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type FollowUpRecordOrderByWithRelationInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    followUpType?: SortOrder
    content?: SortOrder
    result?: SortOrderInput | SortOrder
    nextFollowUpDate?: SortOrderInput | SortOrder
    attachments?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    inquiry?: InquiryOrderByWithRelationInput
    creator?: UserOrderByWithRelationInput
  }

  export type FollowUpRecordWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FollowUpRecordWhereInput | FollowUpRecordWhereInput[]
    OR?: FollowUpRecordWhereInput[]
    NOT?: FollowUpRecordWhereInput | FollowUpRecordWhereInput[]
    inquiryId?: IntFilter<"FollowUpRecord"> | number
    followUpType?: EnumFollowUpTypeFilter<"FollowUpRecord"> | $Enums.FollowUpType
    content?: StringFilter<"FollowUpRecord"> | string
    result?: EnumFollowUpResultNullableFilter<"FollowUpRecord"> | $Enums.FollowUpResult | null
    nextFollowUpDate?: DateTimeNullableFilter<"FollowUpRecord"> | Date | string | null
    attachments?: JsonNullableFilter<"FollowUpRecord">
    createdBy?: IntFilter<"FollowUpRecord"> | number
    createdAt?: DateTimeFilter<"FollowUpRecord"> | Date | string
    updatedAt?: DateTimeFilter<"FollowUpRecord"> | Date | string
    inquiry?: XOR<InquiryScalarRelationFilter, InquiryWhereInput>
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type FollowUpRecordOrderByWithAggregationInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    followUpType?: SortOrder
    content?: SortOrder
    result?: SortOrderInput | SortOrder
    nextFollowUpDate?: SortOrderInput | SortOrder
    attachments?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FollowUpRecordCountOrderByAggregateInput
    _avg?: FollowUpRecordAvgOrderByAggregateInput
    _max?: FollowUpRecordMaxOrderByAggregateInput
    _min?: FollowUpRecordMinOrderByAggregateInput
    _sum?: FollowUpRecordSumOrderByAggregateInput
  }

  export type FollowUpRecordScalarWhereWithAggregatesInput = {
    AND?: FollowUpRecordScalarWhereWithAggregatesInput | FollowUpRecordScalarWhereWithAggregatesInput[]
    OR?: FollowUpRecordScalarWhereWithAggregatesInput[]
    NOT?: FollowUpRecordScalarWhereWithAggregatesInput | FollowUpRecordScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"FollowUpRecord"> | number
    inquiryId?: IntWithAggregatesFilter<"FollowUpRecord"> | number
    followUpType?: EnumFollowUpTypeWithAggregatesFilter<"FollowUpRecord"> | $Enums.FollowUpType
    content?: StringWithAggregatesFilter<"FollowUpRecord"> | string
    result?: EnumFollowUpResultNullableWithAggregatesFilter<"FollowUpRecord"> | $Enums.FollowUpResult | null
    nextFollowUpDate?: DateTimeNullableWithAggregatesFilter<"FollowUpRecord"> | Date | string | null
    attachments?: JsonNullableWithAggregatesFilter<"FollowUpRecord">
    createdBy?: IntWithAggregatesFilter<"FollowUpRecord"> | number
    createdAt?: DateTimeWithAggregatesFilter<"FollowUpRecord"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FollowUpRecord"> | Date | string
  }

  export type AiAnalysisRecordWhereInput = {
    AND?: AiAnalysisRecordWhereInput | AiAnalysisRecordWhereInput[]
    OR?: AiAnalysisRecordWhereInput[]
    NOT?: AiAnalysisRecordWhereInput | AiAnalysisRecordWhereInput[]
    id?: IntFilter<"AiAnalysisRecord"> | number
    inquiryId?: IntFilter<"AiAnalysisRecord"> | number
    aiProvider?: EnumAiProviderFilter<"AiAnalysisRecord"> | $Enums.AiProvider
    modelName?: StringFilter<"AiAnalysisRecord"> | string
    analysisType?: EnumAnalysisTypeFilter<"AiAnalysisRecord"> | $Enums.AnalysisType
    inputData?: JsonFilter<"AiAnalysisRecord">
    outputData?: JsonFilter<"AiAnalysisRecord">
    confidenceScore?: DecimalNullableFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: IntNullableFilter<"AiAnalysisRecord"> | number | null
    costAmount?: DecimalNullableFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFilter<"AiAnalysisRecord"> | $Enums.AnalysisStatus
    errorMessage?: StringNullableFilter<"AiAnalysisRecord"> | string | null
    createdBy?: IntFilter<"AiAnalysisRecord"> | number
    createdAt?: DateTimeFilter<"AiAnalysisRecord"> | Date | string
    inquiry?: XOR<InquiryScalarRelationFilter, InquiryWhereInput>
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AiAnalysisRecordOrderByWithRelationInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    aiProvider?: SortOrder
    modelName?: SortOrder
    analysisType?: SortOrder
    inputData?: SortOrder
    outputData?: SortOrder
    confidenceScore?: SortOrderInput | SortOrder
    processingTimeMs?: SortOrderInput | SortOrder
    costAmount?: SortOrderInput | SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    inquiry?: InquiryOrderByWithRelationInput
    creator?: UserOrderByWithRelationInput
  }

  export type AiAnalysisRecordWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AiAnalysisRecordWhereInput | AiAnalysisRecordWhereInput[]
    OR?: AiAnalysisRecordWhereInput[]
    NOT?: AiAnalysisRecordWhereInput | AiAnalysisRecordWhereInput[]
    inquiryId?: IntFilter<"AiAnalysisRecord"> | number
    aiProvider?: EnumAiProviderFilter<"AiAnalysisRecord"> | $Enums.AiProvider
    modelName?: StringFilter<"AiAnalysisRecord"> | string
    analysisType?: EnumAnalysisTypeFilter<"AiAnalysisRecord"> | $Enums.AnalysisType
    inputData?: JsonFilter<"AiAnalysisRecord">
    outputData?: JsonFilter<"AiAnalysisRecord">
    confidenceScore?: DecimalNullableFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: IntNullableFilter<"AiAnalysisRecord"> | number | null
    costAmount?: DecimalNullableFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFilter<"AiAnalysisRecord"> | $Enums.AnalysisStatus
    errorMessage?: StringNullableFilter<"AiAnalysisRecord"> | string | null
    createdBy?: IntFilter<"AiAnalysisRecord"> | number
    createdAt?: DateTimeFilter<"AiAnalysisRecord"> | Date | string
    inquiry?: XOR<InquiryScalarRelationFilter, InquiryWhereInput>
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type AiAnalysisRecordOrderByWithAggregationInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    aiProvider?: SortOrder
    modelName?: SortOrder
    analysisType?: SortOrder
    inputData?: SortOrder
    outputData?: SortOrder
    confidenceScore?: SortOrderInput | SortOrder
    processingTimeMs?: SortOrderInput | SortOrder
    costAmount?: SortOrderInput | SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    _count?: AiAnalysisRecordCountOrderByAggregateInput
    _avg?: AiAnalysisRecordAvgOrderByAggregateInput
    _max?: AiAnalysisRecordMaxOrderByAggregateInput
    _min?: AiAnalysisRecordMinOrderByAggregateInput
    _sum?: AiAnalysisRecordSumOrderByAggregateInput
  }

  export type AiAnalysisRecordScalarWhereWithAggregatesInput = {
    AND?: AiAnalysisRecordScalarWhereWithAggregatesInput | AiAnalysisRecordScalarWhereWithAggregatesInput[]
    OR?: AiAnalysisRecordScalarWhereWithAggregatesInput[]
    NOT?: AiAnalysisRecordScalarWhereWithAggregatesInput | AiAnalysisRecordScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AiAnalysisRecord"> | number
    inquiryId?: IntWithAggregatesFilter<"AiAnalysisRecord"> | number
    aiProvider?: EnumAiProviderWithAggregatesFilter<"AiAnalysisRecord"> | $Enums.AiProvider
    modelName?: StringWithAggregatesFilter<"AiAnalysisRecord"> | string
    analysisType?: EnumAnalysisTypeWithAggregatesFilter<"AiAnalysisRecord"> | $Enums.AnalysisType
    inputData?: JsonWithAggregatesFilter<"AiAnalysisRecord">
    outputData?: JsonWithAggregatesFilter<"AiAnalysisRecord">
    confidenceScore?: DecimalNullableWithAggregatesFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: IntNullableWithAggregatesFilter<"AiAnalysisRecord"> | number | null
    costAmount?: DecimalNullableWithAggregatesFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusWithAggregatesFilter<"AiAnalysisRecord"> | $Enums.AnalysisStatus
    errorMessage?: StringNullableWithAggregatesFilter<"AiAnalysisRecord"> | string | null
    createdBy?: IntWithAggregatesFilter<"AiAnalysisRecord"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AiAnalysisRecord"> | Date | string
  }

  export type SystemConfigWhereInput = {
    AND?: SystemConfigWhereInput | SystemConfigWhereInput[]
    OR?: SystemConfigWhereInput[]
    NOT?: SystemConfigWhereInput | SystemConfigWhereInput[]
    id?: IntFilter<"SystemConfig"> | number
    configKey?: StringFilter<"SystemConfig"> | string
    configValue?: StringNullableFilter<"SystemConfig"> | string | null
    configType?: EnumConfigTypeFilter<"SystemConfig"> | $Enums.ConfigType
    description?: StringNullableFilter<"SystemConfig"> | string | null
    isEncrypted?: BoolFilter<"SystemConfig"> | boolean
    createdAt?: DateTimeFilter<"SystemConfig"> | Date | string
    updatedAt?: DateTimeFilter<"SystemConfig"> | Date | string
  }

  export type SystemConfigOrderByWithRelationInput = {
    id?: SortOrder
    configKey?: SortOrder
    configValue?: SortOrderInput | SortOrder
    configType?: SortOrder
    description?: SortOrderInput | SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemConfigWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    configKey?: string
    AND?: SystemConfigWhereInput | SystemConfigWhereInput[]
    OR?: SystemConfigWhereInput[]
    NOT?: SystemConfigWhereInput | SystemConfigWhereInput[]
    configValue?: StringNullableFilter<"SystemConfig"> | string | null
    configType?: EnumConfigTypeFilter<"SystemConfig"> | $Enums.ConfigType
    description?: StringNullableFilter<"SystemConfig"> | string | null
    isEncrypted?: BoolFilter<"SystemConfig"> | boolean
    createdAt?: DateTimeFilter<"SystemConfig"> | Date | string
    updatedAt?: DateTimeFilter<"SystemConfig"> | Date | string
  }, "id" | "configKey">

  export type SystemConfigOrderByWithAggregationInput = {
    id?: SortOrder
    configKey?: SortOrder
    configValue?: SortOrderInput | SortOrder
    configType?: SortOrder
    description?: SortOrderInput | SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SystemConfigCountOrderByAggregateInput
    _avg?: SystemConfigAvgOrderByAggregateInput
    _max?: SystemConfigMaxOrderByAggregateInput
    _min?: SystemConfigMinOrderByAggregateInput
    _sum?: SystemConfigSumOrderByAggregateInput
  }

  export type SystemConfigScalarWhereWithAggregatesInput = {
    AND?: SystemConfigScalarWhereWithAggregatesInput | SystemConfigScalarWhereWithAggregatesInput[]
    OR?: SystemConfigScalarWhereWithAggregatesInput[]
    NOT?: SystemConfigScalarWhereWithAggregatesInput | SystemConfigScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SystemConfig"> | number
    configKey?: StringWithAggregatesFilter<"SystemConfig"> | string
    configValue?: StringNullableWithAggregatesFilter<"SystemConfig"> | string | null
    configType?: EnumConfigTypeWithAggregatesFilter<"SystemConfig"> | $Enums.ConfigType
    description?: StringNullableWithAggregatesFilter<"SystemConfig"> | string | null
    isEncrypted?: BoolWithAggregatesFilter<"SystemConfig"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"SystemConfig"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SystemConfig"> | Date | string
  }

  export type OperationLogWhereInput = {
    AND?: OperationLogWhereInput | OperationLogWhereInput[]
    OR?: OperationLogWhereInput[]
    NOT?: OperationLogWhereInput | OperationLogWhereInput[]
    id?: IntFilter<"OperationLog"> | number
    userId?: IntNullableFilter<"OperationLog"> | number | null
    operationType?: StringFilter<"OperationLog"> | string
    resourceType?: StringFilter<"OperationLog"> | string
    resourceId?: IntNullableFilter<"OperationLog"> | number | null
    operationDescription?: StringNullableFilter<"OperationLog"> | string | null
    ipAddress?: StringNullableFilter<"OperationLog"> | string | null
    userAgent?: StringNullableFilter<"OperationLog"> | string | null
    requestData?: JsonNullableFilter<"OperationLog">
    responseData?: JsonNullableFilter<"OperationLog">
    createdAt?: DateTimeFilter<"OperationLog"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type OperationLogOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    operationType?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrderInput | SortOrder
    operationDescription?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    requestData?: SortOrderInput | SortOrder
    responseData?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type OperationLogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OperationLogWhereInput | OperationLogWhereInput[]
    OR?: OperationLogWhereInput[]
    NOT?: OperationLogWhereInput | OperationLogWhereInput[]
    userId?: IntNullableFilter<"OperationLog"> | number | null
    operationType?: StringFilter<"OperationLog"> | string
    resourceType?: StringFilter<"OperationLog"> | string
    resourceId?: IntNullableFilter<"OperationLog"> | number | null
    operationDescription?: StringNullableFilter<"OperationLog"> | string | null
    ipAddress?: StringNullableFilter<"OperationLog"> | string | null
    userAgent?: StringNullableFilter<"OperationLog"> | string | null
    requestData?: JsonNullableFilter<"OperationLog">
    responseData?: JsonNullableFilter<"OperationLog">
    createdAt?: DateTimeFilter<"OperationLog"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type OperationLogOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    operationType?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrderInput | SortOrder
    operationDescription?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    requestData?: SortOrderInput | SortOrder
    responseData?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: OperationLogCountOrderByAggregateInput
    _avg?: OperationLogAvgOrderByAggregateInput
    _max?: OperationLogMaxOrderByAggregateInput
    _min?: OperationLogMinOrderByAggregateInput
    _sum?: OperationLogSumOrderByAggregateInput
  }

  export type OperationLogScalarWhereWithAggregatesInput = {
    AND?: OperationLogScalarWhereWithAggregatesInput | OperationLogScalarWhereWithAggregatesInput[]
    OR?: OperationLogScalarWhereWithAggregatesInput[]
    NOT?: OperationLogScalarWhereWithAggregatesInput | OperationLogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OperationLog"> | number
    userId?: IntNullableWithAggregatesFilter<"OperationLog"> | number | null
    operationType?: StringWithAggregatesFilter<"OperationLog"> | string
    resourceType?: StringWithAggregatesFilter<"OperationLog"> | string
    resourceId?: IntNullableWithAggregatesFilter<"OperationLog"> | number | null
    operationDescription?: StringNullableWithAggregatesFilter<"OperationLog"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"OperationLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"OperationLog"> | string | null
    requestData?: JsonNullableWithAggregatesFilter<"OperationLog">
    responseData?: JsonNullableWithAggregatesFilter<"OperationLog">
    createdAt?: DateTimeWithAggregatesFilter<"OperationLog"> | Date | string
  }

  export type UserCreateInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartmentCreateInput = {
    name: string
    description?: string | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: DepartmentCreateNestedOneWithoutChildrenInput
    children?: DepartmentCreateNestedManyWithoutParentInput
    manager?: UserCreateNestedOneWithoutManagedDepartmentsInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    managerId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: DepartmentUncheckedCreateNestedManyWithoutParentInput
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: DepartmentUpdateOneWithoutChildrenNestedInput
    children?: DepartmentUpdateManyWithoutParentNestedInput
    manager?: UserUpdateOneWithoutManagedDepartmentsNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    managerId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: DepartmentUncheckedUpdateManyWithoutParentNestedInput
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    managerId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartmentUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    managerId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InquiryCreateInput = {
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    assignee?: UserCreateNestedOneWithoutAssignedInquiriesInput
    department?: DepartmentCreateNestedOneWithoutInquiriesInput
    creator: UserCreateNestedOneWithoutCreatedInquiriesInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutInquiryInput
  }

  export type InquiryUncheckedCreateInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutInquiryInput
  }

  export type InquiryUpdateInput = {
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignee?: UserUpdateOneWithoutAssignedInquiriesNestedInput
    department?: DepartmentUpdateOneWithoutInquiriesNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedInquiriesNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryCreateManyInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InquiryUpdateManyMutationInput = {
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InquiryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldDefinitionCreateInput = {
    fieldName: string
    fieldKey: string
    fieldType: $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: string | null
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: string | null
    status?: $Enums.CustomFieldStatus
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userConfigs?: UserCustomFieldConfigCreateNestedManyWithoutFieldInput
  }

  export type CustomFieldDefinitionUncheckedCreateInput = {
    id?: number
    fieldName: string
    fieldKey: string
    fieldType: $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: string | null
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: string | null
    status?: $Enums.CustomFieldStatus
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
    userConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutFieldInput
  }

  export type CustomFieldDefinitionUpdateInput = {
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldKey?: StringFieldUpdateOperationsInput | string
    fieldType?: EnumCustomFieldTypeFieldUpdateOperationsInput | $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomFieldStatusFieldUpdateOperationsInput | $Enums.CustomFieldStatus
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userConfigs?: UserCustomFieldConfigUpdateManyWithoutFieldNestedInput
  }

  export type CustomFieldDefinitionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldKey?: StringFieldUpdateOperationsInput | string
    fieldType?: EnumCustomFieldTypeFieldUpdateOperationsInput | $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomFieldStatusFieldUpdateOperationsInput | $Enums.CustomFieldStatus
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutFieldNestedInput
  }

  export type CustomFieldDefinitionCreateManyInput = {
    id?: number
    fieldName: string
    fieldKey: string
    fieldType: $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: string | null
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: string | null
    status?: $Enums.CustomFieldStatus
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldDefinitionUpdateManyMutationInput = {
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldKey?: StringFieldUpdateOperationsInput | string
    fieldType?: EnumCustomFieldTypeFieldUpdateOperationsInput | $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomFieldStatusFieldUpdateOperationsInput | $Enums.CustomFieldStatus
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldDefinitionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldKey?: StringFieldUpdateOperationsInput | string
    fieldType?: EnumCustomFieldTypeFieldUpdateOperationsInput | $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomFieldStatusFieldUpdateOperationsInput | $Enums.CustomFieldStatus
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCustomFieldConfigCreateInput = {
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCustomFieldConfigsInput
    field: CustomFieldDefinitionCreateNestedOneWithoutUserConfigsInput
  }

  export type UserCustomFieldConfigUncheckedCreateInput = {
    id?: number
    userId: number
    fieldId: number
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCustomFieldConfigUpdateInput = {
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCustomFieldConfigsNestedInput
    field?: CustomFieldDefinitionUpdateOneRequiredWithoutUserConfigsNestedInput
  }

  export type UserCustomFieldConfigUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    fieldId?: IntFieldUpdateOperationsInput | number
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCustomFieldConfigCreateManyInput = {
    id?: number
    userId: number
    fieldId: number
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCustomFieldConfigUpdateManyMutationInput = {
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCustomFieldConfigUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    fieldId?: IntFieldUpdateOperationsInput | number
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpRecordCreateInput = {
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    inquiry: InquiryCreateNestedOneWithoutFollowUpRecordsInput
    creator: UserCreateNestedOneWithoutFollowUpRecordsInput
  }

  export type FollowUpRecordUncheckedCreateInput = {
    id?: number
    inquiryId: number
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FollowUpRecordUpdateInput = {
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inquiry?: InquiryUpdateOneRequiredWithoutFollowUpRecordsNestedInput
    creator?: UserUpdateOneRequiredWithoutFollowUpRecordsNestedInput
  }

  export type FollowUpRecordUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpRecordCreateManyInput = {
    id?: number
    inquiryId: number
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FollowUpRecordUpdateManyMutationInput = {
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpRecordUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AiAnalysisRecordCreateInput = {
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdAt?: Date | string
    inquiry: InquiryCreateNestedOneWithoutAiAnalysisRecordsInput
    creator: UserCreateNestedOneWithoutAiAnalysisRecordsInput
  }

  export type AiAnalysisRecordUncheckedCreateInput = {
    id?: number
    inquiryId: number
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdBy: number
    createdAt?: Date | string
  }

  export type AiAnalysisRecordUpdateInput = {
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inquiry?: InquiryUpdateOneRequiredWithoutAiAnalysisRecordsNestedInput
    creator?: UserUpdateOneRequiredWithoutAiAnalysisRecordsNestedInput
  }

  export type AiAnalysisRecordUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AiAnalysisRecordCreateManyInput = {
    id?: number
    inquiryId: number
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdBy: number
    createdAt?: Date | string
  }

  export type AiAnalysisRecordUpdateManyMutationInput = {
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AiAnalysisRecordUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigCreateInput = {
    configKey: string
    configValue?: string | null
    configType?: $Enums.ConfigType
    description?: string | null
    isEncrypted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemConfigUncheckedCreateInput = {
    id?: number
    configKey: string
    configValue?: string | null
    configType?: $Enums.ConfigType
    description?: string | null
    isEncrypted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemConfigUpdateInput = {
    configKey?: StringFieldUpdateOperationsInput | string
    configValue?: NullableStringFieldUpdateOperationsInput | string | null
    configType?: EnumConfigTypeFieldUpdateOperationsInput | $Enums.ConfigType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    configKey?: StringFieldUpdateOperationsInput | string
    configValue?: NullableStringFieldUpdateOperationsInput | string | null
    configType?: EnumConfigTypeFieldUpdateOperationsInput | $Enums.ConfigType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigCreateManyInput = {
    id?: number
    configKey: string
    configValue?: string | null
    configType?: $Enums.ConfigType
    description?: string | null
    isEncrypted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SystemConfigUpdateManyMutationInput = {
    configKey?: StringFieldUpdateOperationsInput | string
    configValue?: NullableStringFieldUpdateOperationsInput | string | null
    configType?: EnumConfigTypeFieldUpdateOperationsInput | $Enums.ConfigType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemConfigUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    configKey?: StringFieldUpdateOperationsInput | string
    configValue?: NullableStringFieldUpdateOperationsInput | string | null
    configType?: EnumConfigTypeFieldUpdateOperationsInput | $Enums.ConfigType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OperationLogCreateInput = {
    operationType: string
    resourceType: string
    resourceId?: number | null
    operationDescription?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    user?: UserCreateNestedOneWithoutOperationLogsInput
  }

  export type OperationLogUncheckedCreateInput = {
    id?: number
    userId?: number | null
    operationType: string
    resourceType: string
    resourceId?: number | null
    operationDescription?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type OperationLogUpdateInput = {
    operationType?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableIntFieldUpdateOperationsInput | number | null
    operationDescription?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOperationLogsNestedInput
  }

  export type OperationLogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    operationType?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableIntFieldUpdateOperationsInput | number | null
    operationDescription?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OperationLogCreateManyInput = {
    id?: number
    userId?: number | null
    operationType: string
    resourceType: string
    resourceId?: number | null
    operationDescription?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type OperationLogUpdateManyMutationInput = {
    operationType?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableIntFieldUpdateOperationsInput | number | null
    operationDescription?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OperationLogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    operationType?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableIntFieldUpdateOperationsInput | number | null
    operationDescription?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DepartmentNullableScalarRelationFilter = {
    is?: DepartmentWhereInput | null
    isNot?: DepartmentWhereInput | null
  }

  export type DepartmentListRelationFilter = {
    every?: DepartmentWhereInput
    some?: DepartmentWhereInput
    none?: DepartmentWhereInput
  }

  export type InquiryListRelationFilter = {
    every?: InquiryWhereInput
    some?: InquiryWhereInput
    none?: InquiryWhereInput
  }

  export type FollowUpRecordListRelationFilter = {
    every?: FollowUpRecordWhereInput
    some?: FollowUpRecordWhereInput
    none?: FollowUpRecordWhereInput
  }

  export type AiAnalysisRecordListRelationFilter = {
    every?: AiAnalysisRecordWhereInput
    some?: AiAnalysisRecordWhereInput
    none?: AiAnalysisRecordWhereInput
  }

  export type UserCustomFieldConfigListRelationFilter = {
    every?: UserCustomFieldConfigWhereInput
    some?: UserCustomFieldConfigWhereInput
    none?: UserCustomFieldConfigWhereInput
  }

  export type OperationLogListRelationFilter = {
    every?: OperationLogWhereInput
    some?: OperationLogWhereInput
    none?: OperationLogWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type DepartmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InquiryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FollowUpRecordOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AiAnalysisRecordOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCustomFieldConfigOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OperationLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    departmentId?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    departmentId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    departmentId?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    departmentId?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    departmentId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumDepartmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DepartmentStatus | EnumDepartmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepartmentStatusFilter<$PrismaModel> | $Enums.DepartmentStatus
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepartmentCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentId?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartmentAvgOrderByAggregateInput = {
    id?: SortOrder
    parentId?: SortOrder
    managerId?: SortOrder
  }

  export type DepartmentMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentId?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartmentMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentId?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartmentSumOrderByAggregateInput = {
    id?: SortOrder
    parentId?: SortOrder
    managerId?: SortOrder
  }

  export type EnumDepartmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DepartmentStatus | EnumDepartmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepartmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.DepartmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDepartmentStatusFilter<$PrismaModel>
    _max?: NestedEnumDepartmentStatusFilter<$PrismaModel>
  }

  export type EnumCustomerTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeFilter<$PrismaModel> | $Enums.CustomerType
  }

  export type EnumPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityFilter<$PrismaModel> | $Enums.Priority
  }

  export type EnumInquiryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusFilter<$PrismaModel> | $Enums.InquiryStatus
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type InquiryCountOrderByAggregateInput = {
    id?: SortOrder
    inquiryNo?: SortOrder
    title?: SortOrder
    content?: SortOrder
    sourceChannel?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrder
    customerPhone?: SortOrder
    customerCompany?: SortOrder
    customerAddress?: SortOrder
    customerType?: SortOrder
    region?: SortOrder
    country?: SortOrder
    assignedTo?: SortOrder
    departmentId?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    estimatedValue?: SortOrder
    currency?: SortOrder
    expectedCloseDate?: SortOrder
    aiAnalysisScore?: SortOrder
    aiAnalysisSummary?: SortOrder
    tags?: SortOrder
    customFields?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InquiryAvgOrderByAggregateInput = {
    id?: SortOrder
    assignedTo?: SortOrder
    departmentId?: SortOrder
    estimatedValue?: SortOrder
    aiAnalysisScore?: SortOrder
    createdBy?: SortOrder
  }

  export type InquiryMaxOrderByAggregateInput = {
    id?: SortOrder
    inquiryNo?: SortOrder
    title?: SortOrder
    content?: SortOrder
    sourceChannel?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrder
    customerPhone?: SortOrder
    customerCompany?: SortOrder
    customerAddress?: SortOrder
    customerType?: SortOrder
    region?: SortOrder
    country?: SortOrder
    assignedTo?: SortOrder
    departmentId?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    estimatedValue?: SortOrder
    currency?: SortOrder
    expectedCloseDate?: SortOrder
    aiAnalysisScore?: SortOrder
    aiAnalysisSummary?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InquiryMinOrderByAggregateInput = {
    id?: SortOrder
    inquiryNo?: SortOrder
    title?: SortOrder
    content?: SortOrder
    sourceChannel?: SortOrder
    customerName?: SortOrder
    customerEmail?: SortOrder
    customerPhone?: SortOrder
    customerCompany?: SortOrder
    customerAddress?: SortOrder
    customerType?: SortOrder
    region?: SortOrder
    country?: SortOrder
    assignedTo?: SortOrder
    departmentId?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    estimatedValue?: SortOrder
    currency?: SortOrder
    expectedCloseDate?: SortOrder
    aiAnalysisScore?: SortOrder
    aiAnalysisSummary?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InquirySumOrderByAggregateInput = {
    id?: SortOrder
    assignedTo?: SortOrder
    departmentId?: SortOrder
    estimatedValue?: SortOrder
    aiAnalysisScore?: SortOrder
    createdBy?: SortOrder
  }

  export type EnumCustomerTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeWithAggregatesFilter<$PrismaModel> | $Enums.CustomerType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomerTypeFilter<$PrismaModel>
    _max?: NestedEnumCustomerTypeFilter<$PrismaModel>
  }

  export type EnumPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityWithAggregatesFilter<$PrismaModel> | $Enums.Priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriorityFilter<$PrismaModel>
    _max?: NestedEnumPriorityFilter<$PrismaModel>
  }

  export type EnumInquiryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusWithAggregatesFilter<$PrismaModel> | $Enums.InquiryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInquiryStatusFilter<$PrismaModel>
    _max?: NestedEnumInquiryStatusFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumCustomFieldTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldType | EnumCustomFieldTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldTypeFilter<$PrismaModel> | $Enums.CustomFieldType
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumCustomFieldStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldStatus | EnumCustomFieldStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldStatusFilter<$PrismaModel> | $Enums.CustomFieldStatus
  }

  export type CustomFieldDefinitionCountOrderByAggregateInput = {
    id?: SortOrder
    fieldName?: SortOrder
    fieldKey?: SortOrder
    fieldType?: SortOrder
    fieldOptions?: SortOrder
    defaultValue?: SortOrder
    isRequired?: SortOrder
    isSearchable?: SortOrder
    displayOrder?: SortOrder
    validationRules?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldDefinitionAvgOrderByAggregateInput = {
    id?: SortOrder
    displayOrder?: SortOrder
    createdBy?: SortOrder
  }

  export type CustomFieldDefinitionMaxOrderByAggregateInput = {
    id?: SortOrder
    fieldName?: SortOrder
    fieldKey?: SortOrder
    fieldType?: SortOrder
    defaultValue?: SortOrder
    isRequired?: SortOrder
    isSearchable?: SortOrder
    displayOrder?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldDefinitionMinOrderByAggregateInput = {
    id?: SortOrder
    fieldName?: SortOrder
    fieldKey?: SortOrder
    fieldType?: SortOrder
    defaultValue?: SortOrder
    isRequired?: SortOrder
    isSearchable?: SortOrder
    displayOrder?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomFieldDefinitionSumOrderByAggregateInput = {
    id?: SortOrder
    displayOrder?: SortOrder
    createdBy?: SortOrder
  }

  export type EnumCustomFieldTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldType | EnumCustomFieldTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldTypeWithAggregatesFilter<$PrismaModel> | $Enums.CustomFieldType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomFieldTypeFilter<$PrismaModel>
    _max?: NestedEnumCustomFieldTypeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumCustomFieldStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldStatus | EnumCustomFieldStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldStatusWithAggregatesFilter<$PrismaModel> | $Enums.CustomFieldStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomFieldStatusFilter<$PrismaModel>
    _max?: NestedEnumCustomFieldStatusFilter<$PrismaModel>
  }

  export type CustomFieldDefinitionScalarRelationFilter = {
    is?: CustomFieldDefinitionWhereInput
    isNot?: CustomFieldDefinitionWhereInput
  }

  export type UserCustomFieldConfigUserIdFieldIdCompoundUniqueInput = {
    userId: number
    fieldId: number
  }

  export type UserCustomFieldConfigCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fieldId?: SortOrder
    isVisible?: SortOrder
    displayOrder?: SortOrder
    columnWidth?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserCustomFieldConfigAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fieldId?: SortOrder
    displayOrder?: SortOrder
    columnWidth?: SortOrder
  }

  export type UserCustomFieldConfigMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fieldId?: SortOrder
    isVisible?: SortOrder
    displayOrder?: SortOrder
    columnWidth?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserCustomFieldConfigMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fieldId?: SortOrder
    isVisible?: SortOrder
    displayOrder?: SortOrder
    columnWidth?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserCustomFieldConfigSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fieldId?: SortOrder
    displayOrder?: SortOrder
    columnWidth?: SortOrder
  }

  export type EnumFollowUpTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpType | EnumFollowUpTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFollowUpTypeFilter<$PrismaModel> | $Enums.FollowUpType
  }

  export type EnumFollowUpResultNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpResult | EnumFollowUpResultFieldRefInput<$PrismaModel> | null
    in?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFollowUpResultNullableFilter<$PrismaModel> | $Enums.FollowUpResult | null
  }

  export type InquiryScalarRelationFilter = {
    is?: InquiryWhereInput
    isNot?: InquiryWhereInput
  }

  export type FollowUpRecordCountOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    followUpType?: SortOrder
    content?: SortOrder
    result?: SortOrder
    nextFollowUpDate?: SortOrder
    attachments?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FollowUpRecordAvgOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    createdBy?: SortOrder
  }

  export type FollowUpRecordMaxOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    followUpType?: SortOrder
    content?: SortOrder
    result?: SortOrder
    nextFollowUpDate?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FollowUpRecordMinOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    followUpType?: SortOrder
    content?: SortOrder
    result?: SortOrder
    nextFollowUpDate?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FollowUpRecordSumOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    createdBy?: SortOrder
  }

  export type EnumFollowUpTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpType | EnumFollowUpTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFollowUpTypeWithAggregatesFilter<$PrismaModel> | $Enums.FollowUpType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFollowUpTypeFilter<$PrismaModel>
    _max?: NestedEnumFollowUpTypeFilter<$PrismaModel>
  }

  export type EnumFollowUpResultNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpResult | EnumFollowUpResultFieldRefInput<$PrismaModel> | null
    in?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFollowUpResultNullableWithAggregatesFilter<$PrismaModel> | $Enums.FollowUpResult | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFollowUpResultNullableFilter<$PrismaModel>
    _max?: NestedEnumFollowUpResultNullableFilter<$PrismaModel>
  }

  export type EnumAiProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.AiProvider | EnumAiProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAiProviderFilter<$PrismaModel> | $Enums.AiProvider
  }

  export type EnumAnalysisTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisType | EnumAnalysisTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisTypeFilter<$PrismaModel> | $Enums.AnalysisType
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumAnalysisStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisStatus | EnumAnalysisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisStatusFilter<$PrismaModel> | $Enums.AnalysisStatus
  }

  export type AiAnalysisRecordCountOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    aiProvider?: SortOrder
    modelName?: SortOrder
    analysisType?: SortOrder
    inputData?: SortOrder
    outputData?: SortOrder
    confidenceScore?: SortOrder
    processingTimeMs?: SortOrder
    costAmount?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type AiAnalysisRecordAvgOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    confidenceScore?: SortOrder
    processingTimeMs?: SortOrder
    costAmount?: SortOrder
    createdBy?: SortOrder
  }

  export type AiAnalysisRecordMaxOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    aiProvider?: SortOrder
    modelName?: SortOrder
    analysisType?: SortOrder
    confidenceScore?: SortOrder
    processingTimeMs?: SortOrder
    costAmount?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type AiAnalysisRecordMinOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    aiProvider?: SortOrder
    modelName?: SortOrder
    analysisType?: SortOrder
    confidenceScore?: SortOrder
    processingTimeMs?: SortOrder
    costAmount?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    createdBy?: SortOrder
    createdAt?: SortOrder
  }

  export type AiAnalysisRecordSumOrderByAggregateInput = {
    id?: SortOrder
    inquiryId?: SortOrder
    confidenceScore?: SortOrder
    processingTimeMs?: SortOrder
    costAmount?: SortOrder
    createdBy?: SortOrder
  }

  export type EnumAiProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AiProvider | EnumAiProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAiProviderWithAggregatesFilter<$PrismaModel> | $Enums.AiProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAiProviderFilter<$PrismaModel>
    _max?: NestedEnumAiProviderFilter<$PrismaModel>
  }

  export type EnumAnalysisTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisType | EnumAnalysisTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisTypeWithAggregatesFilter<$PrismaModel> | $Enums.AnalysisType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAnalysisTypeFilter<$PrismaModel>
    _max?: NestedEnumAnalysisTypeFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumAnalysisStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisStatus | EnumAnalysisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisStatusWithAggregatesFilter<$PrismaModel> | $Enums.AnalysisStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAnalysisStatusFilter<$PrismaModel>
    _max?: NestedEnumAnalysisStatusFilter<$PrismaModel>
  }

  export type EnumConfigTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigType | EnumConfigTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTypeFilter<$PrismaModel> | $Enums.ConfigType
  }

  export type SystemConfigCountOrderByAggregateInput = {
    id?: SortOrder
    configKey?: SortOrder
    configValue?: SortOrder
    configType?: SortOrder
    description?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemConfigAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SystemConfigMaxOrderByAggregateInput = {
    id?: SortOrder
    configKey?: SortOrder
    configValue?: SortOrder
    configType?: SortOrder
    description?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemConfigMinOrderByAggregateInput = {
    id?: SortOrder
    configKey?: SortOrder
    configValue?: SortOrder
    configType?: SortOrder
    description?: SortOrder
    isEncrypted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SystemConfigSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumConfigTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigType | EnumConfigTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTypeWithAggregatesFilter<$PrismaModel> | $Enums.ConfigType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConfigTypeFilter<$PrismaModel>
    _max?: NestedEnumConfigTypeFilter<$PrismaModel>
  }

  export type OperationLogCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    operationType?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    operationDescription?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    requestData?: SortOrder
    responseData?: SortOrder
    createdAt?: SortOrder
  }

  export type OperationLogAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    resourceId?: SortOrder
  }

  export type OperationLogMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    operationType?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    operationDescription?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
  }

  export type OperationLogMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    operationType?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    operationDescription?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
  }

  export type OperationLogSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    resourceId?: SortOrder
  }

  export type DepartmentCreateNestedOneWithoutUsersInput = {
    create?: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutUsersInput
    connect?: DepartmentWhereUniqueInput
  }

  export type DepartmentCreateNestedManyWithoutManagerInput = {
    create?: XOR<DepartmentCreateWithoutManagerInput, DepartmentUncheckedCreateWithoutManagerInput> | DepartmentCreateWithoutManagerInput[] | DepartmentUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutManagerInput | DepartmentCreateOrConnectWithoutManagerInput[]
    createMany?: DepartmentCreateManyManagerInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type InquiryCreateNestedManyWithoutCreatorInput = {
    create?: XOR<InquiryCreateWithoutCreatorInput, InquiryUncheckedCreateWithoutCreatorInput> | InquiryCreateWithoutCreatorInput[] | InquiryUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutCreatorInput | InquiryCreateOrConnectWithoutCreatorInput[]
    createMany?: InquiryCreateManyCreatorInputEnvelope
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
  }

  export type InquiryCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<InquiryCreateWithoutAssigneeInput, InquiryUncheckedCreateWithoutAssigneeInput> | InquiryCreateWithoutAssigneeInput[] | InquiryUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutAssigneeInput | InquiryCreateOrConnectWithoutAssigneeInput[]
    createMany?: InquiryCreateManyAssigneeInputEnvelope
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
  }

  export type FollowUpRecordCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FollowUpRecordCreateWithoutCreatorInput, FollowUpRecordUncheckedCreateWithoutCreatorInput> | FollowUpRecordCreateWithoutCreatorInput[] | FollowUpRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutCreatorInput | FollowUpRecordCreateOrConnectWithoutCreatorInput[]
    createMany?: FollowUpRecordCreateManyCreatorInputEnvelope
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
  }

  export type AiAnalysisRecordCreateNestedManyWithoutCreatorInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutCreatorInput, AiAnalysisRecordUncheckedCreateWithoutCreatorInput> | AiAnalysisRecordCreateWithoutCreatorInput[] | AiAnalysisRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutCreatorInput | AiAnalysisRecordCreateOrConnectWithoutCreatorInput[]
    createMany?: AiAnalysisRecordCreateManyCreatorInputEnvelope
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
  }

  export type UserCustomFieldConfigCreateNestedManyWithoutUserInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutUserInput, UserCustomFieldConfigUncheckedCreateWithoutUserInput> | UserCustomFieldConfigCreateWithoutUserInput[] | UserCustomFieldConfigUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutUserInput | UserCustomFieldConfigCreateOrConnectWithoutUserInput[]
    createMany?: UserCustomFieldConfigCreateManyUserInputEnvelope
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
  }

  export type OperationLogCreateNestedManyWithoutUserInput = {
    create?: XOR<OperationLogCreateWithoutUserInput, OperationLogUncheckedCreateWithoutUserInput> | OperationLogCreateWithoutUserInput[] | OperationLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OperationLogCreateOrConnectWithoutUserInput | OperationLogCreateOrConnectWithoutUserInput[]
    createMany?: OperationLogCreateManyUserInputEnvelope
    connect?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
  }

  export type DepartmentUncheckedCreateNestedManyWithoutManagerInput = {
    create?: XOR<DepartmentCreateWithoutManagerInput, DepartmentUncheckedCreateWithoutManagerInput> | DepartmentCreateWithoutManagerInput[] | DepartmentUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutManagerInput | DepartmentCreateOrConnectWithoutManagerInput[]
    createMany?: DepartmentCreateManyManagerInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type InquiryUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<InquiryCreateWithoutCreatorInput, InquiryUncheckedCreateWithoutCreatorInput> | InquiryCreateWithoutCreatorInput[] | InquiryUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutCreatorInput | InquiryCreateOrConnectWithoutCreatorInput[]
    createMany?: InquiryCreateManyCreatorInputEnvelope
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
  }

  export type InquiryUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<InquiryCreateWithoutAssigneeInput, InquiryUncheckedCreateWithoutAssigneeInput> | InquiryCreateWithoutAssigneeInput[] | InquiryUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutAssigneeInput | InquiryCreateOrConnectWithoutAssigneeInput[]
    createMany?: InquiryCreateManyAssigneeInputEnvelope
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
  }

  export type FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FollowUpRecordCreateWithoutCreatorInput, FollowUpRecordUncheckedCreateWithoutCreatorInput> | FollowUpRecordCreateWithoutCreatorInput[] | FollowUpRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutCreatorInput | FollowUpRecordCreateOrConnectWithoutCreatorInput[]
    createMany?: FollowUpRecordCreateManyCreatorInputEnvelope
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
  }

  export type AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutCreatorInput, AiAnalysisRecordUncheckedCreateWithoutCreatorInput> | AiAnalysisRecordCreateWithoutCreatorInput[] | AiAnalysisRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutCreatorInput | AiAnalysisRecordCreateOrConnectWithoutCreatorInput[]
    createMany?: AiAnalysisRecordCreateManyCreatorInputEnvelope
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
  }

  export type UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutUserInput, UserCustomFieldConfigUncheckedCreateWithoutUserInput> | UserCustomFieldConfigCreateWithoutUserInput[] | UserCustomFieldConfigUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutUserInput | UserCustomFieldConfigCreateOrConnectWithoutUserInput[]
    createMany?: UserCustomFieldConfigCreateManyUserInputEnvelope
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
  }

  export type OperationLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OperationLogCreateWithoutUserInput, OperationLogUncheckedCreateWithoutUserInput> | OperationLogCreateWithoutUserInput[] | OperationLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OperationLogCreateOrConnectWithoutUserInput | OperationLogCreateOrConnectWithoutUserInput[]
    createMany?: OperationLogCreateManyUserInputEnvelope
    connect?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DepartmentUpdateOneWithoutUsersNestedInput = {
    create?: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutUsersInput
    upsert?: DepartmentUpsertWithoutUsersInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutUsersInput, DepartmentUpdateWithoutUsersInput>, DepartmentUncheckedUpdateWithoutUsersInput>
  }

  export type DepartmentUpdateManyWithoutManagerNestedInput = {
    create?: XOR<DepartmentCreateWithoutManagerInput, DepartmentUncheckedCreateWithoutManagerInput> | DepartmentCreateWithoutManagerInput[] | DepartmentUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutManagerInput | DepartmentCreateOrConnectWithoutManagerInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutManagerInput | DepartmentUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: DepartmentCreateManyManagerInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutManagerInput | DepartmentUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutManagerInput | DepartmentUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type InquiryUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<InquiryCreateWithoutCreatorInput, InquiryUncheckedCreateWithoutCreatorInput> | InquiryCreateWithoutCreatorInput[] | InquiryUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutCreatorInput | InquiryCreateOrConnectWithoutCreatorInput[]
    upsert?: InquiryUpsertWithWhereUniqueWithoutCreatorInput | InquiryUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: InquiryCreateManyCreatorInputEnvelope
    set?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    disconnect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    delete?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    update?: InquiryUpdateWithWhereUniqueWithoutCreatorInput | InquiryUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: InquiryUpdateManyWithWhereWithoutCreatorInput | InquiryUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
  }

  export type InquiryUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<InquiryCreateWithoutAssigneeInput, InquiryUncheckedCreateWithoutAssigneeInput> | InquiryCreateWithoutAssigneeInput[] | InquiryUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutAssigneeInput | InquiryCreateOrConnectWithoutAssigneeInput[]
    upsert?: InquiryUpsertWithWhereUniqueWithoutAssigneeInput | InquiryUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: InquiryCreateManyAssigneeInputEnvelope
    set?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    disconnect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    delete?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    update?: InquiryUpdateWithWhereUniqueWithoutAssigneeInput | InquiryUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: InquiryUpdateManyWithWhereWithoutAssigneeInput | InquiryUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
  }

  export type FollowUpRecordUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FollowUpRecordCreateWithoutCreatorInput, FollowUpRecordUncheckedCreateWithoutCreatorInput> | FollowUpRecordCreateWithoutCreatorInput[] | FollowUpRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutCreatorInput | FollowUpRecordCreateOrConnectWithoutCreatorInput[]
    upsert?: FollowUpRecordUpsertWithWhereUniqueWithoutCreatorInput | FollowUpRecordUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FollowUpRecordCreateManyCreatorInputEnvelope
    set?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    disconnect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    delete?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    update?: FollowUpRecordUpdateWithWhereUniqueWithoutCreatorInput | FollowUpRecordUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FollowUpRecordUpdateManyWithWhereWithoutCreatorInput | FollowUpRecordUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FollowUpRecordScalarWhereInput | FollowUpRecordScalarWhereInput[]
  }

  export type AiAnalysisRecordUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutCreatorInput, AiAnalysisRecordUncheckedCreateWithoutCreatorInput> | AiAnalysisRecordCreateWithoutCreatorInput[] | AiAnalysisRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutCreatorInput | AiAnalysisRecordCreateOrConnectWithoutCreatorInput[]
    upsert?: AiAnalysisRecordUpsertWithWhereUniqueWithoutCreatorInput | AiAnalysisRecordUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: AiAnalysisRecordCreateManyCreatorInputEnvelope
    set?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    disconnect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    delete?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    update?: AiAnalysisRecordUpdateWithWhereUniqueWithoutCreatorInput | AiAnalysisRecordUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: AiAnalysisRecordUpdateManyWithWhereWithoutCreatorInput | AiAnalysisRecordUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: AiAnalysisRecordScalarWhereInput | AiAnalysisRecordScalarWhereInput[]
  }

  export type UserCustomFieldConfigUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutUserInput, UserCustomFieldConfigUncheckedCreateWithoutUserInput> | UserCustomFieldConfigCreateWithoutUserInput[] | UserCustomFieldConfigUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutUserInput | UserCustomFieldConfigCreateOrConnectWithoutUserInput[]
    upsert?: UserCustomFieldConfigUpsertWithWhereUniqueWithoutUserInput | UserCustomFieldConfigUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserCustomFieldConfigCreateManyUserInputEnvelope
    set?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    disconnect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    delete?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    update?: UserCustomFieldConfigUpdateWithWhereUniqueWithoutUserInput | UserCustomFieldConfigUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserCustomFieldConfigUpdateManyWithWhereWithoutUserInput | UserCustomFieldConfigUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserCustomFieldConfigScalarWhereInput | UserCustomFieldConfigScalarWhereInput[]
  }

  export type OperationLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<OperationLogCreateWithoutUserInput, OperationLogUncheckedCreateWithoutUserInput> | OperationLogCreateWithoutUserInput[] | OperationLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OperationLogCreateOrConnectWithoutUserInput | OperationLogCreateOrConnectWithoutUserInput[]
    upsert?: OperationLogUpsertWithWhereUniqueWithoutUserInput | OperationLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OperationLogCreateManyUserInputEnvelope
    set?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    disconnect?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    delete?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    connect?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    update?: OperationLogUpdateWithWhereUniqueWithoutUserInput | OperationLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OperationLogUpdateManyWithWhereWithoutUserInput | OperationLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OperationLogScalarWhereInput | OperationLogScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DepartmentUncheckedUpdateManyWithoutManagerNestedInput = {
    create?: XOR<DepartmentCreateWithoutManagerInput, DepartmentUncheckedCreateWithoutManagerInput> | DepartmentCreateWithoutManagerInput[] | DepartmentUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutManagerInput | DepartmentCreateOrConnectWithoutManagerInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutManagerInput | DepartmentUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: DepartmentCreateManyManagerInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutManagerInput | DepartmentUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutManagerInput | DepartmentUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type InquiryUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<InquiryCreateWithoutCreatorInput, InquiryUncheckedCreateWithoutCreatorInput> | InquiryCreateWithoutCreatorInput[] | InquiryUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutCreatorInput | InquiryCreateOrConnectWithoutCreatorInput[]
    upsert?: InquiryUpsertWithWhereUniqueWithoutCreatorInput | InquiryUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: InquiryCreateManyCreatorInputEnvelope
    set?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    disconnect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    delete?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    update?: InquiryUpdateWithWhereUniqueWithoutCreatorInput | InquiryUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: InquiryUpdateManyWithWhereWithoutCreatorInput | InquiryUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
  }

  export type InquiryUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<InquiryCreateWithoutAssigneeInput, InquiryUncheckedCreateWithoutAssigneeInput> | InquiryCreateWithoutAssigneeInput[] | InquiryUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutAssigneeInput | InquiryCreateOrConnectWithoutAssigneeInput[]
    upsert?: InquiryUpsertWithWhereUniqueWithoutAssigneeInput | InquiryUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: InquiryCreateManyAssigneeInputEnvelope
    set?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    disconnect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    delete?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    update?: InquiryUpdateWithWhereUniqueWithoutAssigneeInput | InquiryUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: InquiryUpdateManyWithWhereWithoutAssigneeInput | InquiryUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
  }

  export type FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FollowUpRecordCreateWithoutCreatorInput, FollowUpRecordUncheckedCreateWithoutCreatorInput> | FollowUpRecordCreateWithoutCreatorInput[] | FollowUpRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutCreatorInput | FollowUpRecordCreateOrConnectWithoutCreatorInput[]
    upsert?: FollowUpRecordUpsertWithWhereUniqueWithoutCreatorInput | FollowUpRecordUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FollowUpRecordCreateManyCreatorInputEnvelope
    set?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    disconnect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    delete?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    update?: FollowUpRecordUpdateWithWhereUniqueWithoutCreatorInput | FollowUpRecordUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FollowUpRecordUpdateManyWithWhereWithoutCreatorInput | FollowUpRecordUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FollowUpRecordScalarWhereInput | FollowUpRecordScalarWhereInput[]
  }

  export type AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutCreatorInput, AiAnalysisRecordUncheckedCreateWithoutCreatorInput> | AiAnalysisRecordCreateWithoutCreatorInput[] | AiAnalysisRecordUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutCreatorInput | AiAnalysisRecordCreateOrConnectWithoutCreatorInput[]
    upsert?: AiAnalysisRecordUpsertWithWhereUniqueWithoutCreatorInput | AiAnalysisRecordUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: AiAnalysisRecordCreateManyCreatorInputEnvelope
    set?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    disconnect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    delete?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    update?: AiAnalysisRecordUpdateWithWhereUniqueWithoutCreatorInput | AiAnalysisRecordUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: AiAnalysisRecordUpdateManyWithWhereWithoutCreatorInput | AiAnalysisRecordUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: AiAnalysisRecordScalarWhereInput | AiAnalysisRecordScalarWhereInput[]
  }

  export type UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutUserInput, UserCustomFieldConfigUncheckedCreateWithoutUserInput> | UserCustomFieldConfigCreateWithoutUserInput[] | UserCustomFieldConfigUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutUserInput | UserCustomFieldConfigCreateOrConnectWithoutUserInput[]
    upsert?: UserCustomFieldConfigUpsertWithWhereUniqueWithoutUserInput | UserCustomFieldConfigUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserCustomFieldConfigCreateManyUserInputEnvelope
    set?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    disconnect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    delete?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    update?: UserCustomFieldConfigUpdateWithWhereUniqueWithoutUserInput | UserCustomFieldConfigUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserCustomFieldConfigUpdateManyWithWhereWithoutUserInput | UserCustomFieldConfigUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserCustomFieldConfigScalarWhereInput | UserCustomFieldConfigScalarWhereInput[]
  }

  export type OperationLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OperationLogCreateWithoutUserInput, OperationLogUncheckedCreateWithoutUserInput> | OperationLogCreateWithoutUserInput[] | OperationLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OperationLogCreateOrConnectWithoutUserInput | OperationLogCreateOrConnectWithoutUserInput[]
    upsert?: OperationLogUpsertWithWhereUniqueWithoutUserInput | OperationLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OperationLogCreateManyUserInputEnvelope
    set?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    disconnect?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    delete?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    connect?: OperationLogWhereUniqueInput | OperationLogWhereUniqueInput[]
    update?: OperationLogUpdateWithWhereUniqueWithoutUserInput | OperationLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OperationLogUpdateManyWithWhereWithoutUserInput | OperationLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OperationLogScalarWhereInput | OperationLogScalarWhereInput[]
  }

  export type DepartmentCreateNestedOneWithoutChildrenInput = {
    create?: XOR<DepartmentCreateWithoutChildrenInput, DepartmentUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutChildrenInput
    connect?: DepartmentWhereUniqueInput
  }

  export type DepartmentCreateNestedManyWithoutParentInput = {
    create?: XOR<DepartmentCreateWithoutParentInput, DepartmentUncheckedCreateWithoutParentInput> | DepartmentCreateWithoutParentInput[] | DepartmentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutParentInput | DepartmentCreateOrConnectWithoutParentInput[]
    createMany?: DepartmentCreateManyParentInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutManagedDepartmentsInput = {
    create?: XOR<UserCreateWithoutManagedDepartmentsInput, UserUncheckedCreateWithoutManagedDepartmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedDepartmentsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type InquiryCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<InquiryCreateWithoutDepartmentInput, InquiryUncheckedCreateWithoutDepartmentInput> | InquiryCreateWithoutDepartmentInput[] | InquiryUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutDepartmentInput | InquiryCreateOrConnectWithoutDepartmentInput[]
    createMany?: InquiryCreateManyDepartmentInputEnvelope
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
  }

  export type DepartmentUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<DepartmentCreateWithoutParentInput, DepartmentUncheckedCreateWithoutParentInput> | DepartmentCreateWithoutParentInput[] | DepartmentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutParentInput | DepartmentCreateOrConnectWithoutParentInput[]
    createMany?: DepartmentCreateManyParentInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type InquiryUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<InquiryCreateWithoutDepartmentInput, InquiryUncheckedCreateWithoutDepartmentInput> | InquiryCreateWithoutDepartmentInput[] | InquiryUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutDepartmentInput | InquiryCreateOrConnectWithoutDepartmentInput[]
    createMany?: InquiryCreateManyDepartmentInputEnvelope
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
  }

  export type EnumDepartmentStatusFieldUpdateOperationsInput = {
    set?: $Enums.DepartmentStatus
  }

  export type DepartmentUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<DepartmentCreateWithoutChildrenInput, DepartmentUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutChildrenInput
    upsert?: DepartmentUpsertWithoutChildrenInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutChildrenInput, DepartmentUpdateWithoutChildrenInput>, DepartmentUncheckedUpdateWithoutChildrenInput>
  }

  export type DepartmentUpdateManyWithoutParentNestedInput = {
    create?: XOR<DepartmentCreateWithoutParentInput, DepartmentUncheckedCreateWithoutParentInput> | DepartmentCreateWithoutParentInput[] | DepartmentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutParentInput | DepartmentCreateOrConnectWithoutParentInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutParentInput | DepartmentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: DepartmentCreateManyParentInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutParentInput | DepartmentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutParentInput | DepartmentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type UserUpdateOneWithoutManagedDepartmentsNestedInput = {
    create?: XOR<UserCreateWithoutManagedDepartmentsInput, UserUncheckedCreateWithoutManagedDepartmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedDepartmentsInput
    upsert?: UserUpsertWithoutManagedDepartmentsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutManagedDepartmentsInput, UserUpdateWithoutManagedDepartmentsInput>, UserUncheckedUpdateWithoutManagedDepartmentsInput>
  }

  export type UserUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDepartmentInput | UserUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDepartmentInput | UserUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDepartmentInput | UserUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type InquiryUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<InquiryCreateWithoutDepartmentInput, InquiryUncheckedCreateWithoutDepartmentInput> | InquiryCreateWithoutDepartmentInput[] | InquiryUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutDepartmentInput | InquiryCreateOrConnectWithoutDepartmentInput[]
    upsert?: InquiryUpsertWithWhereUniqueWithoutDepartmentInput | InquiryUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: InquiryCreateManyDepartmentInputEnvelope
    set?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    disconnect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    delete?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    update?: InquiryUpdateWithWhereUniqueWithoutDepartmentInput | InquiryUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: InquiryUpdateManyWithWhereWithoutDepartmentInput | InquiryUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
  }

  export type DepartmentUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<DepartmentCreateWithoutParentInput, DepartmentUncheckedCreateWithoutParentInput> | DepartmentCreateWithoutParentInput[] | DepartmentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutParentInput | DepartmentCreateOrConnectWithoutParentInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutParentInput | DepartmentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: DepartmentCreateManyParentInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutParentInput | DepartmentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutParentInput | DepartmentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput> | UserCreateWithoutDepartmentInput[] | UserUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDepartmentInput | UserCreateOrConnectWithoutDepartmentInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDepartmentInput | UserUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: UserCreateManyDepartmentInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDepartmentInput | UserUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDepartmentInput | UserUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type InquiryUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<InquiryCreateWithoutDepartmentInput, InquiryUncheckedCreateWithoutDepartmentInput> | InquiryCreateWithoutDepartmentInput[] | InquiryUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: InquiryCreateOrConnectWithoutDepartmentInput | InquiryCreateOrConnectWithoutDepartmentInput[]
    upsert?: InquiryUpsertWithWhereUniqueWithoutDepartmentInput | InquiryUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: InquiryCreateManyDepartmentInputEnvelope
    set?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    disconnect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    delete?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    connect?: InquiryWhereUniqueInput | InquiryWhereUniqueInput[]
    update?: InquiryUpdateWithWhereUniqueWithoutDepartmentInput | InquiryUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: InquiryUpdateManyWithWhereWithoutDepartmentInput | InquiryUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAssignedInquiriesInput = {
    create?: XOR<UserCreateWithoutAssignedInquiriesInput, UserUncheckedCreateWithoutAssignedInquiriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedInquiriesInput
    connect?: UserWhereUniqueInput
  }

  export type DepartmentCreateNestedOneWithoutInquiriesInput = {
    create?: XOR<DepartmentCreateWithoutInquiriesInput, DepartmentUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutInquiriesInput
    connect?: DepartmentWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedInquiriesInput = {
    create?: XOR<UserCreateWithoutCreatedInquiriesInput, UserUncheckedCreateWithoutCreatedInquiriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedInquiriesInput
    connect?: UserWhereUniqueInput
  }

  export type FollowUpRecordCreateNestedManyWithoutInquiryInput = {
    create?: XOR<FollowUpRecordCreateWithoutInquiryInput, FollowUpRecordUncheckedCreateWithoutInquiryInput> | FollowUpRecordCreateWithoutInquiryInput[] | FollowUpRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutInquiryInput | FollowUpRecordCreateOrConnectWithoutInquiryInput[]
    createMany?: FollowUpRecordCreateManyInquiryInputEnvelope
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
  }

  export type AiAnalysisRecordCreateNestedManyWithoutInquiryInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutInquiryInput, AiAnalysisRecordUncheckedCreateWithoutInquiryInput> | AiAnalysisRecordCreateWithoutInquiryInput[] | AiAnalysisRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutInquiryInput | AiAnalysisRecordCreateOrConnectWithoutInquiryInput[]
    createMany?: AiAnalysisRecordCreateManyInquiryInputEnvelope
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
  }

  export type FollowUpRecordUncheckedCreateNestedManyWithoutInquiryInput = {
    create?: XOR<FollowUpRecordCreateWithoutInquiryInput, FollowUpRecordUncheckedCreateWithoutInquiryInput> | FollowUpRecordCreateWithoutInquiryInput[] | FollowUpRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutInquiryInput | FollowUpRecordCreateOrConnectWithoutInquiryInput[]
    createMany?: FollowUpRecordCreateManyInquiryInputEnvelope
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
  }

  export type AiAnalysisRecordUncheckedCreateNestedManyWithoutInquiryInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutInquiryInput, AiAnalysisRecordUncheckedCreateWithoutInquiryInput> | AiAnalysisRecordCreateWithoutInquiryInput[] | AiAnalysisRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutInquiryInput | AiAnalysisRecordCreateOrConnectWithoutInquiryInput[]
    createMany?: AiAnalysisRecordCreateManyInquiryInputEnvelope
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
  }

  export type EnumCustomerTypeFieldUpdateOperationsInput = {
    set?: $Enums.CustomerType
  }

  export type EnumPriorityFieldUpdateOperationsInput = {
    set?: $Enums.Priority
  }

  export type EnumInquiryStatusFieldUpdateOperationsInput = {
    set?: $Enums.InquiryStatus
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type UserUpdateOneWithoutAssignedInquiriesNestedInput = {
    create?: XOR<UserCreateWithoutAssignedInquiriesInput, UserUncheckedCreateWithoutAssignedInquiriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedInquiriesInput
    upsert?: UserUpsertWithoutAssignedInquiriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAssignedInquiriesInput, UserUpdateWithoutAssignedInquiriesInput>, UserUncheckedUpdateWithoutAssignedInquiriesInput>
  }

  export type DepartmentUpdateOneWithoutInquiriesNestedInput = {
    create?: XOR<DepartmentCreateWithoutInquiriesInput, DepartmentUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutInquiriesInput
    upsert?: DepartmentUpsertWithoutInquiriesInput
    disconnect?: DepartmentWhereInput | boolean
    delete?: DepartmentWhereInput | boolean
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutInquiriesInput, DepartmentUpdateWithoutInquiriesInput>, DepartmentUncheckedUpdateWithoutInquiriesInput>
  }

  export type UserUpdateOneRequiredWithoutCreatedInquiriesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedInquiriesInput, UserUncheckedCreateWithoutCreatedInquiriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedInquiriesInput
    upsert?: UserUpsertWithoutCreatedInquiriesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedInquiriesInput, UserUpdateWithoutCreatedInquiriesInput>, UserUncheckedUpdateWithoutCreatedInquiriesInput>
  }

  export type FollowUpRecordUpdateManyWithoutInquiryNestedInput = {
    create?: XOR<FollowUpRecordCreateWithoutInquiryInput, FollowUpRecordUncheckedCreateWithoutInquiryInput> | FollowUpRecordCreateWithoutInquiryInput[] | FollowUpRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutInquiryInput | FollowUpRecordCreateOrConnectWithoutInquiryInput[]
    upsert?: FollowUpRecordUpsertWithWhereUniqueWithoutInquiryInput | FollowUpRecordUpsertWithWhereUniqueWithoutInquiryInput[]
    createMany?: FollowUpRecordCreateManyInquiryInputEnvelope
    set?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    disconnect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    delete?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    update?: FollowUpRecordUpdateWithWhereUniqueWithoutInquiryInput | FollowUpRecordUpdateWithWhereUniqueWithoutInquiryInput[]
    updateMany?: FollowUpRecordUpdateManyWithWhereWithoutInquiryInput | FollowUpRecordUpdateManyWithWhereWithoutInquiryInput[]
    deleteMany?: FollowUpRecordScalarWhereInput | FollowUpRecordScalarWhereInput[]
  }

  export type AiAnalysisRecordUpdateManyWithoutInquiryNestedInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutInquiryInput, AiAnalysisRecordUncheckedCreateWithoutInquiryInput> | AiAnalysisRecordCreateWithoutInquiryInput[] | AiAnalysisRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutInquiryInput | AiAnalysisRecordCreateOrConnectWithoutInquiryInput[]
    upsert?: AiAnalysisRecordUpsertWithWhereUniqueWithoutInquiryInput | AiAnalysisRecordUpsertWithWhereUniqueWithoutInquiryInput[]
    createMany?: AiAnalysisRecordCreateManyInquiryInputEnvelope
    set?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    disconnect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    delete?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    update?: AiAnalysisRecordUpdateWithWhereUniqueWithoutInquiryInput | AiAnalysisRecordUpdateWithWhereUniqueWithoutInquiryInput[]
    updateMany?: AiAnalysisRecordUpdateManyWithWhereWithoutInquiryInput | AiAnalysisRecordUpdateManyWithWhereWithoutInquiryInput[]
    deleteMany?: AiAnalysisRecordScalarWhereInput | AiAnalysisRecordScalarWhereInput[]
  }

  export type FollowUpRecordUncheckedUpdateManyWithoutInquiryNestedInput = {
    create?: XOR<FollowUpRecordCreateWithoutInquiryInput, FollowUpRecordUncheckedCreateWithoutInquiryInput> | FollowUpRecordCreateWithoutInquiryInput[] | FollowUpRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: FollowUpRecordCreateOrConnectWithoutInquiryInput | FollowUpRecordCreateOrConnectWithoutInquiryInput[]
    upsert?: FollowUpRecordUpsertWithWhereUniqueWithoutInquiryInput | FollowUpRecordUpsertWithWhereUniqueWithoutInquiryInput[]
    createMany?: FollowUpRecordCreateManyInquiryInputEnvelope
    set?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    disconnect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    delete?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    connect?: FollowUpRecordWhereUniqueInput | FollowUpRecordWhereUniqueInput[]
    update?: FollowUpRecordUpdateWithWhereUniqueWithoutInquiryInput | FollowUpRecordUpdateWithWhereUniqueWithoutInquiryInput[]
    updateMany?: FollowUpRecordUpdateManyWithWhereWithoutInquiryInput | FollowUpRecordUpdateManyWithWhereWithoutInquiryInput[]
    deleteMany?: FollowUpRecordScalarWhereInput | FollowUpRecordScalarWhereInput[]
  }

  export type AiAnalysisRecordUncheckedUpdateManyWithoutInquiryNestedInput = {
    create?: XOR<AiAnalysisRecordCreateWithoutInquiryInput, AiAnalysisRecordUncheckedCreateWithoutInquiryInput> | AiAnalysisRecordCreateWithoutInquiryInput[] | AiAnalysisRecordUncheckedCreateWithoutInquiryInput[]
    connectOrCreate?: AiAnalysisRecordCreateOrConnectWithoutInquiryInput | AiAnalysisRecordCreateOrConnectWithoutInquiryInput[]
    upsert?: AiAnalysisRecordUpsertWithWhereUniqueWithoutInquiryInput | AiAnalysisRecordUpsertWithWhereUniqueWithoutInquiryInput[]
    createMany?: AiAnalysisRecordCreateManyInquiryInputEnvelope
    set?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    disconnect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    delete?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    connect?: AiAnalysisRecordWhereUniqueInput | AiAnalysisRecordWhereUniqueInput[]
    update?: AiAnalysisRecordUpdateWithWhereUniqueWithoutInquiryInput | AiAnalysisRecordUpdateWithWhereUniqueWithoutInquiryInput[]
    updateMany?: AiAnalysisRecordUpdateManyWithWhereWithoutInquiryInput | AiAnalysisRecordUpdateManyWithWhereWithoutInquiryInput[]
    deleteMany?: AiAnalysisRecordScalarWhereInput | AiAnalysisRecordScalarWhereInput[]
  }

  export type UserCustomFieldConfigCreateNestedManyWithoutFieldInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutFieldInput, UserCustomFieldConfigUncheckedCreateWithoutFieldInput> | UserCustomFieldConfigCreateWithoutFieldInput[] | UserCustomFieldConfigUncheckedCreateWithoutFieldInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutFieldInput | UserCustomFieldConfigCreateOrConnectWithoutFieldInput[]
    createMany?: UserCustomFieldConfigCreateManyFieldInputEnvelope
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
  }

  export type UserCustomFieldConfigUncheckedCreateNestedManyWithoutFieldInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutFieldInput, UserCustomFieldConfigUncheckedCreateWithoutFieldInput> | UserCustomFieldConfigCreateWithoutFieldInput[] | UserCustomFieldConfigUncheckedCreateWithoutFieldInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutFieldInput | UserCustomFieldConfigCreateOrConnectWithoutFieldInput[]
    createMany?: UserCustomFieldConfigCreateManyFieldInputEnvelope
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
  }

  export type EnumCustomFieldTypeFieldUpdateOperationsInput = {
    set?: $Enums.CustomFieldType
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumCustomFieldStatusFieldUpdateOperationsInput = {
    set?: $Enums.CustomFieldStatus
  }

  export type UserCustomFieldConfigUpdateManyWithoutFieldNestedInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutFieldInput, UserCustomFieldConfigUncheckedCreateWithoutFieldInput> | UserCustomFieldConfigCreateWithoutFieldInput[] | UserCustomFieldConfigUncheckedCreateWithoutFieldInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutFieldInput | UserCustomFieldConfigCreateOrConnectWithoutFieldInput[]
    upsert?: UserCustomFieldConfigUpsertWithWhereUniqueWithoutFieldInput | UserCustomFieldConfigUpsertWithWhereUniqueWithoutFieldInput[]
    createMany?: UserCustomFieldConfigCreateManyFieldInputEnvelope
    set?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    disconnect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    delete?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    update?: UserCustomFieldConfigUpdateWithWhereUniqueWithoutFieldInput | UserCustomFieldConfigUpdateWithWhereUniqueWithoutFieldInput[]
    updateMany?: UserCustomFieldConfigUpdateManyWithWhereWithoutFieldInput | UserCustomFieldConfigUpdateManyWithWhereWithoutFieldInput[]
    deleteMany?: UserCustomFieldConfigScalarWhereInput | UserCustomFieldConfigScalarWhereInput[]
  }

  export type UserCustomFieldConfigUncheckedUpdateManyWithoutFieldNestedInput = {
    create?: XOR<UserCustomFieldConfigCreateWithoutFieldInput, UserCustomFieldConfigUncheckedCreateWithoutFieldInput> | UserCustomFieldConfigCreateWithoutFieldInput[] | UserCustomFieldConfigUncheckedCreateWithoutFieldInput[]
    connectOrCreate?: UserCustomFieldConfigCreateOrConnectWithoutFieldInput | UserCustomFieldConfigCreateOrConnectWithoutFieldInput[]
    upsert?: UserCustomFieldConfigUpsertWithWhereUniqueWithoutFieldInput | UserCustomFieldConfigUpsertWithWhereUniqueWithoutFieldInput[]
    createMany?: UserCustomFieldConfigCreateManyFieldInputEnvelope
    set?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    disconnect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    delete?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    connect?: UserCustomFieldConfigWhereUniqueInput | UserCustomFieldConfigWhereUniqueInput[]
    update?: UserCustomFieldConfigUpdateWithWhereUniqueWithoutFieldInput | UserCustomFieldConfigUpdateWithWhereUniqueWithoutFieldInput[]
    updateMany?: UserCustomFieldConfigUpdateManyWithWhereWithoutFieldInput | UserCustomFieldConfigUpdateManyWithWhereWithoutFieldInput[]
    deleteMany?: UserCustomFieldConfigScalarWhereInput | UserCustomFieldConfigScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCustomFieldConfigsInput = {
    create?: XOR<UserCreateWithoutCustomFieldConfigsInput, UserUncheckedCreateWithoutCustomFieldConfigsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomFieldConfigsInput
    connect?: UserWhereUniqueInput
  }

  export type CustomFieldDefinitionCreateNestedOneWithoutUserConfigsInput = {
    create?: XOR<CustomFieldDefinitionCreateWithoutUserConfigsInput, CustomFieldDefinitionUncheckedCreateWithoutUserConfigsInput>
    connectOrCreate?: CustomFieldDefinitionCreateOrConnectWithoutUserConfigsInput
    connect?: CustomFieldDefinitionWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCustomFieldConfigsNestedInput = {
    create?: XOR<UserCreateWithoutCustomFieldConfigsInput, UserUncheckedCreateWithoutCustomFieldConfigsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomFieldConfigsInput
    upsert?: UserUpsertWithoutCustomFieldConfigsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomFieldConfigsInput, UserUpdateWithoutCustomFieldConfigsInput>, UserUncheckedUpdateWithoutCustomFieldConfigsInput>
  }

  export type CustomFieldDefinitionUpdateOneRequiredWithoutUserConfigsNestedInput = {
    create?: XOR<CustomFieldDefinitionCreateWithoutUserConfigsInput, CustomFieldDefinitionUncheckedCreateWithoutUserConfigsInput>
    connectOrCreate?: CustomFieldDefinitionCreateOrConnectWithoutUserConfigsInput
    upsert?: CustomFieldDefinitionUpsertWithoutUserConfigsInput
    connect?: CustomFieldDefinitionWhereUniqueInput
    update?: XOR<XOR<CustomFieldDefinitionUpdateToOneWithWhereWithoutUserConfigsInput, CustomFieldDefinitionUpdateWithoutUserConfigsInput>, CustomFieldDefinitionUncheckedUpdateWithoutUserConfigsInput>
  }

  export type InquiryCreateNestedOneWithoutFollowUpRecordsInput = {
    create?: XOR<InquiryCreateWithoutFollowUpRecordsInput, InquiryUncheckedCreateWithoutFollowUpRecordsInput>
    connectOrCreate?: InquiryCreateOrConnectWithoutFollowUpRecordsInput
    connect?: InquiryWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFollowUpRecordsInput = {
    create?: XOR<UserCreateWithoutFollowUpRecordsInput, UserUncheckedCreateWithoutFollowUpRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFollowUpRecordsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumFollowUpTypeFieldUpdateOperationsInput = {
    set?: $Enums.FollowUpType
  }

  export type NullableEnumFollowUpResultFieldUpdateOperationsInput = {
    set?: $Enums.FollowUpResult | null
  }

  export type InquiryUpdateOneRequiredWithoutFollowUpRecordsNestedInput = {
    create?: XOR<InquiryCreateWithoutFollowUpRecordsInput, InquiryUncheckedCreateWithoutFollowUpRecordsInput>
    connectOrCreate?: InquiryCreateOrConnectWithoutFollowUpRecordsInput
    upsert?: InquiryUpsertWithoutFollowUpRecordsInput
    connect?: InquiryWhereUniqueInput
    update?: XOR<XOR<InquiryUpdateToOneWithWhereWithoutFollowUpRecordsInput, InquiryUpdateWithoutFollowUpRecordsInput>, InquiryUncheckedUpdateWithoutFollowUpRecordsInput>
  }

  export type UserUpdateOneRequiredWithoutFollowUpRecordsNestedInput = {
    create?: XOR<UserCreateWithoutFollowUpRecordsInput, UserUncheckedCreateWithoutFollowUpRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFollowUpRecordsInput
    upsert?: UserUpsertWithoutFollowUpRecordsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFollowUpRecordsInput, UserUpdateWithoutFollowUpRecordsInput>, UserUncheckedUpdateWithoutFollowUpRecordsInput>
  }

  export type InquiryCreateNestedOneWithoutAiAnalysisRecordsInput = {
    create?: XOR<InquiryCreateWithoutAiAnalysisRecordsInput, InquiryUncheckedCreateWithoutAiAnalysisRecordsInput>
    connectOrCreate?: InquiryCreateOrConnectWithoutAiAnalysisRecordsInput
    connect?: InquiryWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAiAnalysisRecordsInput = {
    create?: XOR<UserCreateWithoutAiAnalysisRecordsInput, UserUncheckedCreateWithoutAiAnalysisRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiAnalysisRecordsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAiProviderFieldUpdateOperationsInput = {
    set?: $Enums.AiProvider
  }

  export type EnumAnalysisTypeFieldUpdateOperationsInput = {
    set?: $Enums.AnalysisType
  }

  export type EnumAnalysisStatusFieldUpdateOperationsInput = {
    set?: $Enums.AnalysisStatus
  }

  export type InquiryUpdateOneRequiredWithoutAiAnalysisRecordsNestedInput = {
    create?: XOR<InquiryCreateWithoutAiAnalysisRecordsInput, InquiryUncheckedCreateWithoutAiAnalysisRecordsInput>
    connectOrCreate?: InquiryCreateOrConnectWithoutAiAnalysisRecordsInput
    upsert?: InquiryUpsertWithoutAiAnalysisRecordsInput
    connect?: InquiryWhereUniqueInput
    update?: XOR<XOR<InquiryUpdateToOneWithWhereWithoutAiAnalysisRecordsInput, InquiryUpdateWithoutAiAnalysisRecordsInput>, InquiryUncheckedUpdateWithoutAiAnalysisRecordsInput>
  }

  export type UserUpdateOneRequiredWithoutAiAnalysisRecordsNestedInput = {
    create?: XOR<UserCreateWithoutAiAnalysisRecordsInput, UserUncheckedCreateWithoutAiAnalysisRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiAnalysisRecordsInput
    upsert?: UserUpsertWithoutAiAnalysisRecordsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAiAnalysisRecordsInput, UserUpdateWithoutAiAnalysisRecordsInput>, UserUncheckedUpdateWithoutAiAnalysisRecordsInput>
  }

  export type EnumConfigTypeFieldUpdateOperationsInput = {
    set?: $Enums.ConfigType
  }

  export type UserCreateNestedOneWithoutOperationLogsInput = {
    create?: XOR<UserCreateWithoutOperationLogsInput, UserUncheckedCreateWithoutOperationLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOperationLogsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutOperationLogsNestedInput = {
    create?: XOR<UserCreateWithoutOperationLogsInput, UserUncheckedCreateWithoutOperationLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOperationLogsInput
    upsert?: UserUpsertWithoutOperationLogsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOperationLogsInput, UserUpdateWithoutOperationLogsInput>, UserUncheckedUpdateWithoutOperationLogsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumDepartmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DepartmentStatus | EnumDepartmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepartmentStatusFilter<$PrismaModel> | $Enums.DepartmentStatus
  }

  export type NestedEnumDepartmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DepartmentStatus | EnumDepartmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepartmentStatus[] | ListEnumDepartmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepartmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.DepartmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDepartmentStatusFilter<$PrismaModel>
    _max?: NestedEnumDepartmentStatusFilter<$PrismaModel>
  }

  export type NestedEnumCustomerTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeFilter<$PrismaModel> | $Enums.CustomerType
  }

  export type NestedEnumPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityFilter<$PrismaModel> | $Enums.Priority
  }

  export type NestedEnumInquiryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusFilter<$PrismaModel> | $Enums.InquiryStatus
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumCustomerTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomerType | EnumCustomerTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomerType[] | ListEnumCustomerTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomerTypeWithAggregatesFilter<$PrismaModel> | $Enums.CustomerType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomerTypeFilter<$PrismaModel>
    _max?: NestedEnumCustomerTypeFilter<$PrismaModel>
  }

  export type NestedEnumPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityWithAggregatesFilter<$PrismaModel> | $Enums.Priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriorityFilter<$PrismaModel>
    _max?: NestedEnumPriorityFilter<$PrismaModel>
  }

  export type NestedEnumInquiryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusWithAggregatesFilter<$PrismaModel> | $Enums.InquiryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInquiryStatusFilter<$PrismaModel>
    _max?: NestedEnumInquiryStatusFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumCustomFieldTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldType | EnumCustomFieldTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldTypeFilter<$PrismaModel> | $Enums.CustomFieldType
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumCustomFieldStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldStatus | EnumCustomFieldStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldStatusFilter<$PrismaModel> | $Enums.CustomFieldStatus
  }

  export type NestedEnumCustomFieldTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldType | EnumCustomFieldTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldType[] | ListEnumCustomFieldTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldTypeWithAggregatesFilter<$PrismaModel> | $Enums.CustomFieldType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomFieldTypeFilter<$PrismaModel>
    _max?: NestedEnumCustomFieldTypeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumCustomFieldStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CustomFieldStatus | EnumCustomFieldStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CustomFieldStatus[] | ListEnumCustomFieldStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCustomFieldStatusWithAggregatesFilter<$PrismaModel> | $Enums.CustomFieldStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCustomFieldStatusFilter<$PrismaModel>
    _max?: NestedEnumCustomFieldStatusFilter<$PrismaModel>
  }

  export type NestedEnumFollowUpTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpType | EnumFollowUpTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFollowUpTypeFilter<$PrismaModel> | $Enums.FollowUpType
  }

  export type NestedEnumFollowUpResultNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpResult | EnumFollowUpResultFieldRefInput<$PrismaModel> | null
    in?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFollowUpResultNullableFilter<$PrismaModel> | $Enums.FollowUpResult | null
  }

  export type NestedEnumFollowUpTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpType | EnumFollowUpTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FollowUpType[] | ListEnumFollowUpTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFollowUpTypeWithAggregatesFilter<$PrismaModel> | $Enums.FollowUpType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFollowUpTypeFilter<$PrismaModel>
    _max?: NestedEnumFollowUpTypeFilter<$PrismaModel>
  }

  export type NestedEnumFollowUpResultNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FollowUpResult | EnumFollowUpResultFieldRefInput<$PrismaModel> | null
    in?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FollowUpResult[] | ListEnumFollowUpResultFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFollowUpResultNullableWithAggregatesFilter<$PrismaModel> | $Enums.FollowUpResult | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFollowUpResultNullableFilter<$PrismaModel>
    _max?: NestedEnumFollowUpResultNullableFilter<$PrismaModel>
  }

  export type NestedEnumAiProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.AiProvider | EnumAiProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAiProviderFilter<$PrismaModel> | $Enums.AiProvider
  }

  export type NestedEnumAnalysisTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisType | EnumAnalysisTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisTypeFilter<$PrismaModel> | $Enums.AnalysisType
  }

  export type NestedEnumAnalysisStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisStatus | EnumAnalysisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisStatusFilter<$PrismaModel> | $Enums.AnalysisStatus
  }

  export type NestedEnumAiProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AiProvider | EnumAiProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AiProvider[] | ListEnumAiProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAiProviderWithAggregatesFilter<$PrismaModel> | $Enums.AiProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAiProviderFilter<$PrismaModel>
    _max?: NestedEnumAiProviderFilter<$PrismaModel>
  }

  export type NestedEnumAnalysisTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisType | EnumAnalysisTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisType[] | ListEnumAnalysisTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisTypeWithAggregatesFilter<$PrismaModel> | $Enums.AnalysisType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAnalysisTypeFilter<$PrismaModel>
    _max?: NestedEnumAnalysisTypeFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumAnalysisStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AnalysisStatus | EnumAnalysisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AnalysisStatus[] | ListEnumAnalysisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAnalysisStatusWithAggregatesFilter<$PrismaModel> | $Enums.AnalysisStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAnalysisStatusFilter<$PrismaModel>
    _max?: NestedEnumAnalysisStatusFilter<$PrismaModel>
  }

  export type NestedEnumConfigTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigType | EnumConfigTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTypeFilter<$PrismaModel> | $Enums.ConfigType
  }

  export type NestedEnumConfigTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConfigType | EnumConfigTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConfigType[] | ListEnumConfigTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConfigTypeWithAggregatesFilter<$PrismaModel> | $Enums.ConfigType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConfigTypeFilter<$PrismaModel>
    _max?: NestedEnumConfigTypeFilter<$PrismaModel>
  }

  export type DepartmentCreateWithoutUsersInput = {
    name: string
    description?: string | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: DepartmentCreateNestedOneWithoutChildrenInput
    children?: DepartmentCreateNestedManyWithoutParentInput
    manager?: UserCreateNestedOneWithoutManagedDepartmentsInput
    inquiries?: InquiryCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    managerId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: DepartmentUncheckedCreateNestedManyWithoutParentInput
    inquiries?: InquiryUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentCreateOrConnectWithoutUsersInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
  }

  export type DepartmentCreateWithoutManagerInput = {
    name: string
    description?: string | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: DepartmentCreateNestedOneWithoutChildrenInput
    children?: DepartmentCreateNestedManyWithoutParentInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateWithoutManagerInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: DepartmentUncheckedCreateNestedManyWithoutParentInput
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentCreateOrConnectWithoutManagerInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutManagerInput, DepartmentUncheckedCreateWithoutManagerInput>
  }

  export type DepartmentCreateManyManagerInputEnvelope = {
    data: DepartmentCreateManyManagerInput | DepartmentCreateManyManagerInput[]
    skipDuplicates?: boolean
  }

  export type InquiryCreateWithoutCreatorInput = {
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    assignee?: UserCreateNestedOneWithoutAssignedInquiriesInput
    department?: DepartmentCreateNestedOneWithoutInquiriesInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutInquiryInput
  }

  export type InquiryUncheckedCreateWithoutCreatorInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutInquiryInput
  }

  export type InquiryCreateOrConnectWithoutCreatorInput = {
    where: InquiryWhereUniqueInput
    create: XOR<InquiryCreateWithoutCreatorInput, InquiryUncheckedCreateWithoutCreatorInput>
  }

  export type InquiryCreateManyCreatorInputEnvelope = {
    data: InquiryCreateManyCreatorInput | InquiryCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type InquiryCreateWithoutAssigneeInput = {
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutInquiriesInput
    creator: UserCreateNestedOneWithoutCreatedInquiriesInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutInquiryInput
  }

  export type InquiryUncheckedCreateWithoutAssigneeInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutInquiryInput
  }

  export type InquiryCreateOrConnectWithoutAssigneeInput = {
    where: InquiryWhereUniqueInput
    create: XOR<InquiryCreateWithoutAssigneeInput, InquiryUncheckedCreateWithoutAssigneeInput>
  }

  export type InquiryCreateManyAssigneeInputEnvelope = {
    data: InquiryCreateManyAssigneeInput | InquiryCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type FollowUpRecordCreateWithoutCreatorInput = {
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    inquiry: InquiryCreateNestedOneWithoutFollowUpRecordsInput
  }

  export type FollowUpRecordUncheckedCreateWithoutCreatorInput = {
    id?: number
    inquiryId: number
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FollowUpRecordCreateOrConnectWithoutCreatorInput = {
    where: FollowUpRecordWhereUniqueInput
    create: XOR<FollowUpRecordCreateWithoutCreatorInput, FollowUpRecordUncheckedCreateWithoutCreatorInput>
  }

  export type FollowUpRecordCreateManyCreatorInputEnvelope = {
    data: FollowUpRecordCreateManyCreatorInput | FollowUpRecordCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type AiAnalysisRecordCreateWithoutCreatorInput = {
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdAt?: Date | string
    inquiry: InquiryCreateNestedOneWithoutAiAnalysisRecordsInput
  }

  export type AiAnalysisRecordUncheckedCreateWithoutCreatorInput = {
    id?: number
    inquiryId: number
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdAt?: Date | string
  }

  export type AiAnalysisRecordCreateOrConnectWithoutCreatorInput = {
    where: AiAnalysisRecordWhereUniqueInput
    create: XOR<AiAnalysisRecordCreateWithoutCreatorInput, AiAnalysisRecordUncheckedCreateWithoutCreatorInput>
  }

  export type AiAnalysisRecordCreateManyCreatorInputEnvelope = {
    data: AiAnalysisRecordCreateManyCreatorInput | AiAnalysisRecordCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type UserCustomFieldConfigCreateWithoutUserInput = {
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    field: CustomFieldDefinitionCreateNestedOneWithoutUserConfigsInput
  }

  export type UserCustomFieldConfigUncheckedCreateWithoutUserInput = {
    id?: number
    fieldId: number
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCustomFieldConfigCreateOrConnectWithoutUserInput = {
    where: UserCustomFieldConfigWhereUniqueInput
    create: XOR<UserCustomFieldConfigCreateWithoutUserInput, UserCustomFieldConfigUncheckedCreateWithoutUserInput>
  }

  export type UserCustomFieldConfigCreateManyUserInputEnvelope = {
    data: UserCustomFieldConfigCreateManyUserInput | UserCustomFieldConfigCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OperationLogCreateWithoutUserInput = {
    operationType: string
    resourceType: string
    resourceId?: number | null
    operationDescription?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type OperationLogUncheckedCreateWithoutUserInput = {
    id?: number
    operationType: string
    resourceType: string
    resourceId?: number | null
    operationDescription?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type OperationLogCreateOrConnectWithoutUserInput = {
    where: OperationLogWhereUniqueInput
    create: XOR<OperationLogCreateWithoutUserInput, OperationLogUncheckedCreateWithoutUserInput>
  }

  export type OperationLogCreateManyUserInputEnvelope = {
    data: OperationLogCreateManyUserInput | OperationLogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type DepartmentUpsertWithoutUsersInput = {
    update: XOR<DepartmentUpdateWithoutUsersInput, DepartmentUncheckedUpdateWithoutUsersInput>
    create: XOR<DepartmentCreateWithoutUsersInput, DepartmentUncheckedCreateWithoutUsersInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutUsersInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutUsersInput, DepartmentUncheckedUpdateWithoutUsersInput>
  }

  export type DepartmentUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: DepartmentUpdateOneWithoutChildrenNestedInput
    children?: DepartmentUpdateManyWithoutParentNestedInput
    manager?: UserUpdateOneWithoutManagedDepartmentsNestedInput
    inquiries?: InquiryUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    managerId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: DepartmentUncheckedUpdateManyWithoutParentNestedInput
    inquiries?: InquiryUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUpsertWithWhereUniqueWithoutManagerInput = {
    where: DepartmentWhereUniqueInput
    update: XOR<DepartmentUpdateWithoutManagerInput, DepartmentUncheckedUpdateWithoutManagerInput>
    create: XOR<DepartmentCreateWithoutManagerInput, DepartmentUncheckedCreateWithoutManagerInput>
  }

  export type DepartmentUpdateWithWhereUniqueWithoutManagerInput = {
    where: DepartmentWhereUniqueInput
    data: XOR<DepartmentUpdateWithoutManagerInput, DepartmentUncheckedUpdateWithoutManagerInput>
  }

  export type DepartmentUpdateManyWithWhereWithoutManagerInput = {
    where: DepartmentScalarWhereInput
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyWithoutManagerInput>
  }

  export type DepartmentScalarWhereInput = {
    AND?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
    OR?: DepartmentScalarWhereInput[]
    NOT?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
    id?: IntFilter<"Department"> | number
    name?: StringFilter<"Department"> | string
    description?: StringNullableFilter<"Department"> | string | null
    parentId?: IntNullableFilter<"Department"> | number | null
    managerId?: IntNullableFilter<"Department"> | number | null
    status?: EnumDepartmentStatusFilter<"Department"> | $Enums.DepartmentStatus
    createdAt?: DateTimeFilter<"Department"> | Date | string
    updatedAt?: DateTimeFilter<"Department"> | Date | string
  }

  export type InquiryUpsertWithWhereUniqueWithoutCreatorInput = {
    where: InquiryWhereUniqueInput
    update: XOR<InquiryUpdateWithoutCreatorInput, InquiryUncheckedUpdateWithoutCreatorInput>
    create: XOR<InquiryCreateWithoutCreatorInput, InquiryUncheckedCreateWithoutCreatorInput>
  }

  export type InquiryUpdateWithWhereUniqueWithoutCreatorInput = {
    where: InquiryWhereUniqueInput
    data: XOR<InquiryUpdateWithoutCreatorInput, InquiryUncheckedUpdateWithoutCreatorInput>
  }

  export type InquiryUpdateManyWithWhereWithoutCreatorInput = {
    where: InquiryScalarWhereInput
    data: XOR<InquiryUpdateManyMutationInput, InquiryUncheckedUpdateManyWithoutCreatorInput>
  }

  export type InquiryScalarWhereInput = {
    AND?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
    OR?: InquiryScalarWhereInput[]
    NOT?: InquiryScalarWhereInput | InquiryScalarWhereInput[]
    id?: IntFilter<"Inquiry"> | number
    inquiryNo?: StringFilter<"Inquiry"> | string
    title?: StringFilter<"Inquiry"> | string
    content?: StringFilter<"Inquiry"> | string
    sourceChannel?: StringFilter<"Inquiry"> | string
    customerName?: StringFilter<"Inquiry"> | string
    customerEmail?: StringNullableFilter<"Inquiry"> | string | null
    customerPhone?: StringNullableFilter<"Inquiry"> | string | null
    customerCompany?: StringNullableFilter<"Inquiry"> | string | null
    customerAddress?: StringNullableFilter<"Inquiry"> | string | null
    customerType?: EnumCustomerTypeFilter<"Inquiry"> | $Enums.CustomerType
    region?: StringNullableFilter<"Inquiry"> | string | null
    country?: StringNullableFilter<"Inquiry"> | string | null
    assignedTo?: IntNullableFilter<"Inquiry"> | number | null
    departmentId?: IntNullableFilter<"Inquiry"> | number | null
    priority?: EnumPriorityFilter<"Inquiry"> | $Enums.Priority
    status?: EnumInquiryStatusFilter<"Inquiry"> | $Enums.InquiryStatus
    estimatedValue?: DecimalNullableFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    currency?: StringNullableFilter<"Inquiry"> | string | null
    expectedCloseDate?: DateTimeNullableFilter<"Inquiry"> | Date | string | null
    aiAnalysisScore?: DecimalNullableFilter<"Inquiry"> | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: StringNullableFilter<"Inquiry"> | string | null
    tags?: JsonNullableFilter<"Inquiry">
    customFields?: JsonNullableFilter<"Inquiry">
    createdBy?: IntFilter<"Inquiry"> | number
    createdAt?: DateTimeFilter<"Inquiry"> | Date | string
    updatedAt?: DateTimeFilter<"Inquiry"> | Date | string
  }

  export type InquiryUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: InquiryWhereUniqueInput
    update: XOR<InquiryUpdateWithoutAssigneeInput, InquiryUncheckedUpdateWithoutAssigneeInput>
    create: XOR<InquiryCreateWithoutAssigneeInput, InquiryUncheckedCreateWithoutAssigneeInput>
  }

  export type InquiryUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: InquiryWhereUniqueInput
    data: XOR<InquiryUpdateWithoutAssigneeInput, InquiryUncheckedUpdateWithoutAssigneeInput>
  }

  export type InquiryUpdateManyWithWhereWithoutAssigneeInput = {
    where: InquiryScalarWhereInput
    data: XOR<InquiryUpdateManyMutationInput, InquiryUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type FollowUpRecordUpsertWithWhereUniqueWithoutCreatorInput = {
    where: FollowUpRecordWhereUniqueInput
    update: XOR<FollowUpRecordUpdateWithoutCreatorInput, FollowUpRecordUncheckedUpdateWithoutCreatorInput>
    create: XOR<FollowUpRecordCreateWithoutCreatorInput, FollowUpRecordUncheckedCreateWithoutCreatorInput>
  }

  export type FollowUpRecordUpdateWithWhereUniqueWithoutCreatorInput = {
    where: FollowUpRecordWhereUniqueInput
    data: XOR<FollowUpRecordUpdateWithoutCreatorInput, FollowUpRecordUncheckedUpdateWithoutCreatorInput>
  }

  export type FollowUpRecordUpdateManyWithWhereWithoutCreatorInput = {
    where: FollowUpRecordScalarWhereInput
    data: XOR<FollowUpRecordUpdateManyMutationInput, FollowUpRecordUncheckedUpdateManyWithoutCreatorInput>
  }

  export type FollowUpRecordScalarWhereInput = {
    AND?: FollowUpRecordScalarWhereInput | FollowUpRecordScalarWhereInput[]
    OR?: FollowUpRecordScalarWhereInput[]
    NOT?: FollowUpRecordScalarWhereInput | FollowUpRecordScalarWhereInput[]
    id?: IntFilter<"FollowUpRecord"> | number
    inquiryId?: IntFilter<"FollowUpRecord"> | number
    followUpType?: EnumFollowUpTypeFilter<"FollowUpRecord"> | $Enums.FollowUpType
    content?: StringFilter<"FollowUpRecord"> | string
    result?: EnumFollowUpResultNullableFilter<"FollowUpRecord"> | $Enums.FollowUpResult | null
    nextFollowUpDate?: DateTimeNullableFilter<"FollowUpRecord"> | Date | string | null
    attachments?: JsonNullableFilter<"FollowUpRecord">
    createdBy?: IntFilter<"FollowUpRecord"> | number
    createdAt?: DateTimeFilter<"FollowUpRecord"> | Date | string
    updatedAt?: DateTimeFilter<"FollowUpRecord"> | Date | string
  }

  export type AiAnalysisRecordUpsertWithWhereUniqueWithoutCreatorInput = {
    where: AiAnalysisRecordWhereUniqueInput
    update: XOR<AiAnalysisRecordUpdateWithoutCreatorInput, AiAnalysisRecordUncheckedUpdateWithoutCreatorInput>
    create: XOR<AiAnalysisRecordCreateWithoutCreatorInput, AiAnalysisRecordUncheckedCreateWithoutCreatorInput>
  }

  export type AiAnalysisRecordUpdateWithWhereUniqueWithoutCreatorInput = {
    where: AiAnalysisRecordWhereUniqueInput
    data: XOR<AiAnalysisRecordUpdateWithoutCreatorInput, AiAnalysisRecordUncheckedUpdateWithoutCreatorInput>
  }

  export type AiAnalysisRecordUpdateManyWithWhereWithoutCreatorInput = {
    where: AiAnalysisRecordScalarWhereInput
    data: XOR<AiAnalysisRecordUpdateManyMutationInput, AiAnalysisRecordUncheckedUpdateManyWithoutCreatorInput>
  }

  export type AiAnalysisRecordScalarWhereInput = {
    AND?: AiAnalysisRecordScalarWhereInput | AiAnalysisRecordScalarWhereInput[]
    OR?: AiAnalysisRecordScalarWhereInput[]
    NOT?: AiAnalysisRecordScalarWhereInput | AiAnalysisRecordScalarWhereInput[]
    id?: IntFilter<"AiAnalysisRecord"> | number
    inquiryId?: IntFilter<"AiAnalysisRecord"> | number
    aiProvider?: EnumAiProviderFilter<"AiAnalysisRecord"> | $Enums.AiProvider
    modelName?: StringFilter<"AiAnalysisRecord"> | string
    analysisType?: EnumAnalysisTypeFilter<"AiAnalysisRecord"> | $Enums.AnalysisType
    inputData?: JsonFilter<"AiAnalysisRecord">
    outputData?: JsonFilter<"AiAnalysisRecord">
    confidenceScore?: DecimalNullableFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: IntNullableFilter<"AiAnalysisRecord"> | number | null
    costAmount?: DecimalNullableFilter<"AiAnalysisRecord"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFilter<"AiAnalysisRecord"> | $Enums.AnalysisStatus
    errorMessage?: StringNullableFilter<"AiAnalysisRecord"> | string | null
    createdBy?: IntFilter<"AiAnalysisRecord"> | number
    createdAt?: DateTimeFilter<"AiAnalysisRecord"> | Date | string
  }

  export type UserCustomFieldConfigUpsertWithWhereUniqueWithoutUserInput = {
    where: UserCustomFieldConfigWhereUniqueInput
    update: XOR<UserCustomFieldConfigUpdateWithoutUserInput, UserCustomFieldConfigUncheckedUpdateWithoutUserInput>
    create: XOR<UserCustomFieldConfigCreateWithoutUserInput, UserCustomFieldConfigUncheckedCreateWithoutUserInput>
  }

  export type UserCustomFieldConfigUpdateWithWhereUniqueWithoutUserInput = {
    where: UserCustomFieldConfigWhereUniqueInput
    data: XOR<UserCustomFieldConfigUpdateWithoutUserInput, UserCustomFieldConfigUncheckedUpdateWithoutUserInput>
  }

  export type UserCustomFieldConfigUpdateManyWithWhereWithoutUserInput = {
    where: UserCustomFieldConfigScalarWhereInput
    data: XOR<UserCustomFieldConfigUpdateManyMutationInput, UserCustomFieldConfigUncheckedUpdateManyWithoutUserInput>
  }

  export type UserCustomFieldConfigScalarWhereInput = {
    AND?: UserCustomFieldConfigScalarWhereInput | UserCustomFieldConfigScalarWhereInput[]
    OR?: UserCustomFieldConfigScalarWhereInput[]
    NOT?: UserCustomFieldConfigScalarWhereInput | UserCustomFieldConfigScalarWhereInput[]
    id?: IntFilter<"UserCustomFieldConfig"> | number
    userId?: IntFilter<"UserCustomFieldConfig"> | number
    fieldId?: IntFilter<"UserCustomFieldConfig"> | number
    isVisible?: BoolFilter<"UserCustomFieldConfig"> | boolean
    displayOrder?: IntFilter<"UserCustomFieldConfig"> | number
    columnWidth?: IntNullableFilter<"UserCustomFieldConfig"> | number | null
    createdAt?: DateTimeFilter<"UserCustomFieldConfig"> | Date | string
    updatedAt?: DateTimeFilter<"UserCustomFieldConfig"> | Date | string
  }

  export type OperationLogUpsertWithWhereUniqueWithoutUserInput = {
    where: OperationLogWhereUniqueInput
    update: XOR<OperationLogUpdateWithoutUserInput, OperationLogUncheckedUpdateWithoutUserInput>
    create: XOR<OperationLogCreateWithoutUserInput, OperationLogUncheckedCreateWithoutUserInput>
  }

  export type OperationLogUpdateWithWhereUniqueWithoutUserInput = {
    where: OperationLogWhereUniqueInput
    data: XOR<OperationLogUpdateWithoutUserInput, OperationLogUncheckedUpdateWithoutUserInput>
  }

  export type OperationLogUpdateManyWithWhereWithoutUserInput = {
    where: OperationLogScalarWhereInput
    data: XOR<OperationLogUpdateManyMutationInput, OperationLogUncheckedUpdateManyWithoutUserInput>
  }

  export type OperationLogScalarWhereInput = {
    AND?: OperationLogScalarWhereInput | OperationLogScalarWhereInput[]
    OR?: OperationLogScalarWhereInput[]
    NOT?: OperationLogScalarWhereInput | OperationLogScalarWhereInput[]
    id?: IntFilter<"OperationLog"> | number
    userId?: IntNullableFilter<"OperationLog"> | number | null
    operationType?: StringFilter<"OperationLog"> | string
    resourceType?: StringFilter<"OperationLog"> | string
    resourceId?: IntNullableFilter<"OperationLog"> | number | null
    operationDescription?: StringNullableFilter<"OperationLog"> | string | null
    ipAddress?: StringNullableFilter<"OperationLog"> | string | null
    userAgent?: StringNullableFilter<"OperationLog"> | string | null
    requestData?: JsonNullableFilter<"OperationLog">
    responseData?: JsonNullableFilter<"OperationLog">
    createdAt?: DateTimeFilter<"OperationLog"> | Date | string
  }

  export type DepartmentCreateWithoutChildrenInput = {
    name: string
    description?: string | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: DepartmentCreateNestedOneWithoutChildrenInput
    manager?: UserCreateNestedOneWithoutManagedDepartmentsInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateWithoutChildrenInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    managerId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentCreateOrConnectWithoutChildrenInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutChildrenInput, DepartmentUncheckedCreateWithoutChildrenInput>
  }

  export type DepartmentCreateWithoutParentInput = {
    name: string
    description?: string | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: DepartmentCreateNestedManyWithoutParentInput
    manager?: UserCreateNestedOneWithoutManagedDepartmentsInput
    users?: UserCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateWithoutParentInput = {
    id?: number
    name: string
    description?: string | null
    managerId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: DepartmentUncheckedCreateNestedManyWithoutParentInput
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
    inquiries?: InquiryUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentCreateOrConnectWithoutParentInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutParentInput, DepartmentUncheckedCreateWithoutParentInput>
  }

  export type DepartmentCreateManyParentInputEnvelope = {
    data: DepartmentCreateManyParentInput | DepartmentCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutManagedDepartmentsInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutManagedDepartmentsInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutManagedDepartmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutManagedDepartmentsInput, UserUncheckedCreateWithoutManagedDepartmentsInput>
  }

  export type UserCreateWithoutDepartmentInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutDepartmentInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutDepartmentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput>
  }

  export type UserCreateManyDepartmentInputEnvelope = {
    data: UserCreateManyDepartmentInput | UserCreateManyDepartmentInput[]
    skipDuplicates?: boolean
  }

  export type InquiryCreateWithoutDepartmentInput = {
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    assignee?: UserCreateNestedOneWithoutAssignedInquiriesInput
    creator: UserCreateNestedOneWithoutCreatedInquiriesInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutInquiryInput
  }

  export type InquiryUncheckedCreateWithoutDepartmentInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutInquiryInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutInquiryInput
  }

  export type InquiryCreateOrConnectWithoutDepartmentInput = {
    where: InquiryWhereUniqueInput
    create: XOR<InquiryCreateWithoutDepartmentInput, InquiryUncheckedCreateWithoutDepartmentInput>
  }

  export type InquiryCreateManyDepartmentInputEnvelope = {
    data: InquiryCreateManyDepartmentInput | InquiryCreateManyDepartmentInput[]
    skipDuplicates?: boolean
  }

  export type DepartmentUpsertWithoutChildrenInput = {
    update: XOR<DepartmentUpdateWithoutChildrenInput, DepartmentUncheckedUpdateWithoutChildrenInput>
    create: XOR<DepartmentCreateWithoutChildrenInput, DepartmentUncheckedCreateWithoutChildrenInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutChildrenInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutChildrenInput, DepartmentUncheckedUpdateWithoutChildrenInput>
  }

  export type DepartmentUpdateWithoutChildrenInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: DepartmentUpdateOneWithoutChildrenNestedInput
    manager?: UserUpdateOneWithoutManagedDepartmentsNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutChildrenInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    managerId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUpsertWithWhereUniqueWithoutParentInput = {
    where: DepartmentWhereUniqueInput
    update: XOR<DepartmentUpdateWithoutParentInput, DepartmentUncheckedUpdateWithoutParentInput>
    create: XOR<DepartmentCreateWithoutParentInput, DepartmentUncheckedCreateWithoutParentInput>
  }

  export type DepartmentUpdateWithWhereUniqueWithoutParentInput = {
    where: DepartmentWhereUniqueInput
    data: XOR<DepartmentUpdateWithoutParentInput, DepartmentUncheckedUpdateWithoutParentInput>
  }

  export type DepartmentUpdateManyWithWhereWithoutParentInput = {
    where: DepartmentScalarWhereInput
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyWithoutParentInput>
  }

  export type UserUpsertWithoutManagedDepartmentsInput = {
    update: XOR<UserUpdateWithoutManagedDepartmentsInput, UserUncheckedUpdateWithoutManagedDepartmentsInput>
    create: XOR<UserCreateWithoutManagedDepartmentsInput, UserUncheckedCreateWithoutManagedDepartmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutManagedDepartmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutManagedDepartmentsInput, UserUncheckedUpdateWithoutManagedDepartmentsInput>
  }

  export type UserUpdateWithoutManagedDepartmentsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutManagedDepartmentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutDepartmentInput, UserUncheckedUpdateWithoutDepartmentInput>
    create: XOR<UserCreateWithoutDepartmentInput, UserUncheckedCreateWithoutDepartmentInput>
  }

  export type UserUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutDepartmentInput, UserUncheckedUpdateWithoutDepartmentInput>
  }

  export type UserUpdateManyWithWhereWithoutDepartmentInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    departmentId?: IntNullableFilter<"User"> | number | null
    phone?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type InquiryUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: InquiryWhereUniqueInput
    update: XOR<InquiryUpdateWithoutDepartmentInput, InquiryUncheckedUpdateWithoutDepartmentInput>
    create: XOR<InquiryCreateWithoutDepartmentInput, InquiryUncheckedCreateWithoutDepartmentInput>
  }

  export type InquiryUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: InquiryWhereUniqueInput
    data: XOR<InquiryUpdateWithoutDepartmentInput, InquiryUncheckedUpdateWithoutDepartmentInput>
  }

  export type InquiryUpdateManyWithWhereWithoutDepartmentInput = {
    where: InquiryScalarWhereInput
    data: XOR<InquiryUpdateManyMutationInput, InquiryUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type UserCreateWithoutAssignedInquiriesInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAssignedInquiriesInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAssignedInquiriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAssignedInquiriesInput, UserUncheckedCreateWithoutAssignedInquiriesInput>
  }

  export type DepartmentCreateWithoutInquiriesInput = {
    name: string
    description?: string | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: DepartmentCreateNestedOneWithoutChildrenInput
    children?: DepartmentCreateNestedManyWithoutParentInput
    manager?: UserCreateNestedOneWithoutManagedDepartmentsInput
    users?: UserCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateWithoutInquiriesInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    managerId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: DepartmentUncheckedCreateNestedManyWithoutParentInput
    users?: UserUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentCreateOrConnectWithoutInquiriesInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutInquiriesInput, DepartmentUncheckedCreateWithoutInquiriesInput>
  }

  export type UserCreateWithoutCreatedInquiriesInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCreatedInquiriesInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCreatedInquiriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedInquiriesInput, UserUncheckedCreateWithoutCreatedInquiriesInput>
  }

  export type FollowUpRecordCreateWithoutInquiryInput = {
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutFollowUpRecordsInput
  }

  export type FollowUpRecordUncheckedCreateWithoutInquiryInput = {
    id?: number
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FollowUpRecordCreateOrConnectWithoutInquiryInput = {
    where: FollowUpRecordWhereUniqueInput
    create: XOR<FollowUpRecordCreateWithoutInquiryInput, FollowUpRecordUncheckedCreateWithoutInquiryInput>
  }

  export type FollowUpRecordCreateManyInquiryInputEnvelope = {
    data: FollowUpRecordCreateManyInquiryInput | FollowUpRecordCreateManyInquiryInput[]
    skipDuplicates?: boolean
  }

  export type AiAnalysisRecordCreateWithoutInquiryInput = {
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdAt?: Date | string
    creator: UserCreateNestedOneWithoutAiAnalysisRecordsInput
  }

  export type AiAnalysisRecordUncheckedCreateWithoutInquiryInput = {
    id?: number
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdBy: number
    createdAt?: Date | string
  }

  export type AiAnalysisRecordCreateOrConnectWithoutInquiryInput = {
    where: AiAnalysisRecordWhereUniqueInput
    create: XOR<AiAnalysisRecordCreateWithoutInquiryInput, AiAnalysisRecordUncheckedCreateWithoutInquiryInput>
  }

  export type AiAnalysisRecordCreateManyInquiryInputEnvelope = {
    data: AiAnalysisRecordCreateManyInquiryInput | AiAnalysisRecordCreateManyInquiryInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAssignedInquiriesInput = {
    update: XOR<UserUpdateWithoutAssignedInquiriesInput, UserUncheckedUpdateWithoutAssignedInquiriesInput>
    create: XOR<UserCreateWithoutAssignedInquiriesInput, UserUncheckedCreateWithoutAssignedInquiriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAssignedInquiriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAssignedInquiriesInput, UserUncheckedUpdateWithoutAssignedInquiriesInput>
  }

  export type UserUpdateWithoutAssignedInquiriesInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAssignedInquiriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DepartmentUpsertWithoutInquiriesInput = {
    update: XOR<DepartmentUpdateWithoutInquiriesInput, DepartmentUncheckedUpdateWithoutInquiriesInput>
    create: XOR<DepartmentCreateWithoutInquiriesInput, DepartmentUncheckedCreateWithoutInquiriesInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutInquiriesInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutInquiriesInput, DepartmentUncheckedUpdateWithoutInquiriesInput>
  }

  export type DepartmentUpdateWithoutInquiriesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: DepartmentUpdateOneWithoutChildrenNestedInput
    children?: DepartmentUpdateManyWithoutParentNestedInput
    manager?: UserUpdateOneWithoutManagedDepartmentsNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutInquiriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    managerId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: DepartmentUncheckedUpdateManyWithoutParentNestedInput
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type UserUpsertWithoutCreatedInquiriesInput = {
    update: XOR<UserUpdateWithoutCreatedInquiriesInput, UserUncheckedUpdateWithoutCreatedInquiriesInput>
    create: XOR<UserCreateWithoutCreatedInquiriesInput, UserUncheckedCreateWithoutCreatedInquiriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedInquiriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedInquiriesInput, UserUncheckedUpdateWithoutCreatedInquiriesInput>
  }

  export type UserUpdateWithoutCreatedInquiriesInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedInquiriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FollowUpRecordUpsertWithWhereUniqueWithoutInquiryInput = {
    where: FollowUpRecordWhereUniqueInput
    update: XOR<FollowUpRecordUpdateWithoutInquiryInput, FollowUpRecordUncheckedUpdateWithoutInquiryInput>
    create: XOR<FollowUpRecordCreateWithoutInquiryInput, FollowUpRecordUncheckedCreateWithoutInquiryInput>
  }

  export type FollowUpRecordUpdateWithWhereUniqueWithoutInquiryInput = {
    where: FollowUpRecordWhereUniqueInput
    data: XOR<FollowUpRecordUpdateWithoutInquiryInput, FollowUpRecordUncheckedUpdateWithoutInquiryInput>
  }

  export type FollowUpRecordUpdateManyWithWhereWithoutInquiryInput = {
    where: FollowUpRecordScalarWhereInput
    data: XOR<FollowUpRecordUpdateManyMutationInput, FollowUpRecordUncheckedUpdateManyWithoutInquiryInput>
  }

  export type AiAnalysisRecordUpsertWithWhereUniqueWithoutInquiryInput = {
    where: AiAnalysisRecordWhereUniqueInput
    update: XOR<AiAnalysisRecordUpdateWithoutInquiryInput, AiAnalysisRecordUncheckedUpdateWithoutInquiryInput>
    create: XOR<AiAnalysisRecordCreateWithoutInquiryInput, AiAnalysisRecordUncheckedCreateWithoutInquiryInput>
  }

  export type AiAnalysisRecordUpdateWithWhereUniqueWithoutInquiryInput = {
    where: AiAnalysisRecordWhereUniqueInput
    data: XOR<AiAnalysisRecordUpdateWithoutInquiryInput, AiAnalysisRecordUncheckedUpdateWithoutInquiryInput>
  }

  export type AiAnalysisRecordUpdateManyWithWhereWithoutInquiryInput = {
    where: AiAnalysisRecordScalarWhereInput
    data: XOR<AiAnalysisRecordUpdateManyMutationInput, AiAnalysisRecordUncheckedUpdateManyWithoutInquiryInput>
  }

  export type UserCustomFieldConfigCreateWithoutFieldInput = {
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCustomFieldConfigsInput
  }

  export type UserCustomFieldConfigUncheckedCreateWithoutFieldInput = {
    id?: number
    userId: number
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCustomFieldConfigCreateOrConnectWithoutFieldInput = {
    where: UserCustomFieldConfigWhereUniqueInput
    create: XOR<UserCustomFieldConfigCreateWithoutFieldInput, UserCustomFieldConfigUncheckedCreateWithoutFieldInput>
  }

  export type UserCustomFieldConfigCreateManyFieldInputEnvelope = {
    data: UserCustomFieldConfigCreateManyFieldInput | UserCustomFieldConfigCreateManyFieldInput[]
    skipDuplicates?: boolean
  }

  export type UserCustomFieldConfigUpsertWithWhereUniqueWithoutFieldInput = {
    where: UserCustomFieldConfigWhereUniqueInput
    update: XOR<UserCustomFieldConfigUpdateWithoutFieldInput, UserCustomFieldConfigUncheckedUpdateWithoutFieldInput>
    create: XOR<UserCustomFieldConfigCreateWithoutFieldInput, UserCustomFieldConfigUncheckedCreateWithoutFieldInput>
  }

  export type UserCustomFieldConfigUpdateWithWhereUniqueWithoutFieldInput = {
    where: UserCustomFieldConfigWhereUniqueInput
    data: XOR<UserCustomFieldConfigUpdateWithoutFieldInput, UserCustomFieldConfigUncheckedUpdateWithoutFieldInput>
  }

  export type UserCustomFieldConfigUpdateManyWithWhereWithoutFieldInput = {
    where: UserCustomFieldConfigScalarWhereInput
    data: XOR<UserCustomFieldConfigUpdateManyMutationInput, UserCustomFieldConfigUncheckedUpdateManyWithoutFieldInput>
  }

  export type UserCreateWithoutCustomFieldConfigsInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCustomFieldConfigsInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCustomFieldConfigsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomFieldConfigsInput, UserUncheckedCreateWithoutCustomFieldConfigsInput>
  }

  export type CustomFieldDefinitionCreateWithoutUserConfigsInput = {
    fieldName: string
    fieldKey: string
    fieldType: $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: string | null
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: string | null
    status?: $Enums.CustomFieldStatus
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldDefinitionUncheckedCreateWithoutUserConfigsInput = {
    id?: number
    fieldName: string
    fieldKey: string
    fieldType: $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: string | null
    isRequired?: boolean
    isSearchable?: boolean
    displayOrder?: number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: string | null
    status?: $Enums.CustomFieldStatus
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomFieldDefinitionCreateOrConnectWithoutUserConfigsInput = {
    where: CustomFieldDefinitionWhereUniqueInput
    create: XOR<CustomFieldDefinitionCreateWithoutUserConfigsInput, CustomFieldDefinitionUncheckedCreateWithoutUserConfigsInput>
  }

  export type UserUpsertWithoutCustomFieldConfigsInput = {
    update: XOR<UserUpdateWithoutCustomFieldConfigsInput, UserUncheckedUpdateWithoutCustomFieldConfigsInput>
    create: XOR<UserCreateWithoutCustomFieldConfigsInput, UserUncheckedCreateWithoutCustomFieldConfigsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomFieldConfigsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomFieldConfigsInput, UserUncheckedUpdateWithoutCustomFieldConfigsInput>
  }

  export type UserUpdateWithoutCustomFieldConfigsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomFieldConfigsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CustomFieldDefinitionUpsertWithoutUserConfigsInput = {
    update: XOR<CustomFieldDefinitionUpdateWithoutUserConfigsInput, CustomFieldDefinitionUncheckedUpdateWithoutUserConfigsInput>
    create: XOR<CustomFieldDefinitionCreateWithoutUserConfigsInput, CustomFieldDefinitionUncheckedCreateWithoutUserConfigsInput>
    where?: CustomFieldDefinitionWhereInput
  }

  export type CustomFieldDefinitionUpdateToOneWithWhereWithoutUserConfigsInput = {
    where?: CustomFieldDefinitionWhereInput
    data: XOR<CustomFieldDefinitionUpdateWithoutUserConfigsInput, CustomFieldDefinitionUncheckedUpdateWithoutUserConfigsInput>
  }

  export type CustomFieldDefinitionUpdateWithoutUserConfigsInput = {
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldKey?: StringFieldUpdateOperationsInput | string
    fieldType?: EnumCustomFieldTypeFieldUpdateOperationsInput | $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomFieldStatusFieldUpdateOperationsInput | $Enums.CustomFieldStatus
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomFieldDefinitionUncheckedUpdateWithoutUserConfigsInput = {
    id?: IntFieldUpdateOperationsInput | number
    fieldName?: StringFieldUpdateOperationsInput | string
    fieldKey?: StringFieldUpdateOperationsInput | string
    fieldType?: EnumCustomFieldTypeFieldUpdateOperationsInput | $Enums.CustomFieldType
    fieldOptions?: NullableJsonNullValueInput | InputJsonValue
    defaultValue?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    isSearchable?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCustomFieldStatusFieldUpdateOperationsInput | $Enums.CustomFieldStatus
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InquiryCreateWithoutFollowUpRecordsInput = {
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    assignee?: UserCreateNestedOneWithoutAssignedInquiriesInput
    department?: DepartmentCreateNestedOneWithoutInquiriesInput
    creator: UserCreateNestedOneWithoutCreatedInquiriesInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutInquiryInput
  }

  export type InquiryUncheckedCreateWithoutFollowUpRecordsInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutInquiryInput
  }

  export type InquiryCreateOrConnectWithoutFollowUpRecordsInput = {
    where: InquiryWhereUniqueInput
    create: XOR<InquiryCreateWithoutFollowUpRecordsInput, InquiryUncheckedCreateWithoutFollowUpRecordsInput>
  }

  export type UserCreateWithoutFollowUpRecordsInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFollowUpRecordsInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFollowUpRecordsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFollowUpRecordsInput, UserUncheckedCreateWithoutFollowUpRecordsInput>
  }

  export type InquiryUpsertWithoutFollowUpRecordsInput = {
    update: XOR<InquiryUpdateWithoutFollowUpRecordsInput, InquiryUncheckedUpdateWithoutFollowUpRecordsInput>
    create: XOR<InquiryCreateWithoutFollowUpRecordsInput, InquiryUncheckedCreateWithoutFollowUpRecordsInput>
    where?: InquiryWhereInput
  }

  export type InquiryUpdateToOneWithWhereWithoutFollowUpRecordsInput = {
    where?: InquiryWhereInput
    data: XOR<InquiryUpdateWithoutFollowUpRecordsInput, InquiryUncheckedUpdateWithoutFollowUpRecordsInput>
  }

  export type InquiryUpdateWithoutFollowUpRecordsInput = {
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignee?: UserUpdateOneWithoutAssignedInquiriesNestedInput
    department?: DepartmentUpdateOneWithoutInquiriesNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedInquiriesNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateWithoutFollowUpRecordsInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutInquiryNestedInput
  }

  export type UserUpsertWithoutFollowUpRecordsInput = {
    update: XOR<UserUpdateWithoutFollowUpRecordsInput, UserUncheckedUpdateWithoutFollowUpRecordsInput>
    create: XOR<UserCreateWithoutFollowUpRecordsInput, UserUncheckedCreateWithoutFollowUpRecordsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFollowUpRecordsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFollowUpRecordsInput, UserUncheckedUpdateWithoutFollowUpRecordsInput>
  }

  export type UserUpdateWithoutFollowUpRecordsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFollowUpRecordsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InquiryCreateWithoutAiAnalysisRecordsInput = {
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    assignee?: UserCreateNestedOneWithoutAssignedInquiriesInput
    department?: DepartmentCreateNestedOneWithoutInquiriesInput
    creator: UserCreateNestedOneWithoutCreatedInquiriesInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutInquiryInput
  }

  export type InquiryUncheckedCreateWithoutAiAnalysisRecordsInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutInquiryInput
  }

  export type InquiryCreateOrConnectWithoutAiAnalysisRecordsInput = {
    where: InquiryWhereUniqueInput
    create: XOR<InquiryCreateWithoutAiAnalysisRecordsInput, InquiryUncheckedCreateWithoutAiAnalysisRecordsInput>
  }

  export type UserCreateWithoutAiAnalysisRecordsInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAiAnalysisRecordsInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
    operationLogs?: OperationLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAiAnalysisRecordsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAiAnalysisRecordsInput, UserUncheckedCreateWithoutAiAnalysisRecordsInput>
  }

  export type InquiryUpsertWithoutAiAnalysisRecordsInput = {
    update: XOR<InquiryUpdateWithoutAiAnalysisRecordsInput, InquiryUncheckedUpdateWithoutAiAnalysisRecordsInput>
    create: XOR<InquiryCreateWithoutAiAnalysisRecordsInput, InquiryUncheckedCreateWithoutAiAnalysisRecordsInput>
    where?: InquiryWhereInput
  }

  export type InquiryUpdateToOneWithWhereWithoutAiAnalysisRecordsInput = {
    where?: InquiryWhereInput
    data: XOR<InquiryUpdateWithoutAiAnalysisRecordsInput, InquiryUncheckedUpdateWithoutAiAnalysisRecordsInput>
  }

  export type InquiryUpdateWithoutAiAnalysisRecordsInput = {
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignee?: UserUpdateOneWithoutAssignedInquiriesNestedInput
    department?: DepartmentUpdateOneWithoutInquiriesNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedInquiriesNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateWithoutAiAnalysisRecordsInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutInquiryNestedInput
  }

  export type UserUpsertWithoutAiAnalysisRecordsInput = {
    update: XOR<UserUpdateWithoutAiAnalysisRecordsInput, UserUncheckedUpdateWithoutAiAnalysisRecordsInput>
    create: XOR<UserCreateWithoutAiAnalysisRecordsInput, UserUncheckedCreateWithoutAiAnalysisRecordsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAiAnalysisRecordsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAiAnalysisRecordsInput, UserUncheckedUpdateWithoutAiAnalysisRecordsInput>
  }

  export type UserUpdateWithoutAiAnalysisRecordsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAiAnalysisRecordsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutOperationLogsInput = {
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    department?: DepartmentCreateNestedOneWithoutUsersInput
    managedDepartments?: DepartmentCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOperationLogsInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    departmentId?: number | null
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    managedDepartments?: DepartmentUncheckedCreateNestedManyWithoutManagerInput
    createdInquiries?: InquiryUncheckedCreateNestedManyWithoutCreatorInput
    assignedInquiries?: InquiryUncheckedCreateNestedManyWithoutAssigneeInput
    followUpRecords?: FollowUpRecordUncheckedCreateNestedManyWithoutCreatorInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedCreateNestedManyWithoutCreatorInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOperationLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOperationLogsInput, UserUncheckedCreateWithoutOperationLogsInput>
  }

  export type UserUpsertWithoutOperationLogsInput = {
    update: XOR<UserUpdateWithoutOperationLogsInput, UserUncheckedUpdateWithoutOperationLogsInput>
    create: XOR<UserCreateWithoutOperationLogsInput, UserUncheckedCreateWithoutOperationLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOperationLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOperationLogsInput, UserUncheckedUpdateWithoutOperationLogsInput>
  }

  export type UserUpdateWithoutOperationLogsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutUsersNestedInput
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOperationLogsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DepartmentCreateManyManagerInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InquiryCreateManyCreatorInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InquiryCreateManyAssigneeInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    departmentId?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FollowUpRecordCreateManyCreatorInput = {
    id?: number
    inquiryId: number
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AiAnalysisRecordCreateManyCreatorInput = {
    id?: number
    inquiryId: number
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdAt?: Date | string
  }

  export type UserCustomFieldConfigCreateManyUserInput = {
    id?: number
    fieldId: number
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OperationLogCreateManyUserInput = {
    id?: number
    operationType: string
    resourceType: string
    resourceId?: number | null
    operationDescription?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type DepartmentUpdateWithoutManagerInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: DepartmentUpdateOneWithoutChildrenNestedInput
    children?: DepartmentUpdateManyWithoutParentNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutManagerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: DepartmentUncheckedUpdateManyWithoutParentNestedInput
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateManyWithoutManagerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InquiryUpdateWithoutCreatorInput = {
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignee?: UserUpdateOneWithoutAssignedInquiriesNestedInput
    department?: DepartmentUpdateOneWithoutInquiriesNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateManyWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InquiryUpdateWithoutAssigneeInput = {
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneWithoutInquiriesNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedInquiriesNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateWithoutAssigneeInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateManyWithoutAssigneeInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    departmentId?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpRecordUpdateWithoutCreatorInput = {
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inquiry?: InquiryUpdateOneRequiredWithoutFollowUpRecordsNestedInput
  }

  export type FollowUpRecordUncheckedUpdateWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpRecordUncheckedUpdateManyWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AiAnalysisRecordUpdateWithoutCreatorInput = {
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inquiry?: InquiryUpdateOneRequiredWithoutAiAnalysisRecordsNestedInput
  }

  export type AiAnalysisRecordUncheckedUpdateWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AiAnalysisRecordUncheckedUpdateManyWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryId?: IntFieldUpdateOperationsInput | number
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCustomFieldConfigUpdateWithoutUserInput = {
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    field?: CustomFieldDefinitionUpdateOneRequiredWithoutUserConfigsNestedInput
  }

  export type UserCustomFieldConfigUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    fieldId?: IntFieldUpdateOperationsInput | number
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCustomFieldConfigUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    fieldId?: IntFieldUpdateOperationsInput | number
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OperationLogUpdateWithoutUserInput = {
    operationType?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableIntFieldUpdateOperationsInput | number | null
    operationDescription?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OperationLogUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    operationType?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableIntFieldUpdateOperationsInput | number | null
    operationDescription?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OperationLogUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    operationType?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableIntFieldUpdateOperationsInput | number | null
    operationDescription?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestData?: NullableJsonNullValueInput | InputJsonValue
    responseData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartmentCreateManyParentInput = {
    id?: number
    name: string
    description?: string | null
    managerId?: number | null
    status?: $Enums.DepartmentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateManyDepartmentInput = {
    id?: number
    username: string
    email: string
    passwordHash: string
    fullName: string
    role?: $Enums.UserRole
    phone?: string | null
    avatarUrl?: string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InquiryCreateManyDepartmentInput = {
    id?: number
    inquiryNo: string
    title: string
    content: string
    sourceChannel: string
    customerName: string
    customerEmail?: string | null
    customerPhone?: string | null
    customerCompany?: string | null
    customerAddress?: string | null
    customerType?: $Enums.CustomerType
    region?: string | null
    country?: string | null
    assignedTo?: number | null
    priority?: $Enums.Priority
    status?: $Enums.InquiryStatus
    estimatedValue?: Decimal | DecimalJsLike | number | string | null
    currency?: string | null
    expectedCloseDate?: Date | string | null
    aiAnalysisScore?: Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartmentUpdateWithoutParentInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: DepartmentUpdateManyWithoutParentNestedInput
    manager?: UserUpdateOneWithoutManagedDepartmentsNestedInput
    users?: UserUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutParentInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: DepartmentUncheckedUpdateManyWithoutParentNestedInput
    users?: UserUncheckedUpdateManyWithoutDepartmentNestedInput
    inquiries?: InquiryUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateManyWithoutParentInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumDepartmentStatusFieldUpdateOperationsInput | $Enums.DepartmentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutDepartmentInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    managedDepartments?: DepartmentUncheckedUpdateManyWithoutManagerNestedInput
    createdInquiries?: InquiryUncheckedUpdateManyWithoutCreatorNestedInput
    assignedInquiries?: InquiryUncheckedUpdateManyWithoutAssigneeNestedInput
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutCreatorNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutCreatorNestedInput
    customFieldConfigs?: UserCustomFieldConfigUncheckedUpdateManyWithoutUserNestedInput
    operationLogs?: OperationLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InquiryUpdateWithoutDepartmentInput = {
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignee?: UserUpdateOneWithoutAssignedInquiriesNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedInquiriesNestedInput
    followUpRecords?: FollowUpRecordUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    followUpRecords?: FollowUpRecordUncheckedUpdateManyWithoutInquiryNestedInput
    aiAnalysisRecords?: AiAnalysisRecordUncheckedUpdateManyWithoutInquiryNestedInput
  }

  export type InquiryUncheckedUpdateManyWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    inquiryNo?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sourceChannel?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerPhone?: NullableStringFieldUpdateOperationsInput | string | null
    customerCompany?: NullableStringFieldUpdateOperationsInput | string | null
    customerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    customerType?: EnumCustomerTypeFieldUpdateOperationsInput | $Enums.CustomerType
    region?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    estimatedValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currency?: NullableStringFieldUpdateOperationsInput | string | null
    expectedCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    aiAnalysisScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    aiAnalysisSummary?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    customFields?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpRecordCreateManyInquiryInput = {
    id?: number
    followUpType: $Enums.FollowUpType
    content: string
    result?: $Enums.FollowUpResult | null
    nextFollowUpDate?: Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AiAnalysisRecordCreateManyInquiryInput = {
    id?: number
    aiProvider: $Enums.AiProvider
    modelName: string
    analysisType: $Enums.AnalysisType
    inputData: JsonNullValueInput | InputJsonValue
    outputData: JsonNullValueInput | InputJsonValue
    confidenceScore?: Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: number | null
    costAmount?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.AnalysisStatus
    errorMessage?: string | null
    createdBy: number
    createdAt?: Date | string
  }

  export type FollowUpRecordUpdateWithoutInquiryInput = {
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutFollowUpRecordsNestedInput
  }

  export type FollowUpRecordUncheckedUpdateWithoutInquiryInput = {
    id?: IntFieldUpdateOperationsInput | number
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpRecordUncheckedUpdateManyWithoutInquiryInput = {
    id?: IntFieldUpdateOperationsInput | number
    followUpType?: EnumFollowUpTypeFieldUpdateOperationsInput | $Enums.FollowUpType
    content?: StringFieldUpdateOperationsInput | string
    result?: NullableEnumFollowUpResultFieldUpdateOperationsInput | $Enums.FollowUpResult | null
    nextFollowUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    attachments?: NullableJsonNullValueInput | InputJsonValue
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AiAnalysisRecordUpdateWithoutInquiryInput = {
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutAiAnalysisRecordsNestedInput
  }

  export type AiAnalysisRecordUncheckedUpdateWithoutInquiryInput = {
    id?: IntFieldUpdateOperationsInput | number
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AiAnalysisRecordUncheckedUpdateManyWithoutInquiryInput = {
    id?: IntFieldUpdateOperationsInput | number
    aiProvider?: EnumAiProviderFieldUpdateOperationsInput | $Enums.AiProvider
    modelName?: StringFieldUpdateOperationsInput | string
    analysisType?: EnumAnalysisTypeFieldUpdateOperationsInput | $Enums.AnalysisType
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    confidenceScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    processingTimeMs?: NullableIntFieldUpdateOperationsInput | number | null
    costAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumAnalysisStatusFieldUpdateOperationsInput | $Enums.AnalysisStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdBy?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCustomFieldConfigCreateManyFieldInput = {
    id?: number
    userId: number
    isVisible?: boolean
    displayOrder?: number
    columnWidth?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCustomFieldConfigUpdateWithoutFieldInput = {
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCustomFieldConfigsNestedInput
  }

  export type UserCustomFieldConfigUncheckedUpdateWithoutFieldInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCustomFieldConfigUncheckedUpdateManyWithoutFieldInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    columnWidth?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}